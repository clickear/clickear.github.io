<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AboutTheGarden on</title><link>https://clickear.github.io/</link><description>Recent content in AboutTheGarden on</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://clickear.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://clickear.github.io/2022-12-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2022-12-27/</guid><description>今天的灵感或闪念 [[§javaAgent]]</description></item><item><title/><link>https://clickear.github.io/2023-01-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2023-01-19/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://clickear.github.io/2023-01-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2023-01-20/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://clickear.github.io/2PC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2PC/</guid><description>概念 二阶段提交协议，不仅仅是协议，也是一种非常经典的思想。二阶段提交在达成提交操作共识的算法中应用广泛，比如 XA 协议、TCC、Paxos、Raft 等。我希望你不仅能理解二阶段提交协议，更能理解协议背后的二阶段提交的思想，当后续需要时，能灵活地根据二阶段提交思想，设计新的事务或一致性协议。</description></item><item><title/><link>https://clickear.github.io/ACID/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/ACID/</guid><description>常青笔记 概念 ACID A (Atomicity) 原子性：整个事务中的所有操作，要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样
C (Consistency) [[一致性]]：在事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。在事务开始和完成时,数据都必须保持一致状态。这意味着所有相关的数据规则都必须应用于事务的修改,以保持数据的完整性;事务结束时,所有的内部数据结构(如B树索引或双向链表)也都必须是正确的
I (Isolation)隔离性：一个事务的执行不能其它事务干扰。即一个事务内部的操作及使用的数据对其它并发事务是隔离的，并发执行的各个事务之间不能互相干扰
D (Durability) 持久性：在事务完成以后，该事务所对数据库所作的更改便持久的保存在数据库之中，并不会被回滚。
本地事务 比如可以通过锁、时间序列等机制保障操作的顺序执行，让系统实现 ACID 特性
[[分布式事务]] 如何保证分布式下的呢？分布式事务协议，比如二阶段提交协议和 TCC（Try-Confirm-Cancel）等 你可以将 ACID 特性理解为 CAP 中一致性的边界，最强的一致性，也就是 CAP 的酸（Acid）。根据 CAP 理论，如果在分布式系统中实现了一致性，可用性必然受到影响。比如，如果出现一个节点故障，则整个分布式事务的执行都是失败的。实际上，绝大部分场景对一致性要求没那么高，短暂的不一致是能接受的，另外，也基于可用性和并发性能的考虑，建议在开发实现分布式系统，如果不是必须，尽量不要实现事务，可以考虑采用强一致性或最终一致性 [[2PC]]</description></item><item><title/><link>https://clickear.github.io/AP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/AP/</guid><description/></item><item><title/><link>https://clickear.github.io/BASE%E7%90%86%E8%AE%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/BASE%E7%90%86%E8%AE%BA/</guid><description>追求可用性 常青笔记 BASE 是对 CAP 中一致性和可用性权衡的结果。更强调==追求可用性==。核心思想是，即使无法做到强一致性，但每个系统都可以根据自身的业务 特点，采用适当的方式来使系统达到**[[最终一致性]]** 基本可用，即指可以允许损失部分可用性。常见的服务质量下降有两种类型。响应时间的损失和功能的损失([[服务降级]])。又可以从其他角度分为流量削峰、延迟响应、体验降级、过载保护。 [[ACID]] 理论是传统数据库常用的设计理念，追求强一致性模型。BASE 理论支持的是大型分布式系统，通过牺牲强一致性获得高可用性。BASE 理论在很大程度上，解决了事务型系统在性能、容错、可用性等方面痛点。BASE 理论在 NoSQL 中应用广泛，是 NoSQL 系统设计的事实上的理论支撑。 概念 BASE 理论是 CAP 理论中的 AP 的延伸，是对互联网大规模分布式系统的实践总结，强调可用性。</description></item><item><title/><link>https://clickear.github.io/CAP%E5%AE%9A%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/CAP%E5%AE%9A%E7%90%86/</guid><description>总结 概念 CAP 定理指的是在一个分布式系统中，Consistency（一致性）、 Availability（可用性）、 Partition tolerance（分区容错性），三者不可兼得。
[[一致性]]（C）：分布式系统中多个主机之间是否能够保持数据一致的特性。即，当系统数据发生更新操作后，各个主机中的数据仍然处于一致的状态。 [[可用性]]（A）：系统提供的服务必须一直处于可用的状态，即对于用户的每一个请求，系统总是可以在有限的时间内对用户做出响应。 [[分区容错性]]（P）：分布式系统在遇到任何网络分区故障时，仍能够保证对外提供满足一致性或可用性的服务。 为什么AP和CP不可兼得 对于分布式系统，网络环境是相对不可控的。出现网络分区是不可避免的，因此系统必须具备分区容错性(P)。所以系统要么是AP，要么是CP。
为什么[[AP]]和[[CP]]不可兼得？
是因为数据同步是需要时间的。如果要数据一致，要等同步完，那就是强一致性，但是此时其它客户端肯定不能访问。要么其它客户端能访问，那么数据就一定不是实时的。即保证了可用性。
在同步期间，若允许 client 访问，则 client 从不同节点 读取到的数据就可能是不相同的，即牺牲了一致性保证了可用性；AP 若不允许 client 访问，则 client 在同步期间无法获取服务，但一段时间后再访问系统，无论访问到的是哪个节点，读 取到的数据一定都是相同的。即牺牲了可用性保证了一致性.</description></item><item><title/><link>https://clickear.github.io/Git%E5%BC%80%E5%8F%91%E4%B8%8A%E7%BA%BF%E6%B5%81%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Git%E5%BC%80%E5%8F%91%E4%B8%8A%E7%BA%BF%E6%B5%81%E7%A8%8B/</guid><description>1.开发起始分支 从master分支clone出开发分支
2.开发分支命名 功能分支f_feature_xxx
修复分支f_hotfix_xxx
3.开发完成，联调 (暂无联调环境) 将本地开发分支合并到f_common_dev
f_common_dev包版本固定：1.0.0-DEV-SNAPSHOT
如有修改，修改本地分支代码并提交，再合并到公共分支。勿修改公共分支。
4.联调完成，提测 将本地开发分支合并到f_common_test
发起code review(将需求wiki，git MR发送给相关review人)
f_common_test包版本固定：1.0.0-TEST-SNAPSHOT
如有修改，修改本地分支代码并提交，再合并到公共分支。勿修改公共分支。
5.测试完成，发布线上RELEASE包 拉取master最新代码，将master合并到本地开发分支，更新包版本为RELEASE版本，deploy
发起code review(将需求wiki，git MR发送给相关review人)</description></item><item><title/><link>https://clickear.github.io/Gossip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Gossip/</guid><description>常青笔记 流言蜚语，原来也可以实现一致性。 实现数据副本的最终一致性时，一般而言，直接邮寄的方式是一定要实现的，因为不需要做一致性对比，只是通过发送更新数据或缓存重传，来修复数据的不一致，性能损耗低。在存储组件中，节点都是已知的，一般采用反熵修复数据副本的一致性。当集群节点是变化的，或者集群节点数比较多时，这时要采用谣言传播的方式，同步更新数据，实现最终一致 重要摘要 gossip，就像流言蜚语一样，利用一种随机、带有传染性的方式，将信息传播到整个网络中，并在一定时间内，使得系统内的所有节点数据一致。对你来说，掌握这个协议不仅能很好地理解这种最常用的，实现最终一致性的算法，也能在后续工作中得心应手地实现数据的最终一致性。
Gossip 的三板斧分别是：直接邮寄（Direct Mail）、反熵（Anti-entropy）和谣言传播（Rumor mongering）
直接邮寄 直接发送更新数据，当数据发送失败时，将数据缓存下来，然后重传。
接邮寄虽然实现起来比较容易，数据同步也很及时，但可能会因为缓存队列满了而丢数据。也就是说，只采用直接邮寄是无法实现最终一致性的.
反熵 反熵指的是集群中的节点，每隔段时间就随机选择某个其他节点，然后通过互相交换自己的所有数据来消除两者之间的差异，实现数据的最终一致性。
反熵是一种通过异步修复实现最终一致性的方法。</description></item><item><title/><link>https://clickear.github.io/https/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/https/</guid><description>文献 HTTPS 详解一：附带最精美详尽的 HTTPS 原理图 - SegmentFault 思否</description></item><item><title/><link>https://clickear.github.io/img_fastthreadlocal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/img_fastthreadlocal/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements 堆 ^2FeCciaM
栈 ^X8iHTvy6</description></item><item><title/><link>https://clickear.github.io/img_threadlocal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/img_threadlocal/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements 堆 ^LStIgAL8
栈 ^mmAeyjgR</description></item><item><title/><link>https://clickear.github.io/javaAgent/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/javaAgent/</guid><description/></item><item><title/><link>https://clickear.github.io/KMP%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/KMP%E7%AE%97%E6%B3%95/</guid><description>字符串匹配 所谓字符串匹配, 是这样一种问题: &amp;ldquo;字符串 P 是否为字符串 S 的子串? 如果是, 它出现在 S 的哪些位置? &amp;quot; 其中 S 称为主串; P 称为模式串. 下面的图片展示了一个例子
算法 Brute-Force（暴力法） 枚举 i = 0, 1, 2 &amp;hellip; , len(S)-len(P) 将 S[i : i+len(P)] 与 P 作比较.</description></item><item><title/><link>https://clickear.github.io/MQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/MQ/</guid><description>MQ</description></item><item><title/><link>https://clickear.github.io/MultiPaxos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/MultiPaxos/</guid><description>常青笔记 Multi-Paxos 思想，描述的是执行多个 Basic Paxos 实例，就一系列值达成共识。不关心最终达成共识的值是什么，不关心各值的顺序。这与[[ZAB]]是不一样的 相比[[Paxos| basic paxos]] 优化思路是，引入[[领导者模型]]来优化。这样就省掉了多次rpc调用和活锁问题。优化 Basic Paxos 执行。 概念 优化 引入 领导者模型，这样避免了活锁和多次rpc调用。领导者节点作为唯一提议者，这样就不存在多个提议者同时提交提案的情况，也就不存在提案冲突的情况了 优化 Basic Paxos 执行，因为只有1个提案者，所以每次都是最新的。当主节点处于稳定状态时，就省掉准备阶段，直接进入接受阶段，所以在很大程度上减少了往返的消息数，提升了性能，降低了延迟 过程 Multi Paxos 对 Basic Paxos 的核心改进是增加了“选主”的过程，提案节点会通过定时轮询（心跳），确定当前网络中的所有节点里是否存在有一个主提案节点，一旦没有发现主节点存在，节点就会在心跳超时后使用 Basic Paxos 中定义的准备、批准的两轮网络交互过程，向所有其他节点广播自己希望竞选主节点的请求，希望整个分布式系统对“由我作为主节点”这件事情协商达成一致共识，如果得到了决策节点中多数派的批准，便宣告竞选成功。当选主完成之后，除非主节点失联之后发起重新竞选，否则从此往后，就只有主节点本身才能够提出提案。此时，无论哪个提案节点接收到客户端的操作请求，都会将请求转发给主节点来完成提案，而主节点提案的时候，也就无需再次经过准备过程，因为可以视作是经过选举时的那一次准备之后，后续的提案都是对相同提案 ID 的一连串的批准过程。也可以通俗理解为选主过后，就不会再有其他节点与它竞争，相当于是处于无并发的环境当中进行的有序操作，所以此时系统中要对某个值达成一致，只需要进行一次批准的交互即可</description></item><item><title/><link>https://clickear.github.io/PBFT/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/PBFT/</guid><description>重要摘要 [[口信消息]]型拜占庭问题之解在实际项目中是如何落地的呢。它很难在实际项目落地，因为口信消息型拜占庭问题之解是一个非常理论化的算法，没有和实际场景结合，也没有考虑如何在实际场景中落地和实现。它实现的是在拜占庭错误场景下，忠将们如何在叛徒干扰时，就一致行动达成共识。但是它并不关心结果是什么，这会出现一种情况：现在适合进攻，但将军们达成的最终共识却是撤退。</description></item><item><title/><link>https://clickear.github.io/POW/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/POW/</guid><description>常青笔记 重要摘要 在比特币的区块链中，PoW 算法，是通过 SHA256 进行哈希运算，计算出符合指定条件的哈希值，来证明工作量的。 51% 攻击，本质是因为比特币的区块链约定了“最长链胜出，其它节点在这条链基础上扩展”，攻击者可以通过优势算力实现对最长链的争夺。 除了通过 PoW 算法，增加坏人作恶的成本，比特币还通过“挖矿得币”奖励好人，最终保持了整个系统的运行稳定 资料 14 | PoW算法：有办法黑比特币吗？ 极客时间 | 分布式技术原理与算法解析</description></item><item><title/><link>https://clickear.github.io/Quorum-NWR/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Quorum-NWR/</guid><description>常青笔记 一般而言，不推荐副本数超过当前的节点数，因为当副本数据超过节点数时，就会出现同一个节点存在多个副本的情况。当这个节点故障时，上面的多个副本就都受到影响了 当 W + R &amp;gt; N 时，可以实现强一致性。另外，如何设置 N、W、R 值，取决于我们想优化哪方面的性能。比如，N 决定了副本的冗余备份能力；如果设置 W = N，读性能比较好；如果设置 R = N，写性能比较好；如果设置 W = (N + 1) / 2、R = (N + 1) / 2，容错能力比较好，能容忍少数节点（也就是 (N - 1) / 2）的故障 重要摘要 Quorum NWR 的三要素 N N 表示副本数，又叫做复制因子（Replication Factor）。也就是说，N 表示集群中同一份数据有多少个副本。 在这个三节点的集群中，DATA-1 有 2 个副本，DATA-2 有 3 个副本，DATA-3 有 1 个副本。也就是说，副本数可以不等于节点数，不同的数据可以有不同的副本数</description></item><item><title/><link>https://clickear.github.io/Quorum%E6%9C%BA%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Quorum%E6%9C%BA%E5%88%B6/</guid><description>概念 等价于 [[多数派]] 分布式环境下网络分区现象是不可能消除的，甚至允许不再追求系统内所有节点在任何情况下的数据状态都一致，而是采用“少数服从多数”的原则，一旦系统中过半数的节点中完成了状态的转换，就认为数据的变化已经被正确地存储在系统当中，这样就可以容忍少数（通常是不超过半数）的节点失联，使得增加机器数量对系统整体的可用性变成是有益的，这种思想在分布式中被称为“ Quorum 机制”
级别 分布式写一致性级别（All、[[Quorum机制]]、One、Any）
资料 [[凤凰架构]]</description></item><item><title/><link>https://clickear.github.io/README-2022-08-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/README-2022-08-21/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements me ^JT0EJxgg
my second brain ^MU3qp0VJ</description></item><item><title/><link>https://clickear.github.io/readView%E7%A4%BA%E6%84%8F%E5%9B%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/readView%E7%A4%BA%E6%84%8F%E5%9B%BE/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements 已提交事务 ^6srMaljL
未提交事务 ^CakmBn4V</description></item><item><title/><link>https://clickear.github.io/-%E7%AE%97%E6%B3%95%E7%9B%AE%E5%BD%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E7%AE%97%E6%B3%95%E7%9B%AE%E5%BD%95/</guid><description> 数据结构 [[树]] 线性表 [[数组]] 一维数组 二维数组(矩阵) [[字符串基础]] 字符串函数的应用 字典序 字符串遍历 字符串比较 字符串分割 字符计数 字符串反转 回文串 字符串匹配 KMP 字典树 前缀自动机 后缀树组 链表 单项链表 双向链表 队列 FIFO队列 双端队列 单调队列 [[栈]] FILO栈 单调递增栈 基础算法 排序算法 比较排序入门 冒泡排序 简单插入排序 简单选择排序 比较排序进阶 归并排序 希尔排序 快速排序 非比较排序 桶排序 计数排序 基数排序 排序API使用 多关键字排序 字典序 结构体排序 枚举 分而治之 [[二分查找]] 点分治 树分治 [[贪心算法]] 搜索 [[动态规划法]] 杂项算法 [[滑动窗口]]</description></item><item><title/><link>https://clickear.github.io/%E4%B8%80%E8%87%B4%E6%80%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%80%E8%87%B4%E6%80%A7/</guid><description>[[CAP定理]]中的一致性(访问数据的一致性) 分布式系统中多个主机之间是否能够保持数据一致的特性。即，当系统数据发生更新操作后，各个主机中的数据仍然处于一致的状态。详见
ACID中的一致性(系统状态的一致性) 在事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。在事务开始和完成时,数据都必须保持一致状态。这意味着所有相关的数据规则都必须应用于事务的修改,以保持数据的完整性;事务结束时,所有的内部数据结构(如B树索引或双向链表)也都必须是正确的。
一致性分类 ![[CAP定理#一致性的分类]]</description></item><item><title/><link>https://clickear.github.io/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid><description>常青笔记 优点是比较次数少，查找速度快，平均性能好； 缺点是要求待查表为有序表，且插入删除困难。 因此，二分查找方法适用于不经常变动而查找频繁的有序列表。 使用条件：查找序列是顺序结构，有序。 使用总结， 注意二分查询的开闭区间问题即可。如 [] 左右闭区间 摘要 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 /** * 二分查找 * @param array 待查询数据，必须为一个有序数组 * * @return 无查询，返回-1 */ public static int binarySearch(int[] array, int searchValue) { if (array.</description></item><item><title/><link>https://clickear.github.io/%E5%87%A4%E5%87%B0%E6%9E%B6%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%87%A4%E5%87%B0%E6%9E%B6%E6%9E%84/</guid><description>凤凰架构
Quorum机制</description></item><item><title/><link>https://clickear.github.io/%E5%88%86%E5%8C%BA%E5%AE%B9%E9%94%99%E6%80%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%86%E5%8C%BA%E5%AE%B9%E9%94%99%E6%80%A7/</guid><description>常青笔记 当节点间出现任意数量的消息丢失或高延迟的时候，系统仍然可以继续提供服务，强调的是集群对分区故障的容错能力 概念 分区容错性说的是，当节点间出现任意数量的消息丢失或高延迟的时候，系统仍然可以继续提供服务。也就是说，分布式系统在告诉访问本系统的客户端：不管我的内部出现什么样的数据同步问题，我会一直运行，提供服务。这个指标，强调的是集群对分区故障的容错能力。</description></item><item><title/><link>https://clickear.github.io/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%AF%BC%E8%AE%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%AF%BC%E8%AE%BA/</guid><description>总结 分布式 理论 [[CAP定理]] [[ACID]] 追求一致性 [[BASE理论]] 追求可用性 基础知识 分布式算法种类 [[∑ 分布式算法]] ![[∑ 分布式算法#分布式算法种类]] 推荐学习路径 书单 [[凤凰架构]] 分布式算法</description></item><item><title/><link>https://clickear.github.io/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/</guid><description/></item><item><title/><link>https://clickear.github.io/%E5%88%86%E6%94%AF%E9%99%90%E7%95%8C%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%86%E6%94%AF%E9%99%90%E7%95%8C%E6%B3%95/</guid><description>广度优先搜索（BFS）策略 所谓“分支”，就是采用广度优先的策略，依次搜索当前节点的所有分支 抛弃不满足约束条件的相邻节点，其余节点加入“活节点表” 然后从表中选择一个节点作为下一个扩展节点，继续搜索 限界策略 为了加速搜索的进程，一般会在每一个活节点处，计算一个函数值 根据这些已计算出的函数值，从当前活节点表中选择一个最有利的节点作为扩展节点，使搜索朝着解空间树上有最优解的分支推进，以便尽快地找出一个最优解 回溯法与分支界限法的区别 [[回溯法]] [[分支限界法]] 对解空间树的搜索方式 DFS BFS 存储节点常用数据结构 堆栈 队列 应用场景 找出满足约束条件的所有解</description></item><item><title/><link>https://clickear.github.io/%E5%88%86%E6%B2%BB%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%86%E6%B2%BB%E6%B3%95/</guid><description>分而治之 问题的规模越小，越容易解决 把复杂问题不断分成多个相同或相似的子问题，直到每个子问题可以简单地进行求解 将所有子问题的解合并起来，就是原问题的解 分治和递归 产生的子问题形式往往和原问题相同，只是原问题的较小规模表达 使用递归手段求解子问题，可以很容易地将子问题的解合并，得到原问题的解 基本步骤 step1：将原问题分解为若干个规模较小，相互独立，与原问题形式相同的子问题 step2：若子问题规模较小而容易被解决则直接解，否则递归地解各个子问题 step3：将各个子问题的解合并为原问题的解 应用场景 二分搜索、大整数乘法、归并排序、快速排序 棋盘覆盖问题、循环赛日程表问题、汉诺塔问题等</description></item><item><title/><link>https://clickear.github.io/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E6%B3%95/</guid><description>动态决策的过程 把原问题划分成多个“阶段”，依次来做“决策”，得到当前的局部解 每次决策依赖于当前的“状态”，随即引起状态的转移 一个决策序列就是在变化的状态中产生出来的 这种多阶段决策最优化，解决问题的过程就称为 动态规划 最优化问题 动态规划通常用来求解最优化问题 可以有很多可行解，每个解都对应一个值，我们希望找到具有最优值的解 一般会把每个决策的结果缓存起来。
应用场景 最优二叉搜索树、最长公共子序列、背包问题等等 练习题 视频图解 动态规划 正则表达式 - 正则表达式匹配 - 力扣（LeetCode）</description></item><item><title/><link>https://clickear.github.io/%E5%8F%AF%E7%94%A8%E6%80%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%AF%E7%94%A8%E6%80%A7/</guid><description>常青笔记 可用性强调的是服务可用,但不保证数据的一致 概念 可用性说的是任何来自客户端的请求，不管访问哪个非故障节点，都能得到响应数据，但不保证是同一份最新数据，可用性强调的是服务可用,但不保证数据的一致</description></item><item><title/><link>https://clickear.github.io/%E5%9B%9E%E6%BA%AF%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9B%9E%E6%BA%AF%E6%B3%95/</guid><description>有点类似暴力法
选优搜索法 按照一定的选优条件，不停向前搜索，直到达到目标 如果搜索到某一步，发现之前的选择并不优，就退回一步重新选择 通用解题方法 深度优先搜索（DFS）策略 在包含问题所有解的解空间树中，按照深度优先搜索的策略，从根结点出发、深度搜索解空间树 回溯法就是对隐式图的深度优先搜索算法</description></item><item><title/><link>https://clickear.github.io/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/</guid><description/></item><item><title/><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E5%90%B5%E6%9E%B6-%E6%9C%B1%E8%BF%AA%E6%96%AF%E8%8E%B1%E7%89%B9-%E9%B2%8D%E5%8B%83%E8%8E%B1%E7%89%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E5%90%B5%E6%9E%B6-%E6%9C%B1%E8%BF%AA%E6%96%AF%E8%8E%B1%E7%89%B9-%E9%B2%8D%E5%8B%83%E8%8E%B1%E7%89%B9/</guid><description>元数据 [!abstract] 如何正确吵架
书名： 如何正确吵架 作者： 朱迪斯·莱特 鲍勃·莱特 简介： 你也许见过很多教你避免吵架、和谐沟通的婚姻指南，本书的主题却正好与之相反。莱特夫妇在对大量伴侣进行研究、提供咨询和培训的基础上提出，将无效争吵转变为高效率、有意义的争吵，借争吵之机发掘其后隐藏的真正问题，才是促进亲密关系健康发展的关键方法。吵架不可怕，可怕的是不知道为什么而吵，徒然让无效争吵一再损害伴侣间的感情。本书将教你分辨15种最常见的争吵类型，并介绍挖掘争吵的本质、将冲突转变为幸福的6个技巧。你将看到，某些通过主流文化深入人心的爱情理论是多么不可靠，能给双方带来真正幸福的亲密关系其实需要你们走下云端，在脚踏实地的冒险中获得。你们能走上持续幸福的道路，同时成为更好的自己，奥秘尽在每一次小小的争吵之中。 出版时间 2019-03-01 00:00:00 ISBN： 9787511377524 分类： 生活百科-情感 出版社： 中国华侨出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title/><link>https://clickear.github.io/%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E4%BB%8A%E5%A4%A9%E6%98%8E%E5%A4%A9%E4%BC%9A%E4%B8%8D%E4%BC%9A%E6%9C%89%E6%98%A8%E5%A4%A9-%E4%BC%8A%E5%A4%AB%E5%8D%9A%E8%90%A8%E5%B0%94%E7%89%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E4%BB%8A%E5%A4%A9%E6%98%8E%E5%A4%A9%E4%BC%9A%E4%B8%8D%E4%BC%9A%E6%9C%89%E6%98%A8%E5%A4%A9-%E4%BC%8A%E5%A4%AB%E5%8D%9A%E8%90%A8%E5%B0%94%E7%89%B9/</guid><description>元数据 [!abstract] 如果没有今天，明天会不会有昨天？
书名： 如果没有今天，明天会不会有昨天？ 作者： 伊夫·博萨尔特 简介： 假设你在桥上，目睹电车即将撞上轨道上的五个人，拯救他们的唯一办法，就是把站在你身旁的一个人推下去，你会怎么选择？假设博物馆里每一幅画都是相同的红色画布，只有画名和简介不同，策展人说每幅画想传达的意念也有所不同，你可以要求退钱吗？假设村里的理发师只能帮不自己刮胡子的村民刮胡子，不能帮会自己刮胡子的村民刮胡子，他自己的胡子要由谁来帮他刮？以上问题都是哲学家精心设计的“思想实验”，因为哲学无法用科学实验来检验其正确性，于是哲学家在脑中设计出具体的假设情境，测试哲学理论是否符合我们对于相关概念的理解，以找出人生根本问题的答案。苏格拉底、柏拉图、萨特、加缪、尼采……众多伟大的哲学家都曾设计过思想实验。新锐哲学家伊夫·博萨尔特精选其中最经典的55则，用清晰易懂的方式加以阐述、推演，引领读者探讨最令人彷徨的人生11大主题。 出版时间 2017-01-01 00:00:00 ISBN： 9787513909839 分类： 哲学宗教-西方哲学 出版社： 民主与建设出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title/><link>https://clickear.github.io/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%9F%BA%E7%A1%80/</guid><description>字符串匹配算法 KMP</description></item><item><title/><link>https://clickear.github.io/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</guid><description>[[错题整理]]
通读 2021年PMP项目管理《PMBOK指南》第六版零基础视频课精讲-希赛网罗福星老师_哔哩哔哩_bilibili
2天内完成， 这三章的内容较为零散，基本贯穿后面十大知识领域，需要大致理解， 边看边动笔画即可，两天完成；
10天内完成， 四到十三章的内容，每天一章，按上面的要求，快速浏览，手画框架 第四章-十三章：属十大知识领域的内容，首先了解章节开头的介绍， 比如P69，“项目整合管理”是“&amp;hellip;&amp;hellip;的过程”，以及子过程的定义。
结合十五至尊图（在PMBOK第25页或自行打印电子版），了解每个子过程在哪个过程组，子过程的顺序，下面举例第四章项目整合管理： 4.了解每个子过程的输出：比如，4.1制定项目章程中，输出项目章程等， 也可以尝试推测哪个是比较重要的输出，并了解定义 。 （概念不清楚，可以通过电子版PMBOK搜索关键字查看最后的术语表）</description></item><item><title/><link>https://clickear.github.io/%E5%BC%95%E8%AE%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BC%95%E8%AE%BA/</guid><description>#todo
启动背景图 常青笔记 项目(独特性、临时性、渐进明细性) &amp;ndash;&amp;gt; 创造价值和效益 &amp;ndash;&amp;gt; 进行 项目管理 责任、尊重、公正、诚实
项目 项目是为创造独特的产品、服务、或成果的临时性工作。
可交付成果: 在某一过程、阶段或项目完成时，必须产出独特并可核实的产品、成果、服务能力。 项目带来组织变革。 项目创造商业价值，项目的成果能够为相关方带来效益，效益可以有形、或者无形。 项目是组织创造价值和效益的主要方式。 特性 独特性 独特性: 即时是相同的产品(或相同的重复元素)，也会有不一样的独特性存在。独特性带来不确定性（风险）。因为独特性，会带来裁剪。</description></item><item><title/><link>https://clickear.github.io/%E6%8B%9C%E5%8D%A0%E5%BA%AD%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%8B%9C%E5%8D%A0%E5%BA%AD%E9%97%AE%E9%A2%98/</guid><description>常青笔记 在不可靠信道，传递消息达到一致性是不可能的。即不会有传递错误消息的情况。 [[Paxos]]等算法 [[签名]]约束了叛徒的作恶行为 拜占庭容错算法(适用消息存在篡改和伪造的场景) 故障容错算法（适用消息不存在篡改和伪造的场景） 概述 拜占庭将军问题是由 Paxos 算法作者莱斯利·兰伯特(Leslie Lamport)提出的点对点通信中的基本问题。该问题要说明的含义是，在不可靠信道上试图通过消息传递的方式达到一致性 是不可能的。所以，Paxos 算法的前提是不存在拜占庭将军问题，即信道是安全的、可靠的， 集群节点间传递的消息是不会被篡改的。 在实际工程实践中，可靠信道是存在的。 一般情况下，分布式系统中各个节点间采用两种通讯模型：
[[共享内存]]（Shared Memory）。星网模型，弊端：中心化问题。单点故障 [[消息传递]]（Messages Passing）。而 Paxos 是基于消息传递通讯模型的 算法 拜占庭容错算法(适用消息存在篡改和伪造的场景) 拜占庭将军问题描述的是最困难的，也是最复杂的一种分布式故障场景，除了存在故障行为，还存在恶意行为的一个场景。你要注意，在存在恶意节点行为的场景中（比如在数字货币的区块链技术中），必须使用拜占庭容错算法（Byzantine Fault Tolerance，BFT）。常用的拜占庭容错算法还有：PBFT 算法，PoW 算法</description></item><item><title/><link>https://clickear.github.io/%E6%95%99%E6%8E%88%E4%B8%8E%E5%B9%B4%E8%BD%BB%E4%BA%BA-%E6%B2%B3%E6%A3%AE%E5%A0%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%95%99%E6%8E%88%E4%B8%8E%E5%B9%B4%E8%BD%BB%E4%BA%BA-%E6%B2%B3%E6%A3%AE%E5%A0%A1/</guid><description>元数据 [!abstract] 教授与年轻人
书名： 教授与年轻人 作者： 河森堡 简介： “特别会讲故事的国博讲解员”河森堡原创科普故事集。“冷山大学”里的高冷教授“荒白”与痞子少年“秦子”，一对“被命运绑在一起”的师徒，30场关于宇宙、历史、人生、自我等宏大命题的认知思辨之旅。若你曾思考一些旁人很少想到的问题：比如“人类花大价钱探索太空有什么意义？”比如“我们读书、我们追寻诗和远方，有什么价值？再比如“研究甲骨文到底有什么用？”“我们为什么一定要学数学？”……从教授和年轻人的故事里，你可能不会得到一个显而易见的答案，却能从中看到现象背后的本质联系，重新思考前行的方向。他们用30场与日常生活紧密相连的对话，把自然科学、历史人文、社会生活与哲学思辨等多个领域的知识串成“星座”，将答案落脚在“此刻的我们”之上，带领读者重新思考知识对人类当下和未来的价值。比起知识本身，或许这本书更能让你获得一种将多学科交叉的信息融会贯通的意识，学会如何对我们生存的环境中的问题进行“有意义的追问”，以及如何探寻现象背后的事物之间的本质联系，让知识成为帮助我们打开视野、理解万物、增长智慧的工具。 出版时间 2022-07-01 00:00:00 ISBN： 9787521743401 分类： 科学技术-科学科普 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title/><link>https://clickear.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid><description>![[§ 算法目录#数据结构]]</description></item><item><title/><link>https://clickear.github.io/%E6%95%B0%E7%BB%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%95%B0%E7%BB%84/</guid><description>重要摘要 代码随想录
数组是存放在连续内存空间上的相同类型数据的集合。
算法题型 2数之和 () 1. 两数之和 - 力扣（LeetCode）
1 2 3 4 5 6 7 8 9 10 11 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。 你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。 **示例:** 给定 nums = [2, 7, 11, 15], target = 9 因为 nums[0] + nums[1] = 2 + 7 = 9 所以返回 [0, 1] 暴力法 排序&amp;ndash;&amp;gt; [[双指针法]] hash法，缓存中间结果 3数之和 下一个排列（#31）</description></item><item><title/><link>https://clickear.github.io/%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7/</guid><description>实现方案 基于MQ消息的最终一致性方案</description></item><item><title/><link>https://clickear.github.io/%E6%9C%AA%E5%91%BD%E5%90%8D-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9C%AA%E5%91%BD%E5%90%8D-1/</guid><description/></item><item><title/><link>https://clickear.github.io/%E6%A0%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%A0%88/</guid><description>单调栈 去除重复字母(316) 316. 去除重复字母 - 力扣（LeetCode）
题目解析:
我们每次都找到当前能够移到最左边的、最小的字母。 要求: 最小 最左边 右边如果还有重复的，就不算 思路:</description></item><item><title/><link>https://clickear.github.io/%E6%A0%88%E5%B8%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%A0%88%E5%B8%A7/</guid><description/></item><item><title/><link>https://clickear.github.io/%E7%8A%B6%E6%80%81%E6%9C%BA%E5%A4%8D%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%8A%B6%E6%80%81%E6%9C%BA%E5%A4%8D%E5%88%B6/</guid><description>常青笔记 初始状态一致 + 执行命令顺序一致 = 相同结果。类比无状态函数 状态机复制的应用，特别要注意的就是要求顺序一致性。如有个数据x=2。有2个操作。+5和*； 先+后* 结果是不一样的。 一般会定时[[快照]] + 操作log集合的方式。比如git的归档日志的应用的。 概念 状态机有个特性: 任何初始状态一样的状态机，如果执行的命令序列一样，则最终达到的状态也一样。如果将此特性应用在多参与者进行协商共识上，可以理解为系统中存在多个具有完全相同的状态机（参与者），这些状态机能最终保持一致的关键就是起始状态完全一致和执行命令序列完全一致。 根据状态机的特性，要让多台机器的最终状态一致，只要确保它们的初始状态是一致的，并且接收到的操作指令序列也是一致的即可，无论这个操作指令是新增、修改、删除抑或是其他任何可能的程序行为，都可以理解为要将一连串的操作日志正确地广播给各个分布式节点。广播指令与指令执行期间，允许系统内部状态存在不一致的情况，即并不要求所有节点的每一条指令都是同时开始、同步完成的，只要求在此期间的内部状态不能被外部观察到，且当操作指令序列执行完毕时，所有节点的最终的状态是一致的，这种模型就被称为状态机复制（State Machine Replication）</description></item><item><title/><link>https://clickear.github.io/%E7%99%BD%E6%9D%BF-2022-11-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%99%BD%E6%9D%BF-2022-11-23/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements 科普视频 ^PDT3Pzo0
基础 ^gTF6HSgv</description></item><item><title/><link>https://clickear.github.io/%E8%80%81%E5%B9%B4%E4%BB%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%80%81%E5%B9%B4%E4%BB%A3/</guid><description/></item><item><title/><link>https://clickear.github.io/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</guid><description>贪心（Greedy） 总是做出在当前看来是最好的选择 不从整体考虑，只考虑眼前，得到 局部最优解
局部最优解和全局最优解 要保证最终得到的是全局最优解，贪心策略必须具备 无后效性
具体实现框架 1 2 3 4 5 6 // 从问题的某一初始解出发; while （能朝给定总目标前进一步）{ 利用可行的决策，求出可行解的一个解元素； } // 由所有解元素组合成问题的一个可行解； 适用场景 用贪心算法直接求解全局最优，条件比较苛刻 哈夫曼（Huffman）编码</description></item><item><title/><link>https://clickear.github.io/%E8%B5%84%E6%96%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%B5%84%E6%96%99/</guid><description/></item><item><title/><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-01%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-01%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid><description>基本概念 低级语言和高级语言 高级语言，功能更强，抽象级别更高。 低级语言(汇编语言、机器语言)
编译程序和解释程序 ⭐ 编译 解释 生成独立目标程序 生成可执行文件，执行运行 不生成可执行文件 执行目标程序时 源程序不再参与目标程序执行 需要参与到程序的执行过程中 都要进行语法、语义分析 都要进行语法、语义分析 都要进行语法、语义分析 编译类型: 词法分析、语法分析、语义分析、中介代码生成、代码优化、目标代码生成 解释性: 词法分析、语法分析、语义分析</description></item><item><title/><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-10%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-10%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid><description>操作系统概述 操作系统特征： 并发性、共享性、虚拟性、不确定性
计算机启动流程: BIOS &amp;ndash;&amp;gt; 主引导记录 &amp;ndash;&amp;gt; 操作系统
进程管理 组成 进程控制块PCB(唯一标识)、程序(描述进程做什么)、数据(存放进程执行时所需数据)
状态 前趋图 ⭐（和pmp中的很像） 进程资源图 ❓ P:progress R:resource</description></item><item><title/><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-11%E7%BB%93%E6%9E%84%E5%8C%96%E5%BC%80%E5%8F%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-11%E7%BB%93%E6%9E%84%E5%8C%96%E5%BC%80%E5%8F%91/</guid><description>耦合 无直接耦合 &amp;ndash;&amp;gt; 数据耦合(调用，传简单数据值) &amp;ndash;&amp;gt; 标记耦合(调用，传结构体) &amp;ndash;&amp;gt; 控制耦合 (调用，传逻辑值，选模块) &amp;ndash;&amp;gt; 外部耦合( 不直接调用，通过软件之外环境) &amp;ndash;&amp;gt; 内容耦合(使用另外一个模块的内部数据) ![[Pasted image 20220526120047.png]]
内聚 偶然内聚（没有联系） &amp;ndash;&amp;gt; 逻辑类型(逻辑上功能类似) &amp;ndash;&amp;gt; 时间内聚(同时执行的动作组合) &amp;ndash;&amp;gt; 过程内聚（指定的过程） &amp;ndash;&amp;gt; 通信内聚(数据结构) &amp;ndash;&amp;gt; 顺序内聚（顺序执行） &amp;ndash;&amp;gt; 功能内聚（缺一不可） !</description></item><item><title/><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-12%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-12%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/</guid><description>CMM(能力模型度模型) 初始化 (混乱) &amp;ndash;&amp;gt; 可重复级(建立了基本的项目管理过程) &amp;ndash;&amp;gt; 已定义级(文档化，标准化) &amp;ndash;&amp;gt; 已管理级别(详细的度量标准，产品和质量) &amp;ndash;&amp;gt; 优化级（加强定量分析）
![[Pasted image 20220524111122.png]]
CMMI（能力成熟度模型集成） ![[Pasted image 20220524111951.png]] ![[Pasted image 20220524112302.</description></item><item><title/><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-14-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-14-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/</guid><description>防火墙 包过滤防火墙（检查包的header信息，网络层，高速度） &amp;ndash;&amp;gt; 应用代理网关防火墙（安全性，彻底隔断内外网访问，进行转发）&amp;ndash;&amp;gt; 状态检测防火墙（结合前者2个优点） 包过滤防火墙依据， 源ip地址、目标ip地址、端口号，不含mac地址 安全性(高到低)：内网 &amp;ndash;&amp;gt; DMZ &amp;ndash;&amp;gt; 外网 防火墙工作层次低，效率高，安全性低 网络系统中，通常把 web 服务器 置于MDZ区。 病毒 !</description></item><item><title/><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-16-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-16-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</guid><description>回溯法(深度优先) N皇后 分治法 最长 n*lgn 快排 动态规划（求问题最优解,最优子结构 + 重叠子问题） 背包问题(时间空间复杂度都为 N*W ) 矩阶连乘（时间复杂度: n3 空间复杂度: n2 ） 最长子序列（暴力法 n*2n 动态规划法 时间复杂度 n2） 贪心法（最优子结构 + 贪心选择性质 ） 部分背包问题 nlgn 举办活动算法 分支界限法（广度优先，最小耗费）</description></item><item><title/><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-%E4%B8%8B%E5%8D%88%E9%A2%9801-%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-%E4%B8%8B%E5%8D%88%E9%A2%9801-%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE/</guid><description>数据流图 基本图形元素(数据流、加工、数据存储、外部实体) ![[Pasted image 20220526143719.png]]
外部实体（当前系统之外的人、物、外部系统） ![[Pasted image 20220526144209.png]]
数据存储（存储和提供数据，xx表，xx文件） ![[Pasted image 20220526144327.png]]
加工Proces (将输入数据处理后得到输出数据) ![[Pasted image 20220526144527.png]]
数据流（数据流的起点和终点必须有一个是加工） ![[Pasted image 20220526144609.</description></item><item><title/><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-%E4%B8%8B%E5%8D%88%E9%A2%9802-ER%E5%9B%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-%E4%B8%8B%E5%8D%88%E9%A2%9802-ER%E5%9B%BE/</guid><description>考点 需求分析 ER图 问题1 关系模式 问题2 ER图 实体（弱实体、强实体） 弱实体（双矩形） ![[Pasted image 20220526170351.png]]
子实体 ⭐ ![[Pasted image 20220526170213.png]] ![[Pasted image 20220526165736.png]]</description></item><item><title/><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-%E6%95%B0%E6%8D%AE%E5%BA%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-%E6%95%B0%E6%8D%AE%E5%BA%93/</guid><description>![[Pasted image 20220523095430.png]]
三级模式-二级映像 内模式(管理存储的文件) &amp;ndash;&amp;gt; 概念模式，模式 (基本表) &amp;ndash;&amp;gt; 外模式 (视图级别)
![[Pasted image 20220523095834.png]]
数据库设计流程 需求分析(数据流图、数据字典、需求说明书) &amp;ndash;&amp;gt; 概念结构设计(设计E-R图) &amp;ndash;&amp;gt; 逻辑设计(转换成关系模型) &amp;ndash;&amp;gt; 物理设计(生成物理数据库、表等)</description></item><item><title/><link>https://clickear.github.io/%E9%94%99%E9%A2%98%E6%95%B4%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%94%99%E9%A2%98%E6%95%B4%E7%90%86/</guid><description>![[Pasted image 20220301152709.png]]
D ？？</description></item><item><title/><link>https://clickear.github.io/%E9%97%B4%E9%9A%99%E9%94%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%97%B4%E9%9A%99%E9%94%81/</guid><description/></item><item><title/><link>https://clickear.github.io/%E9%A2%86%E5%AF%BC%E8%80%85%E6%A8%A1%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%A2%86%E5%AF%BC%E8%80%85%E6%A8%A1%E5%9E%8B/</guid><description>总结 领导者模型，主要用于共识算法。先找出leader，在进行交互。 如何在集群中选出一个合适的主呢？这是一个技术活儿，目前常见的选主方法有基于序号选举的算法（ 比如，[[Bully]] 算法）、多数派算法（比如，[[Raft]] 算法、[[ZAB]] 算法）等。接下来，就和我一起来看看这几种算法吧
存在问题 主写，会导致写性能，依赖于单机性能。优化思路是，进行请求分散。[[负载均衡]]，如根据[[一致性hash]]算法。 摘要 长者为大：Bully 算法 Bully 算法是一种霸道的集群选主算法，为什么说是霸道呢？因为它的选举原则是“长者”为大，即在所有活着的节点中，选取 ID 最大的节点作为主节点。</description></item><item><title>'2022-11-23'</title><link>https://clickear.github.io/2022-11-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2022-11-23/</guid><description>今天的灵感或闪念 构建自己的知识领域 一个仅供参考的CS学习规划 - CS自学指南 [[计算机学习知识图谱]] 知识组织法 PARA和MOC联用组织笔记
Project: 项目，是有明确的开始和起始的。
Area: 持续精讲的。
Resource: 感兴趣的主题
Archive: 归档，当前暂时不感兴趣的。</description></item><item><title>'2022-12-07'</title><link>https://clickear.github.io/2022-12-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2022-12-07/</guid><description>今天的灵感或闪念 更高效的开发 [[高效开发]]
使用[[jrebel]]进行热更新</description></item><item><title>'2022-12-13'</title><link>https://clickear.github.io/2022-12-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2022-12-13/</guid><description>今天的灵感或闪念 [[python]]版本实现的[[解释器]] ：
500lines/pyvm2.py at master · aosabook/500lines · GitHub
[[ ffmpeg]]
[[手写系列]]</description></item><item><title>'2022-12-19'</title><link>https://clickear.github.io/2022-12-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2022-12-19/</guid><description>今天的灵感或闪念 [[spring]]的事务处理
[[spring中事务处理]]</description></item><item><title>'2023-01-06'</title><link>https://clickear.github.io/2023-01-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2023-01-06/</guid><description>今天的灵感或闪念 读书的目的，是为了能改变自己。在于行动，而不是为了读书而读书。别陷入了低效的努力的陷阱。一本书，哪怕只是改变了自己一点，也是有重大意义的。因以这个来衡量读书的效果。
为了能够更好的，融会贯通。
可以使用自己的话，复述一遍，写下来。找到与现有知识体系的关联。而不是一个独立的知识点。</description></item><item><title>'2023-01-18'</title><link>https://clickear.github.io/2023-01-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2023-01-18/</guid><description>今天的灵感或闪念 学习，其实就是边界的扩展。别让自己在舒适区太久。
方向 &amp;ndash;&amp;gt; 目标 &amp;ndash;&amp;gt; 实施动作?
[[okr]] 关键路径
目标的 [[SMART]]原则
专业知识，或者领域需要精进的地方。即将要的主业方向。
专业知识 &amp;ndash;&amp;gt; [[刻意练习]] 领域驱动？ 测试驱动？ 分布式 架构师 大数据 AI 语言类（机会） 英语 量化交易？ 小知识点: [[∑ 小知识点]] 烹饪 技巧 阅读 教育？ 健康 [[如何复盘]]</description></item><item><title>'2023-02-02'</title><link>https://clickear.github.io/2023-02-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2023-02-02/</guid><description>今天的灵感或闪念 [[vpn]]</description></item><item><title>'2023-02-03'</title><link>https://clickear.github.io/2023-02-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2023-02-03/</guid><description>今天的灵感或闪念 技术 [[oltp]]和[[olap]]的区别 效能提升 效能流程
要知道，每个工具的定位，创造工具的不清楚是创造者的问题，使用者不知道工具的定位，那就是使用者的问题了。 要明确工具定位，避免边界模糊。导致工具使用内耗。 给工具做减法，不去使用非核心功能。不一定要all in one 方案 用手帐本梳理目标，用九宫格呈现目标，用滴答清单落地实现目标的计划，用obsidian保存达成目标的资料。 参考:</description></item><item><title>+ Building a Second Brain 翻译和读书笔记</title><link>https://clickear.github.io/-Building-a-Second-Brain-%E7%BF%BB%E8%AF%91%E5%92%8C%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-Building-a-Second-Brain-%E7%BF%BB%E8%AF%91%E5%92%8C%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid><description>[[Building a second brain 读书笔记前言]]
尝试用14天时间，每天抽1个小时翻译一个章节的[[🧑Tiago Forte]]的这本第二大脑新书。
目标：最后产出：
70%质量水平的翻译原文 自己的理解和概括和运用笔记 [[obsidian如何做英文阅读笔记]]的实践笔记 微信读书上的笔记[[Building a Second Brain-Tiago Forte]]
介绍：第二大脑的远景 [[Introduction The Promise of a Second Brain - 介绍：第二大脑的远景]]</description></item><item><title>+ 已发布文章</title><link>https://clickear.github.io/-%E5%B7%B2%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%B7%B2%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/</guid><description>x:: [[🏹 已发布长文]]</description></item><item><title>+ 常见思维工具</title><link>https://clickear.github.io/-%E5%B8%B8%E8%A7%81%E6%80%9D%E7%BB%B4%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%B8%B8%E8%A7%81%E6%80%9D%E7%BB%B4%E5%B7%A5%E5%85%B7/</guid><description> 思维工具 | Tools for Thought (pmthinking.com)
系统思考 如何做决策 解决问题 认知偏误 提出问题</description></item><item><title>+ 文章草稿</title><link>https://clickear.github.io/-%E6%96%87%E7%AB%A0%E8%8D%89%E7%A8%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%96%87%E7%AB%A0%E8%8D%89%E7%A8%BF/</guid><description>x:: [[🏗 本库Roadmap]]</description></item><item><title>+ 知识管理</title><link>https://clickear.github.io/-%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86/</guid><description/></item><item><title>+ 软件项目管理</title><link>https://clickear.github.io/-%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</guid><description/></item><item><title>+ 运动与健康</title><link>https://clickear.github.io/-%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%81%A5%E5%BA%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%81%A5%E5%BA%B7/</guid><description/></item><item><title>1984-乔治·奥威尔</title><link>https://clickear.github.io/1984-%E4%B9%94%E6%B2%BB%E5%A5%A5%E5%A8%81%E5%B0%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/1984-%E4%B9%94%E6%B2%BB%E5%A5%A5%E5%A8%81%E5%B0%94/</guid><description>元数据 [!abstract] 1984
书名： 1984 作者： 乔治·奥威尔 简介： 《1984》是一部伟大的政治寓言。1984年的世界被三个超级大国瓜分，三个国家之间战争不断，国家内部社会结构被彻底打破，均实行高度集权统治，以改变历史、改变语言、打破家庭等极端手段钳制人们的思想和本能，并用高科技手段监视控制人们的行为，以对领袖的个人崇拜和对国内外敌人的仇恨维持社会的运转。 出版时间 2013-10-01 00:00:00 ISBN： 9787544741835 分类： 文学-经典作品 出版社： 译林出版社 高亮划线 代译序（1） 📌 乔治·奥威尔的《1984》是一种情绪的表达，同时也是一种预兆。他表达的是一种对于人类未来近乎绝望的情绪，同时也预兆，除非历史的进程改变，否则全世界的人都会在不知不觉中失去大部分人类的特质，变成没有灵魂的机器人。 ^1-0-105 ⏱ [[2022-06-11]] 10:07 读书笔记 本书评论 书评 No.</description></item><item><title>1988：我想和这个世界谈谈-韩寒</title><link>https://clickear.github.io/1988%E6%88%91%E6%83%B3%E5%92%8C%E8%BF%99%E4%B8%AA%E4%B8%96%E7%95%8C%E8%B0%88%E8%B0%88-%E9%9F%A9%E5%AF%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/1988%E6%88%91%E6%83%B3%E5%92%8C%E8%BF%99%E4%B8%AA%E4%B8%96%E7%95%8C%E8%B0%88%E8%B0%88-%E9%9F%A9%E5%AF%92/</guid><description>元数据 [!abstract] 1988：我想和这个世界谈谈
书名： 1988：我想和这个世界谈谈 作者： 韩寒 简介： 本书以一部旅行车为载体，通过在路上的见闻、过去的回忆、扑朔迷离的人物关系等各种现实场景，表达了韩寒对这个世界与当下现实的看法。故事由两条线索并列推进，线索一是主人公“我”开着一辆1988年生产的汽车，在前往远方接朋友的途中，与妓女娜娜相遇后一路相伴，由此碰撞出一连串的火花；另一条线索是在这趟旅途中，“我”不断地回顾自己的童年，思考着曾经的过往和当下的人生之路。 出版时间 2013-06-01 00:00:00 ISBN： 9787201081939 分类： 文学-经典作品 出版社： 天津人民出版社 高亮划线 10 📌 我说，我坚信邪恶不能压倒正义。他抿了一小口，说，嗯，但是他们可以定义正义和邪恶。 ^13-2318-2387 ⏱ [[2022-05-27]] 01:10 13 📌 我带着娜娜在这个江边的城市里穿行，潮湿而迷宫般的道路没有给我造成什么困扰，现在是真的暂时没有什么目的地了，只是带着娜娜去寻找她的孙老板。当娜娜昨天晚上说出我只用给她十块钱的时候，我其实心头颤动了一下，但我想，我并不能接受她，她只是我旅途里的另外一个朋友，但我想我也羡慕她，她也许也会是我建筑自己的一个部分，因为她自己都这样了还敢把孩子生下来，我能看见她面对江水的时候眼睛里的茫然和希望。 ^16-16382-16575 ⏱ [[2022-05-27]] 01:58 读书笔记 02 划线评论 📌 那个时候上厕所，对面的谈话都能听得一清二楚，因为有两个通道，一个是头顶上的通道，另外脚底下便池也是通的，所以对面女生聊天都是立体声。由于一共有八个便池，所以是环绕立体声。她们聊天的声音多么甜美，内容多么无邪，音质多么悦耳，虽然还伴随着急切的嘘声。我曾经幻想，如果有那么一天，那堵墙倒了，将是什么样的情景啊。这个幻想在小学的我脑海里进行过几百次。 ^10500316-7z8mWfiYQ 💭 我的小时候的公厕，一次2毛，一条道通一排坑位，会把上游的💩冲到下游。 ⏱ [[2022-05-10]] 00:11 05 划线评论 📌 我叹了一口气，说道，娜娜，算了，不要那么争嘛，就一百块钱，人家毕竟是老人，你和老人斗，你怎么都会吃亏的。娜娜在座位上撸着袖子说道，我是孕妇。我笑着说道，你们倒是一个级别的。你说说，你在干小姐这一行之前，你是在干什么啊？娜娜打开一包薯片，说道，学生。我说，嗯，只可惜你是干完了一行再干一行，如果你是兼职的话，估计能赚得更多一些。 ^10500316-7z8ogcmtE 💭 哈哈。兼职收入高于全职的典范行业。 ⏱ [[2022-05-10]] 00:31 08 划线评论 📌 由于我们都是农村户口，所以反而对户口没有什么研究，我们的父母倒是经常为此紧张，因为他们觉得当我们长大，农村户口就很难找到老婆，这便是阶级，我们分为直辖市、大城市、地级市、县城、小镇、郊区、农村、山区和贫困山区这几个阶级，父母告诉我们，我们属于郊区，并不完全算农村。但由于我们是大城市的郊区，所以又能有一些优越感，在这个阶级表里可以排在中游。在他们的对话中，找老婆从来不以相爱为标准，如果你找到了户口排名比你靠前的人，你就是光宗耀祖，反之则是灰头土脸。 ^10500316-7zygQzdnn 💭 阶级与鄙视链 ⏱ [[2022-05-27]] 00:51 本书评论</description></item><item><title>1、介绍</title><link>https://clickear.github.io/arthas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/arthas/</guid><description>Arthas手册： 启动arthas java -jar arthas-boot.jar 绑定java进程 dashboard命令观察系统整体情况 help 查看帮助 help xx 查看具体命令帮助 1、介绍 Arthas 是一款线上监控诊断产品，通过全局视角实时查看应用 load、内存、gc、线程的状态信息，并能在不修改应用代码的情况下，对业务问题进行诊断，包括查看方法调用的出入参、异常，监测方法执行耗时，类加载信息等，大大提升线上问题排查效率。</description></item><item><title>2023年度计划</title><link>https://clickear.github.io/2023%E5%B9%B4%E5%BA%A6%E8%AE%A1%E5%88%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/2023%E5%B9%B4%E5%BA%A6%E8%AE%A1%E5%88%92/</guid><description>计划拆分 会计基础 CPA CFA 冥想 方法论？ 每月领域精进技术。 [[mysql领域]] 幼儿教育方法论 阅读计划 ?</description></item><item><title>27 | 聪明的微创新：Operator 工作原理解读</title><link>https://clickear.github.io/28-27-%E8%81%AA%E6%98%8E%E7%9A%84%E5%BE%AE%E5%88%9B%E6%96%B0Operator-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E8%A7%A3%E8%AF%BBannote/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/28-27-%E8%81%AA%E6%98%8E%E7%9A%84%E5%BE%AE%E5%88%9B%E6%96%B0Operator-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E8%A7%A3%E8%AF%BBannote/</guid><description>27 | 聪明的微创新：Operator 工作原理解读 [!summary] 描述
Operator 的工作原理，是利用自定义 API 资源，描述你要部署的 “有状态应用”；然后在自定义控制器里，根据自定义 API 对象的变化，完成具体
[!md] Metadata
标题:: &amp;ldquo;27 | 聪明的微创新：Operator 工作原理解读&amp;rdquo;</description></item><item><title>3阶魔方还原入门</title><link>https://clickear.github.io/3%E9%98%B6%E9%AD%94%E6%96%B9%E8%BF%98%E5%8E%9F%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/3%E9%98%B6%E9%AD%94%E6%96%B9%E8%BF%98%E5%8E%9F%E5%85%A5%E9%97%A8/</guid><description/></item><item><title>About Archive</title><link>https://clickear.github.io/About-Archive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/About-Archive/</guid><description/></item><item><title>About Area</title><link>https://clickear.github.io/About-Area/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/About-Area/</guid><description/></item><item><title>About Atlas</title><link>https://clickear.github.io/About-Atlas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/About-Atlas/</guid><description>up:: [[ACCESS 笔记组织法]]
Atlas意思是地图集。
单个案例或项目的MOC，考虑直接放在对应文件夹里面，相当于起到一个个文件夹的readme和导览的作用。这里专门放这些MOC的MOC。
围绕本库和obsidian的使用教程、方法和细节，也放到这里，就像是地图的指南针。</description></item><item><title>About Calendar</title><link>https://clickear.github.io/About-Calendar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/About-Calendar/</guid><description>up:: [[ACCESS 笔记组织法]]
x:: [[» Daily notes工作流]]
以时间和日期为依托的笔记都放Calendar文件夹下，以便将来回顾笔记时，有时间线索作为依据。可能包含如下日志笔记：
Daily Notes Meeting Notes Workout Notes Log Notes Tracking Notes Outputted Materials: Articles, Speeches, etc</description></item><item><title>About Cards</title><link>https://clickear.github.io/About-Cards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/About-Cards/</guid><description>up:: [[ACCESS 笔记组织法]]
虽然叫[[永久笔记]]permanent note ，但个人理解其实更贴切的翻译是常青笔记evergreen note。一来，根据形式，和[[闪念笔记]]与[[文献笔记]]区分开。二来，根据目的，它是永恒且发展的，能为将来所用的永久笔记。
暂时先把日常片段式的思考和闪念，以短小的[[卡片笔记]]的方式，直接丢到这里，不强调文件夹分类，而是尝试通过特殊文件名、标签和链接等方式，让这些笔记具备可发现性，更容易被将来的自己找到。
这里的[[MOC]]是事后总结归纳，不强调完备性。
一些临时的，pending的又不舍得删除的笔记先放到Pending文件夹里，等以后再处理。
The cards folder is one of my favorite places because it has umami.</description></item><item><title>About Extras</title><link>https://clickear.github.io/About-Extras/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/About-Extras/</guid><description>up:: [[ACCESS 笔记组织法]]
[[图片保存：图床or本地]]</description></item><item><title>About Project</title><link>https://clickear.github.io/About-Project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/About-Project/</guid><description>[[项目笔记]] 的所在地。集中存放短中期聚焦的项目内容。
这里面的笔记，应该都是可执行的任务分解出的，或者是任务执行结束或闭环后的归纳总结。</description></item><item><title>About Resource</title><link>https://clickear.github.io/About-Resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/About-Resource/</guid><description/></item><item><title>About Sources</title><link>https://clickear.github.io/About-Sources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/About-Sources/</guid><description>up:: [[ACCESS 笔记组织法]]
个人用法 Spaces中的Resource偏向action，以及作为project和area的强相关的支撑材料，以内容为分类依据。而这里的Sources，偏向于剪藏、搜集，以资源文件类型为分类依据。
The beast-like Evernote Web Clipper approaches Gandalf trying to infect and corrupt your PKM sanctuary with hordes of low-value articles you&amp;rsquo;ll never read and that will drown your own thinking a pit of orc-like chaos.</description></item><item><title>About Spaces</title><link>https://clickear.github.io/About-Spaces/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/About-Spaces/</guid><description>up:: [[ACCESS 笔记组织法]]
我的理解 其实就是[[PARA]]，SPACES以项目action为目标，进行信息管理。但多了一个[[MOC]]，把信息串起来。我直接将其改成PARA。moc先直接放到对应文件夹里面。
与Source相比，Spaces就像社会人，高目的性，一切以项目、闭环、完成为目标。而Source就像学生，低目的性，重在持续积累，分类，持续精进。
About Spaces Spaces are one of the most important parts of ACCESS: Whenever you have something big in your life, deploy a space and set up MAPS (MOCs, Areas, Projects, Support notes).</description></item><item><title>AOT</title><link>https://clickear.github.io/AOT/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/AOT/</guid><description>::我的理解 提前编译，本质目的是为了能在使用之前，提前编译成机器码。
问题的矛盾点在于
动态生成字节码怎么处理？ 所有代码编译成机器码，性能一定比热点代码编译性能高吗？
#todo/某天 参考资料 Java中有类似于NGen的工具（AOT编译器）吗？ - 知乎</description></item><item><title>AQS</title><link>https://clickear.github.io/AQS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/AQS/</guid><description>[!TIP] 技巧💡
AQS定义了我们实现锁的模板，具体实现由各个子类完成。 内部实现了FIFO的队列(存储载体是Node)以及state状态变量。 会把需要等待的线程以Node的形式放到这个先进先出的队列上，state变量则表示为当前锁的状态。 先进先出队列存储的载体叫做Node节点，该节点标识着当前的状态值、是独占还是共享模式以及它的前驱和后继节点等等信息。 资料 AQS和ReentrantLock | 对线面试官</description></item><item><title>atomic</title><link>https://clickear.github.io/atomic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/atomic/</guid><description>资料 都有了AtomicLong，为什么还要提供LongAdder？ | Java识堂</description></item><item><title>binlog</title><link>https://clickear.github.io/binlog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/binlog/</guid><description>[!TIP] 记录整个操作过程💡
MySQL的二进制日志（binary log）是一个二进制文件，主要记录所有数据库表结构变更（例如CREATE、ALTER TABLE…）以及表数据修改（INSERT、UPDATE、DELETE…）的所有操作。二进制日志（binary log）中记录了对MySQL数据库执行更改的所有操作，并且记录了语句发生时间、执行时长、操作数据等其它额外信息，但是它不记录SELECT、SHOW等那些不修改数据的SQL语句
作用 恢复（recovery）：某些数据的恢复需要二进制日志。例如，在一个数据库全备文件恢复后，用户可以通过二进制日志进行point-in-time的恢复
复制（replication）：其原理与恢复类似，通过复制和执行二进制日志使一台远程的MySQL数据库（一般称为slave或者standby）与一台MySQL数据库（一般称为master或者primary）进行实时同步。
审计（audit）：用户可以通过二进制日志中的信息来进行审计，判断是否有对数据库进行注入攻击
binlog binlog格式分为: STATEMENT、ROW和MIXED三种，详情如下:
STATEMENT STATEMENT格式的binlog记录的是数据库上执行的原生SQL语句。这种方式有好处也有坏处。
好处就是相当简单，简单地记录和执行这些语句，能够让主备保持同步，在主服务器上执行的SQL语句，在从服务器上执行同样的语句。另一个好处是二进制日志里的时间更加紧凑，所以相对而言，基于语句的复制模式不会使用太多带宽，同时也节约磁盘空间。并且通过mysqlbinlog工具容易读懂其中的内容。</description></item><item><title>bufferpool</title><link>https://clickear.github.io/bufferpool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/bufferpool/</guid><description>[!TIP] 缓冲池💡
缓冲，典型的[[缓存]]思想，通过缓存来获取更高的速度
池， 典型的 [[池化]]思想技术，本质上是提供复用率，较少资源的创建、删除。如线程池等
通过[[预读]]和[[局部性原理]]，mysql每次都是按页(4K)读取。每页读取后。会放在bufferpool中。把[[bufferpool]]当成一个[[缓存]]，就有个很重要的问题，即失效策略。
过期算法 [[LRU]],最少使用原则。
[[传统LRU]]
把入缓冲池的页放到LRU的头部，作为最近访问的元素，从而最晚被淘汰
问题:
预读失效(预读数据可能没被使用)：由于预读(Read-Ahead)，提前把页放入了缓冲池，但最终MySQL并没有从页中读取数据，称为预读失效。 [缓冲池污染] 当某一个SQL语句，要批量扫描大量数据时，可能导致把缓冲池的所有页都替换出去，导致大量热数据被换出，MySQL性能急剧下降，这种情况叫缓冲池污染。</description></item><item><title>Building a second brain 读书笔记前言</title><link>https://clickear.github.io/Building-a-second-brain-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E5%89%8D%E8%A8%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Building-a-second-brain-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E5%89%8D%E8%A8%80/</guid><description> 面试造航母，进去拧螺丝。抛开体力劳动类的工作，当代在写字楼里工作的人，从事智力密集型产业的人，其实大部分也都是在拧螺丝。所谓乾坤未定，你我皆是牛马。那么在写字楼里面，如何又好又快地拧螺丝？时间管理、日程管理、精力管理。</description></item><item><title>Building a Second Brain-Tiago Forte</title><link>https://clickear.github.io/Building-a-Second-Brain-Tiago-Forte/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Building-a-Second-Brain-Tiago-Forte/</guid><description>元数据 [!abstract] Building a Second Brain
书名： Building a Second Brain 作者： Tiago Forte 简介： 出版时间 ISBN： 分类： 出版社： Profile 高亮划线 1 Where It All Started 📌 Your mind is for having ideas, not holding them.</description></item><item><title>building your second brain读书笔记 - CODE方法</title><link>https://clickear.github.io/building-your-second-brain%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-CODE%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/building-your-second-brain%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-CODE%E6%96%B9%E6%B3%95/</guid><description>构建第二大脑的CODE方法 capture：捕获 对应我的[[个人信息管理系统]]。将个人闪念和想法，生活工作中接触到的各种文字、视频、语音等信息记录下来，集中在一起存放。最极致的做法就如柳比歇夫的[[间歇式日记]]。
organize： 组织 以行动为目的驱动自己去阻止这些捕获的信息，使用[[PARA]]方法。
distill：内化 不管文章多复杂，一定能基于自己已有的常识，找到提炼的方法，比如E=mc2这种简练的公式一样，有物理基础知识的人，就能把质能方程转换成这种精练的表达。其他任何领域的知识也是一样。
[[渐进式总结]]
express：表达 是前面3步的终极目的。无论前面3步做得多么好，没有实际使用上，就不产生任何价值。比如学了一堆减肥和营养的知识，却依旧肥胖和乱吃。
[[卡片笔记]]</description></item><item><title>CAS</title><link>https://clickear.github.io/CAS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/CAS/</guid><description>[!NOTE] 笔记
经常会跟自旋挂钩，因为 CAS 有三个操作数：当前值A、内存值V、要修改的新值B。
假设 当前值A 跟 内存值V 相等，那就将 内存值V 改成B。 假设 当前值A 跟 内存值V 不相等，要么就重试，要么就放弃更新。 CAS用在很多地方，比如[[synchronized]]在锁升级时，会进行CAS进行变更。</description></item><item><title>changebuffer</title><link>https://clickear.github.io/changebuffer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/changebuffer/</guid><description>[!INFO] 概念，channgebuffer,减少IO次数。
它是一种应用在非唯一普通索引页(non-unique secondary index page)不在缓冲池中，对页进行了写操作，并不会立刻将磁盘页加载到缓冲池，而仅仅记录缓冲变更(buffer changes)，等未来数据被读取时，再将数据合并(merge)恢复到缓冲池中的技术
适用于未加载到buffer pool 并且非唯一索引页
::我的理解 简单来说，就是不直接写到磁盘，先写到日志[[顺序读写]]很快。为保证加载到[[bufferpool]]内存数据的准确性，就需要在后续读取时，进行merge操作。
merge操作(磁盘的数据不是最新的，需要与changebuffer进行合并恢复到缓冲池中) 原始数据页加载到 Buffer Pool 时 系统后台定时触发 merge 操作 MySQL 数据库正常关闭时。 持久化操作 触发持久化(Change Buffer 是 Buffer Pool 中的一部分,System Tablespace 中可以看到持久化 Change Buffer 的空间)</description></item><item><title>CMS垃圾收集器</title><link>https://clickear.github.io/CMS%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/CMS%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/</guid><description>[!NOTE] 承上启下，JDK9标记作废，JDK14删除
第一次让垃圾收集线程和用户线程(基本上)同时工作 标记算法([[三色标记法]]) CMS 在小内存应用上的表现要优于 [[G1]]，而大内存应用上 G1 更有优势，大小内存的界限是6GB到8GB 初始标记和重新标记阶段仍然需要STW机 由于在垃圾收集阶段用户线程没有中断，所以在CMS回收过程中，还应该确保应用程序用户线程有足够的内存可用。因此CMS收集器不能像其他收集器那样等到老年代几乎填满再进行回收，而是当堆内存使用率达到某一阈值时，便开始进行回收 要是CMS运行期间预留的内存无法满足程序需要，就会出现一次Concurrent Mode Failure失败，这时虚拟机启用备用方案，临时启用Serial old 收集器来重新进行老年代的垃圾收集，这样停顿时间就长了 CMS采取[[标记清除法]]算法，会产生内存碎片，只能够选择空闲列表执行内存分配 优点：</description></item><item><title>CPA</title><link>https://clickear.github.io/CPA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/CPA/</guid><description/></item><item><title>Daily notes汇总</title><link>https://clickear.github.io/Daily-notes%E6%B1%87%E6%80%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Daily-notes%E6%B1%87%E6%80%BB/</guid><description>dataview日历视图 1 2 CALENDAR file.ctime FROM &amp;#34;&amp;#34; DailyNote 1 2 3 4 list from &amp;#34;Calendar/Daily notes&amp;#34; and -#MOC and -#readme说明 and -#index索引 sort dates desc limit 999</description></item><item><title>dubbo</title><link>https://clickear.github.io/-dubbo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-dubbo/</guid><description>简单版 动态代理 &amp;ndash;&amp;gt; 通过javassist来实现。也可以自定义SPI 网络传输，netty建立长连接 ( 序列化 obj&amp;ndash;&amp;gt;byte[] hessian,hessian2 pb,使用 proto 编译器，自动进行序列化和反序列化，速度非常快。压缩效果好。 fst Kryo, dubbo协议，TCP黏包等问题) 进阶版（带集群能力）: 服务发现(注册中心)， 客户端，服务端启动后，注册到注册中心，dubbo使用zk。客户端会缓存一份，所以启动后注册中心挂了也没事。 选择具体服务，cluster层将多个invoker封装成1个invoker dicretory, list 获取全部服务提供者信息 路由策略，router，过滤。 tag,script,condition 负载均衡，选择一个合适的。 轮询，权重，一致性hash，权重随机 异常重试，容错机制 failover，失败，自动重试到其它机器。（默认 failfast,快速失败。一次调用失败就立即失败，常见于非幂等性的写操作 failsafe，忽略异常，常用于不重要的接口调用，比如记录日志 failback,失败了后台自动记录请求，然后定时重发 forking, fork之后，调用多个 broadcacst， 广播所有 优雅开/停机。 skywalking链路追踪 服务治理 服务降级。HelloServiceMock 失败，超时重试。 源码解析 SPI</description></item><item><title>exception和error的区别</title><link>https://clickear.github.io/exception%E5%92%8Cerror%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/exception%E5%92%8Cerror%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>[!TIP] 技巧💡
Error 是系统、虚拟机出错了。我们不用处理也处理不了
Exception 是程序的异常，需要我们处理。其中RuntimeException 是我们经常使用的
NoClassDefFoundError（编译通过了，但是jvm加载时，发现少类。比如 A.class 依赖B.class，编译后将B.class删除，又比如，B.class加载时，初始化失败，在public static int i = 0/23; ） 和 ClassNotFoundException （运行时少类，比如使用了 Class.</description></item><item><title>EXTERNAL</title><link>https://clickear.github.io/EXTERNAL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/EXTERNAL/</guid><description>汇总单向引用了我的其他地方的资源的链接，执行 expand 命令刷新
zotero 的资源引用 1 line:(zotero://) 1 2 3 4 5 6 zotero:// ^⬇⬇⬇ - [[$filename]] $searchresult --- &amp;gt;⬆⬆⬆ &amp;lt;&amp;ndash;&amp;gt;</description></item><item><title>ffmpeg</title><link>https://clickear.github.io/ffmpeg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/ffmpeg/</guid><description>文章 基于FFmpeg的短视频编辑工具Cut - 掘金
FFmpeg - Basic Filter Graphs. FFmpeg is considered the Swiss Army… | by Syed Andaleeb Roomy | Craftsmen — Software Maestros | Medium</description></item><item><title>final、fianally、finalize的区别</title><link>https://clickear.github.io/finalfianallyfinalize%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/finalfianallyfinalize%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>[!TIP] 技巧💡
final: 一定程度上的不可变，有点只读的意思。可修饰类(不可继承)、变量(不可重新赋值)、方法(不可重载)
finnally: try-finally 。用于资源释放等。但不建议使用
finalize: Object 的方法，不建议重载。性能触发具有不确定性。一般使用 [[虚引用]]代替进行资源释放
final 编程的其中一个原则，就是尽量内聚。合适的控制类的范围。
finnal 和 不可变[[immutable]]是不一样的。finnal可以认为只是只读，不能对变量进行重新赋值。
1 2 3 4 5 6 7 8 9 10 11 final List&amp;lt;String&amp;gt; strList = new ArrayList&amp;lt;&amp;gt;(); // 可以执行成功，并非不可变。只是strList不能重新赋值 strList.</description></item><item><title>G1</title><link>https://clickear.github.io/G1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/G1/</guid><description>[!TIP] 技巧💡
分区，无分代概念
Garbage First,官方目标: 就是在延迟可控的情况下，获得尽可能高的吞吐量，所以才担当起全功能收集器的重任和期望.
使用[[标记复制法]]和[[标记整理法]]。 G1是一个并行回收器，他把堆内存分割为很多不相关的区域（Region）（物理上不连续） 使用不同的region表示Eden，s0，s1，老年代等 G1跟踪各个region里面垃圾堆积的价值大小，在后台维护一个优先列表，每次根据允许的收集时间，优先回收价值最大的Region JDK1.7版本正式启用，jdk9以后默认垃圾回收器
优点: 停顿时间短； 用户可以指定最大停顿时间； 不会产生内存碎片：G1 的内存布局并不是固定大小以及固定数量的分代区域划分，而是把连续的Java堆划分为多个大小相等的独立区域 (Region)，G1 从整体来看是基于“标记-整理”算法实现的收集器，但从局部 (两个Region 之间)上看又是基于“标记-复制”算法实现，不会像 CMS (“标记-清除”算法) 那样产生内存碎片。</description></item><item><title>HashMap</title><link>https://clickear.github.io/HashMap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/HashMap/</guid><description>[toc]
HashMap的底层实现 线程不安全，如需要线程安全，使用[[ConcurrentMap]]
JDK1.7 JDK1.8 结构 数组 + 链表(拉链法) 数组 + 链表 + 红黑树(链表长度&amp;gt;8) 扩容 根据hash频繁迁移 只需看mask多一位，即只需要看看原来的hash值新增的那个bit是1还是0就好 线程安全 头插法，死循环问题 尾插法，存在覆盖问题 底层结构 1.</description></item><item><title>HOMEPAGE</title><link>https://clickear.github.io/HOMEPAGE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/HOMEPAGE/</guid><description>[!INFO]
主页其实也是一种 [[模板与套路]]，当我大脑放空，不知道接下来需要做什么的时候，不妨打开这里，找寻一点思路。
![[本库的宏观统计数据]]</description></item><item><title>idea</title><link>https://clickear.github.io/idea/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/idea/</guid><description>激活 分享几个 IntelliJ IDEA 正版激活码（破解码、注册码），亲测可用，持续更新_心得技巧_积微成著</description></item><item><title>Index for Atlases</title><link>https://clickear.github.io/Index-for-Atlases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Index-for-Atlases/</guid><description>up:: [[ACCESS 笔记组织法]]
1 2 3 4 5 6 7 8 9 10 11 // 获取当前文件所在的文件夹 const currentFolder = dv.</description></item><item><title>Index for Calendar</title><link>https://clickear.github.io/Index-for-Calendar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Index-for-Calendar/</guid><description>up:: [[ACCESS 笔记组织法]]
1 2 3 4 5 6 7 8 9 10 11 // 获取当前文件所在的文件夹 const currentFolder = dv.</description></item><item><title>Index for Cards</title><link>https://clickear.github.io/Index-for-Cards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Index-for-Cards/</guid><description>up:: [[ACCESS 笔记组织法]]
1 2 3 4 5 6 7 8 9 10 11 // 获取当前文件所在的文件夹 const currentFolder = dv.</description></item><item><title>Index for Extras</title><link>https://clickear.github.io/Index-for-Extras/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Index-for-Extras/</guid><description>up:: [[ACCESS 笔记组织法]]
1 2 3 4 5 6 7 8 9 10 11 // 获取当前文件所在的文件夹 const currentFolder = dv.</description></item><item><title>Index for Sources</title><link>https://clickear.github.io/Index-for-Sources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Index-for-Sources/</guid><description>up:: [[ACCESS 笔记组织法]]
1 2 3 4 5 6 7 8 9 10 11 // 获取当前文件所在的文件夹 const currentFolder = dv.</description></item><item><title>Index for Spaces</title><link>https://clickear.github.io/Index-for-Spaces/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Index-for-Spaces/</guid><description>up:: [[ACCESS 笔记组织法]]
文件夹 1 2 3 TABLE date FROM &amp;#34;Spaces&amp;#34; and -#index索引 GROUP BY file.folder 全部文件 1 2 3 4 5 6 7 8 9 10 11 // 获取当前文件所在的文件夹 const currentFolder = dv.</description></item><item><title>Index for 已发布文章和草稿</title><link>https://clickear.github.io/Index-for-%E5%B7%B2%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%E5%92%8C%E8%8D%89%E7%A8%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Index-for-%E5%B7%B2%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%E5%92%8C%E8%8D%89%E7%A8%BF/</guid><description>文章计划清单通过[[🤖滴答清单]]管理。 打开滴答清单
草稿 1 2 3 4 table from #article/todo sort dates desc limit 99 已发布文章 1 2 3 4 table from #article/done sort dates desc limit 99</description></item><item><title>Introduction The Promise of a Second Brain - 介绍：第二大脑的远景</title><link>https://clickear.github.io/Introduction-The-Promise-of-a-Second-Brain-%E4%BB%8B%E7%BB%8D%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91%E7%9A%84%E8%BF%9C%E6%99%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Introduction-The-Promise-of-a-Second-Brain-%E4%BB%8B%E7%BB%8D%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91%E7%9A%84%E8%BF%9C%E6%99%AF/</guid><description>up:: [[∑ Building a Second Brain 翻译和读书笔记]]
你是否经常想记住一些重要的事情，却发现它不经意间从你的记忆中滑走了？
也许你正在跟人对话，却无法记住你表达的观点背后支撑的事实。也许你正在开车或通勤时，想到一个绝妙的好主意，但是当你到达目的地，它却蒸发了。你是否经常非常挣扎地去试图从曾经读过的书或文章中，找到一个有用的收获。
随着我们可以触及的信息量的爆炸，上面提到的类似经历会变得越来越普遍。我们收到的建议比以往任何时候都多，他们承诺让我们更聪明、更边看、更快乐。我们消费的书籍、播客、文章和视频比我们能吸收的要多得多。对于我们获得的所有知识，我们真正需要展示什么？再来我们有机会进行实践之前，我们曾经拥有或遇到过的伟大想法有多少已经从我们的脑海中消失了？
我们花费无数个小时的阅读、倾听和观察别人的观点，这些观点告诉我们应该怎么做，应该怎么思考，应该如何生活。但是往往付出很少的努力去实际应用这些知识，让它真正变成自己的知识。很多时候，我们都只是信息的囤积者，存了大量用心良苦的内容，最终却只会增加我们的焦虑感。
注：只听不做，眼高手低。只存不品，徒增焦虑。
这本书就是致力于改变这一点。你会看到，所有你在网上消费的各种形式的媒介的内容，都不是毫无用处的。它其实非常重要和有价值。唯一的问题是你经常在错误的时间消费它。
注：目的驱动地去看片，和随性而发地看片，收获大不相同。
要有多巧合，才能让你正在阅读的商业类的书籍正是目前你所需要的？你从播客里面听到的洞见可以让你立马产生行动的概率又有多少？实际上，有多少邮件躺在你的收件箱里需要你立刻去关注？更有可能的是，其中绝大多数内容，只会在将来的某个时候变得有意义。
注：我读研的时候看过500本闲书，从来没做过笔记或去实践，留下来的0.</description></item><item><title>JAVA中各变量分配空间和初始化时机</title><link>https://clickear.github.io/JAVA%E4%B8%AD%E5%90%84%E5%8F%98%E9%87%8F%E5%88%86%E9%85%8D%E7%A9%BA%E9%97%B4%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E6%97%B6%E6%9C%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/JAVA%E4%B8%AD%E5%90%84%E5%8F%98%E9%87%8F%E5%88%86%E9%85%8D%E7%A9%BA%E9%97%B4%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E6%97%B6%E6%9C%BA/</guid><description>java中存在各种变量，我们来讨论下各变量的分配空间时机和初始化时机。
1 2 3 4 5 6 7 8 9 10 11 12 public TestClass(){ private final Long finalLong = 5; // 这里被final修饰的变量finalStr，直接成为常量，编译时就会被分配为5; private static Long staticLong = 1; // 静态变量staticLongr， 静态字段在[[准备]]阶段只会被赋值为0，[[初始化]]时才会被赋值为1。 private Long memberLong = 1; // 成员变量，在new的时候分配空间和初始化。 private static void newInstance(){ TestClass testClass = new TestClass(); // testClass 是分配在栈中，指向分配在TestClass的堆对象。 } } final修饰的变量 编译时，变成常量</description></item><item><title>JAVA代码是如何运行的</title><link>https://clickear.github.io/JAVA%E4%BB%A3%E7%A0%81%E6%98%AF%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C%E7%9A%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/JAVA%E4%BB%A3%E7%A0%81%E6%98%AF%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C%E7%9A%84/</guid><description>[[编译]] &amp;ndash;&amp;gt; [[类加载子系统]] &amp;ndash;&amp;gt;
要理解java代码是怎么执行，这里的重点在于[[∑ JVM]]在这当中，充当了什么作用。简单来说就算承上启下。 上是开发语言，下是操作系统。总体流程是， *.java &amp;ndash;&amp;gt; *.class &amp;ndash;&amp;gt; JVM &amp;ndash;&amp;gt; 二进制码 &amp;ndash;&amp;gt; 操作系统执行。 简单来说，就算通过自己定义的一套字节码规则，然后在jvm执行代码，而jvm如何执行代码？就算通过转换成操作系统可执行的代码.
从虚拟机角度来说，就算编译器编译成[[字节码]],然后通过[[类加载子系统]] 加载到虚拟机中。</description></item><item><title>JAVA编译</title><link>https://clickear.github.io/JAVA%E7%BC%96%E8%AF%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/JAVA%E7%BC%96%E8%AF%91/</guid><description>::一图胜千言 ::JAVA编译
[!TIP] 技巧💡
一个Java指令可能被转译成十几或数十几个对等的微处理器指令
编译阶段:[[静态编译]] 前端编译（[[静态编译]]）&amp;ndash;&amp;gt; 生成 class文件
提前编译[[AOT]]（[[静态编译]]）,即 .java直接生成机器码
运行阶段 jvm执行引擎中，编译器(广义)的执行阶段的执行模式，可分为[[解释器]]和 [JIT|即时编译器]。 [[解释器与编译器]]
jvm执行以class文件组成的java指令，那么解释器去执行的时候，都要[[解释器]]解释执行每个java指令，转译成微指令执行。有什么方式优化呢？一种是[[JIT|即时编译器]]，在执行的时候,将[[热点代码]]进行编译到机器码，然后缓存起结果。因为编译器需要编译时间。</description></item><item><title>java集合</title><link>https://clickear.github.io/java%E9%9B%86%E5%90%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/java%E9%9B%86%E5%90%88/</guid><description> 【集合系列】- 初探 java 集合框架图 | Just Do Java
Collections
Map
Collections List 有序可重复集合 ArrayList 数组 LinkedList 链表 Vector 用的少了，线程安全，动态数组。性能有问题 Stack，栈(先进后出)，是Vector 也用得少，可以用ArrayDeque双端队列替代 Queue，队列集合 ArrayDeque双端队列，具有队列和栈的特性 LinkedList，有是Deque的实现类。双向链表 PriorityQueue，排序队列 Set， 无序，不可重复集合 HashSet, 底层是通过[[HashMap]]来实现。 LinkedHashSet， 底层是通过LinkedHashMap实现 TreeSet，底层是通过TreeMap实现。 Map [[HashMap]] [[LinkedHashMap]] [[TreeMap]] HashTable 线程安全。所有方法加 synchronized Properties，继承自HashTable</description></item><item><title>JIT</title><link>https://clickear.github.io/JIT/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/JIT/</guid><description>即时编译器（运行时编译，属于动态编译），编译成本地代码，执行效率高。（类比为 坐公交，速度快，但是需要&amp;quot;等公交&amp;quot;（编译））。虽然带来了缺陷，就是在执行之前需要编译时间。
这里说说，jit存在的背景:
通过搜集runtime信息, 识别出程序的热点代码(2／8原则) 限制条件:
[[热点代码]]才使用,并且符合编译条件时，而不是所有代码都编译，因为有的代码很少执行，确要损耗编译时间。 有个思路，是[[AOT]]。但是不确定运用场景，但是有限制条件 :: 分类 C1 &amp;ndash;client， 更快的编译速度 C2 &amp;ndash;server, 更好的编译质量 Grall ，实验性 问题 Q: 为什么不[[AOT]], 这样就不需要在执行时进行编译了？</description></item><item><title>jmap</title><link>https://clickear.github.io/jmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/jmap/</guid><description>[!INFO] jmap, 堆操作
jmap执行时，会STW，不能在生产环境使用。
1 2 3 java -Xms20M -Xmx20M -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError com.mashibing.jvm.gc.T15_FullGC_Problem01; jmap - histo 4655 | head -20，查找有多少对象产生 线上系统，内存特别大，jmap执行期间会对进程产生很大影响，甚至卡顿（电商不适合）</description></item><item><title>jrebel</title><link>https://clickear.github.io/jrebel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/jrebel/</guid><description>简介 使用 Jrebel，实现热部署 | 小决的专栏
安装 安装可参考(简单来说，就是在idea插件中，搜索进行安装):
IDEA JRebel插件热部署
激活 最新版激活，会碰到无法连接的问题。可能问题:
https服务不支持，不确定是自身代理问题，还是jrebel插件问题 443端口不可用 三方服务，暂无法激活，不确定是不是被拉入黑名单了。 三方激活服务 http://jrebel-license.</description></item><item><title>JVM参数</title><link>https://clickear.github.io/JVM%E5%8F%82%E6%95%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/JVM%E5%8F%82%E6%95%B0/</guid><description> 标准： -开头， 所有HotSpot都支持
非标准: -X 开头， 特定版本支持特定命令
不稳定: -XX开头， 下个版本可能取消</description></item><item><title>JVM架构图</title><link>https://clickear.github.io/JVM%E6%9E%B6%E6%9E%84%E5%9B%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/JVM%E6%9E%B6%E6%9E%84%E5%9B%BE/</guid><description/></item><item><title>JVM调优</title><link>https://clickear.github.io/JVM%E8%B0%83%E4%BC%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/JVM%E8%B0%83%E4%BC%98/</guid><description>::我的理解 JVM调优，都是通过配置[[JVM参数]]来进行调优。调优之前，首先要先确定调优的目的。[[垃圾回收器性能指标]]
::调优步骤 熟悉业务场景（没有最好的垃圾回收器，只有最合适的垃圾回收器） 响应时间、停顿时间 [[CMS垃圾收集器|CMS]], [[G1]],[[ZGC]] （需要给用户作响应） 吞吐量 = 用户时间 /( 用户时间 + GC时间) [[Parallel]] 选择回收器组合 计算内存需求（经验值 1.</description></item><item><title>LATEST</title><link>https://clickear.github.io/LATEST/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/LATEST/</guid><description>最近的 30 条编辑笔记 1 2 3 4 table WITHOUT ID file.link AS &amp;#34;File&amp;#34;,file.mtime as &amp;#34;修改时间&amp;#34; from !&amp;#34;templates&amp;#34; and !&amp;#34;assets&amp;#34; sort file.</description></item><item><title>Library</title><link>https://clickear.github.io/Library/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Library/</guid><description>现在的积累量远远不够，感觉分类耗时耗力没有意义，先放这以后再说。
[!NOTE]- Notes on this note
This is a sanitized version of my actual note.
Content and links have been removed.</description></item><item><title>MDL</title><link>https://clickear.github.io/MDL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/MDL/</guid><description>[!INFO] MDL（metadata lock）
1.1 当对一个表做增删改查的时候，该表会被加MDL读锁。（DML操作需要MDL读锁)
1.2 当对表做结构变更的时候，加MDL写锁。(DDL操作需要MDL写锁)
1.3 读读不互斥，读写，写写互斥。
1.4 一旦出现写锁等待，不但当前操作会被阻塞，同时还会阻塞后续该表的所有操作。事务一旦申请到MDL锁后，直到事务执行完才会将锁释放。可以理解为，当前的MDL写锁，如果事务未提交，会导致后续该表都不能进行操作。 &amp;ndash;&amp;gt; 引申出一个问题，
MDL锁主要作用是维护表元数据的数据一致性，在表上有活动事务（显式或隐式）的时候，不可以对元数据进行写入操作。
引入MDL解决了什么问题？ 事务隔离问题，即会话A在2次查询期间，会话B对表结构做了修改，两次查询结果就会不一致(返回的结构不同)，无法满足可重复读的要求。 数据复制问题，如会话A执行了多条更新语句期间，另外一个会话B做了表结构变更并且先提交，就会导致slave在重做时，先重做alter，再重做update时就会出现复制错误的现象。 出现的问题case 在对表进行上述操作时，如果表上有活动事务（未提交或回滚），请求写入的会话会等待在Metadata lock wait 。 已经有MDL写锁时，后续的读事务也会阻塞。直到MDL写锁提交。</description></item><item><title>MOC文件汇总</title><link>https://clickear.github.io/MOC%E6%96%87%E4%BB%B6%E6%B1%87%E6%80%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/MOC%E6%96%87%E4%BB%B6%E6%B1%87%E6%80%BB/</guid><description>1 tag:#MOC</description></item><item><title>MVCC</title><link>https://clickear.github.io/MVCC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/MVCC/</guid><description>[!TIP] 技巧💡
说白了MVCC就是为了实现读-写冲突不加锁，而这个读指的就是快照读, 而非当前读，当前读实际上是一种加锁的操作，是悲观锁的实现
多版本并发控制（MVCC）是一种用来解决读-写冲突的无锁并发控制，也就是为事务分配单向增长的时间戳，为每个修改保存一个版本，版本与事务时间戳关联，读操作只读该事务开始前的数据库的快照。 所以MVCC可以为数据库解决以下问题
在并发读写数据库时，可以做到在读操作时不用阻塞写操作，写操作也不用阻塞读操作，提高了数据库并发读写的性能 同时还可以解决脏读，幻读，不可重复读等事务隔离问题，但不能解决更新丢失问题。
数据库并发场景? 有三种, 分别为：
读-读：不存在任何问题，也不需要并发控制 读-写：有线程安全问题，可能会造成事务隔离性问题，可能遇到脏读，幻读，不可重复读。通过 [[MVCC]]来解决 写-写：有线程安全问题，可能会存在更新丢失问题，比如第一类更新丢失，第二类更新丢失.通过[[锁]]，[[悲观锁]]或者[[乐观锁]]来解决 因为有了MVCC，所以我们可以形成两个组合：</description></item><item><title>mysqlLRU</title><link>https://clickear.github.io/mysqlLRU/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/mysqlLRU/</guid><description>相较于[[传统LRU]]的优化
将缓冲池分为老生代和新生代，入缓冲池的页，优先进入老生代，页被访问，才进入新生代，以解决预读失效的问题 页被访问，且在老生代停留时间超过配置阈值的，才进入新生代，以解决批量数据访问，大量热数据淘汰的问题</description></item><item><title>mysql架构</title><link>https://clickear.github.io/mysql%E6%9E%B6%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/mysql%E6%9E%B6%E6%9E%84/</guid><description>mysql架构图：
[!NOTE] mysql架构
连接层(连机器): 管理连接和验证 服务层(分析器，优化器、执行器): 查询解析、分析、优化、缓存、以及所有的内置函数。 1. 分析器: 词法分析、语法分析 2. 优化器: 执行计划生成、索引选择 3. 执行器，操作引擎，返回结果 引擎层([[存储引擎]])：存储存储引擎真正的负责了MySQL中数据的存储和提取 数据存储层：数据存储在文件系统中，并完成与存储引擎的交互 mysql如何执行一条语句 [[查询语句执行]]：</description></item><item><title>mysql调优</title><link>https://clickear.github.io/mysql%E8%B0%83%E4%BC%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/mysql%E8%B0%83%E4%BC%98/</guid><description>优化步骤 步骤：
1.开启慢查询日志,设置阈值,比如超过5秒钟的就是慢SQL,并将它抓取出来;
2.EXPLAIN+慢SQL分析;
3.SHOW profile,查询SQL在MySQL服务器里面的执行细节和生命周期情况
4.具体优化
explain1 语法explain select * from xxl_job_log l where l.job_id in (select id from xxl_job_info)</description></item><item><title>mysql领域</title><link>https://clickear.github.io/mysql%E9%A2%86%E5%9F%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/mysql%E9%A2%86%E5%9F%9F/</guid><description>层层递进 精讲专栏:
极客时间-mysql45讲
视频 科普文 中文书 [[📚高性能MySQL]]
原版书</description></item><item><title>netty</title><link>https://clickear.github.io/netty/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/netty/</guid><description>#todo/continue
BIO&amp;amp;NIO&amp;amp;AIO模型快速实战_哔哩哔哩_bilibili
netty和java sdk的使用
在java sdk nio的基础上，进行二次封装。
连接过程:
bootstrap ni event loop group 线程池 717 900万， qps 1000</description></item><item><title>NIO</title><link>https://clickear.github.io/NIO/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/NIO/</guid><description/></item><item><title>NUMA架构</title><link>https://clickear.github.io/NUMA%E6%9E%B6%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/NUMA%E6%9E%B6%E6%9E%84/</guid><description>NUMA对应的有UMA，UMA即Uniform Memory Access Architecture，NUMA就是Non Uniform Memory Access Architecture。UMA表示内存只有一块，所有CPU都去访问这一块内存，那么就会存在竞争问题（争夺内存总线访问权），有竞争就会有锁，有锁效率就会受到影响，而且CPU核心数越多，竞争就越激烈。NUMA的话每个CPU对应有一块内存，且这块内存在主板上离这个CPU是最近的，每个CPU优先访问这块内存，那效率自然就提高了</description></item><item><title>One-Touch to Inbox Zero：How I Spend 17 Minutes Per Day on Email</title><link>https://clickear.github.io/One-Touch-to-Inbox-ZeroHow-I-Spend-17-Minutes-Per-Day-on-Email/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/One-Touch-to-Inbox-ZeroHow-I-Spend-17-Minutes-Per-Day-on-Email/</guid><description>I spend 17 minutes per day on email, or 7.43% of my total work time over the past 12 months.</description></item><item><title>Parallel</title><link>https://clickear.github.io/Parallel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Parallel/</guid><description> [!NOTE] 并行回收，吞吐量优先
并行是指，多条线程回收线程进行垃圾清理，清理需要暂停用户线程(即STW)
追求 CPU 吞吐量，能够在较短时间内完成指定任务，因此适合没有交互的后台计算
通过参数 -XX:GCTimeRadio 设置垃圾回收时间占总 CPU 时间的百分比。 通过参数 -XX:MaxGCPauseMillis 设置垃圾处理过程最久停顿时间。 通过命令 -XX:+UseAdaptiveSizePolicy 开启自适应策略。我们只要设置好堆的大小和 MaxGCPauseMillis 或 GCTimeRadio，收集器会自动调整新生代的大小、Eden 和 Survivor 的比例、对象进入老年代的年龄，以最大程度上接近我们设置的 MaxGCPauseMillis 或 GCTimeRadio。 XX:PreTenureSizeThreshold 大对象到底多大 XX:MaxTenuringThreshold XX:+ParallelGCThreads 并行收集器的线程数，同样适用于CMS，一般设为和CPU核数相同</description></item><item><title>ParallelNew</title><link>https://clickear.github.io/ParallelNew/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/ParallelNew/</guid><description> [!NOTE] 并行回收，
和[[Parallel]]基本一致，能和CMS配合。
追求降低用户停顿时间，适合交互式应用
-XX:UseParNewGC手工指定ParNew收集器执行内存回收任务，它表示年轻代使用，不影响老年代 -XX:ParallelGCThreads限制线程数量，默认开启和CPU数据相同的线程数</description></item><item><title>Paxos</title><link>https://clickear.github.io/Paxos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Paxos/</guid><description>常青笔记 一个是 Basic Paxos 算法，描述的是多节点之间如何就**某个值（提案 Value）**达成共识； 另一个是 Multi-Paxos 思想，描述的是执行多个 Basic Paxos 实例，就一系列值达成共识。 在可靠消息通道下，即在不考虑[[拜占庭问题|消息有传递错误]]下，基于[[消息传递]]通讯模型下，分布式系统下，就某一个决议达成一致（多个的话，参考[[MultiPaxos]]） prepare阶段(只是咨询，这时候没带提案内容)，是因为有多提案者导致需要预先抢占。多提案者可以加入随机超时，来避免[[活锁]]问题 在accpet阶段，提案内容的选择，是由prepare阶段返回的promise响应来决定的。从多个决策节点的promise结果中，找到最大提案id对应的提案内容，作为提案内容。 能找到最大提案id，使用决策节点中返回的对应的提案id的提案内容。 不能找到最大提案id，则使用自己的提案内容。 重要摘要 paxos Paxos 算法是莱斯利·兰伯特(Leslie Lamport)1990 年提出的一种基于消息传递的、具有高 容错性的一致性算法。Google Chubby 的作者 Mike Burrows 说过，世上只有一种一致性算法， 那就是 Paxos，所有其他一致性算法都是 Paxos 算法的不完整版。Paxos 算法是一种公认的晦 涩难懂的算法，并且工程实现上也具有很大难度。较有名的 Paxos 工程实现有 Google Chubby、 [[ZAB]]、微信的 PhxPaxos 等。</description></item><item><title>python</title><link>https://clickear.github.io/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/python/</guid><description/></item><item><title>Raft</title><link>https://clickear.github.io/Raft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Raft/</guid><description>总结 常青笔记 通过领导人的方式，Raft 将一致性问题分解成了三个相对独立的子问题：
领导选举：当现存的领导人发生故障的时候, 一个新的领导人需要被选举出来 日志复制：领导人必须从客户端接收日志条目（log entries）然后复制到集群中的其他节点，并强制要求其他节点的日志和自己保持一致。 安全性：在 Raft 中安全性的关键是在图 3 中展示的状态机安全：如果有任何的服务器节点已经应用了一个确定的日志条目到它的状态机中，那么其他服务器节点不能在同一个日志索引位置应用一个不同的指令。章节 5.4 阐述了 Raft 算法是如何保证这个特性的；这个解决方案涉及到选举机制（5.2 节）上的一个额外限制。 Raft 算法属于 [[MultiPaxos]] 算法，它是在兰伯特 Multi-Paxos 思想的基础上，做了一些简化和限制，比如增加了日志必须是连续的，只支持领导者、跟随者和候选人三种状态，在理解和算法实现上都相对容易许多。</description></item><item><title>README</title><link>https://clickear.github.io/README/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/README/</guid><description>个人主页
[[∑ 面试计划]]</description></item><item><title>readview</title><link>https://clickear.github.io/readview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/readview/</guid><description>什么是Read View，说白了Read View就是事务进行快照读操作的时候生产的读视图(Read View)，在该事务执行的快照读的那一刻，会生成数据库系统当前的一个快照，记录并维护系统当前活跃事务的ID(当每个事务开启时，都会被分配一个ID, 这个ID是递增的，所以最新的事务，ID值越大)。
[!TIP] 技巧💡
在RC [[读已提交]]隔离级别下，是每个快照读都会生成并获取最新的Read View
在RR [[可重复读]]隔离级别下，则是同一个事务中的第一个快照读才会创建Read View, 之后的快照读获取的都是同一个Read View
Read View主要是用来做可见性判断的, 即当我们某个事务执行快照读的时候，对该记录创建一个Read View读视图，把它比作条件用来判断当前事务能够看到哪个版本的数据，既可能是当前最新的数据，也有可能是该行记录的undo log里面的某个版本的数据。</description></item><item><title>redolog</title><link>https://clickear.github.io/redolog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/redolog/</guid><description>[!TIP] 记录数据被修改后的样子💡
。因为[[changebuffer]]是存在内存中的，万一机器重启，change buffer中的更改没有来得及更新到磁盘，就需要根据[[redolog]]来找回这些更新。
redo log包括两部分：一是内存中的日志缓冲(redo log buffer)，该部分日志是易失性的；二是磁盘上的重做日志文件(redo log file)，该部分日志是持久的，并且是事务的记录是顺序追加的，性能非常高(磁盘的[[顺序读写 |顺序写性能]]逼内存的写性能差不了太多)。
InnoDB使用日志来减少提交事务时的开销。因为日志中已经记录了事务，就无须在每个事务提交时把缓冲池的脏块刷新(flush)到磁盘中。事务修改的数据和索引通常会映射到表空间的随机位置，所以刷新这些变更到磁盘需要很多随机IO。InnoDB假设使用常规磁盘，随机IO比顺序IO昂贵得多，因为一个IO请求需要时间把磁头移到正确的位置，然后等待磁盘上读出需要的部分，再转到开始位置。
InnoDB用日志把随机IO变成顺序IO。一旦日志安全写到磁盘，事务就持久化了，即使断电了，InnoDB可以重放日志并且恢复已经提交的事务。
logbuffer(内存)刷到文件系统，需要经过内核态 为了确保每次日志都能写入到事务日志文件中，在每次将log buffer中的日志写入日志文件的过程中都会调用一次操作系统的fsync操作(即fsync()系统调用)
在此处需要注意一点，一般所说的log file并不是磁盘上的物理日志文件，而是操作系统缓存中的log file，既然都称为file了，应该已经属于物理文件了。所以在本文后续内容中都以os buffer或者file system buffer来表示官方手册中所说的Log file，然后log file则表示磁盘上的物理日志文件，即log file on disk。另外，之所以要经过一层os buffer，是因为open日志文件的时候，open没有使用O_DIRECT标志位，该标志位意味着绕过操作系统层的os buffer，IO直写到底层存储设备。不使用该标志位意味着将日志进行缓冲，缓冲到了一定容量，或者显式fsync()才会将缓冲中的刷到存储设备。使用该标志位意味着每次都要发起系统调用。比如写abcde，不使用o_direct将只发起一次系统调用，使用o_object将发起5次系统调用</description></item><item><title>redolog和undolog的区别</title><link>https://clickear.github.io/redolog%E5%92%8Cundolog%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/redolog%E5%92%8Cundolog%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>二种日志均可以视为一种恢复操作，
[[redolog]]g是恢复提交事务修改的页操作，而[[undolog]]是回滚行记录到特定版本。， 记录内容: [[redolog]]是物理日志，记录页的物理修改操作，而[[undolog]]是逻辑日志，根据每行记录进行记录 redolog是循环写的，不持久保存，binlog是追加日志，具有“归档”这个功能，redolog是不具备的 redolog只有InnoDB有，别的引擎没有。redolog具有crash safe的功能。而binlog不具有。 为什么会有这2种日志，我举得是因为，mysql设计之初，binlog不具有crash safe的功能。</description></item><item><title>reids集群模式</title><link>https://clickear.github.io/reids%E9%9B%86%E7%BE%A4%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/reids%E9%9B%86%E7%BE%A4%E6%A8%A1%E5%BC%8F/</guid><description>主从模式（不怎么用，） 在复制的概念中，数据库分为两类，一类是主数据库（master），另一类是从数据库(slave）。主数据库可以进行读写操作，当写操作导致数据变化时会自动将数据同步给从数据库。而从数据库一般是只读的，并接受主数据库同步过来的数据。一个主数据库可以拥有多个从数据库，而一个从数据库只能拥有一个主数据库。
总结：引入主从复制机制的目的有两个
一个是读写分离，分担 &amp;ldquo;master&amp;rdquo; 的读写压力 一个是方便做容灾恢复 缺点:
自动容错和恢复功能.需要人工介入 难维护，无法在线扩容 Sentinel（哨兵）模式，自动版主从复制。副本存储 哨兵是一个独立的进程，作为进程，它会独立运行。其原理是哨兵通过发送命令，等待Redis服务器响应，从而监控运行的多个 Redis 实例
优点：</description></item><item><title>rocketMq</title><link>https://clickear.github.io/rocketMq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/rocketMq/</guid><description>#todo/continue
RocketMQ 技术内幕
RocketMQ主从同步源码分析 - 掘金</description></item><item><title>rocketmq事务消息</title><link>https://clickear.github.io/rocketmq%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/rocketmq%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF/</guid><description>[!TIP] 技巧💡
解决的是本地事务的执行和发消息这两个动作满足事务的约束。 通过2阶段提交来做。 1. client端先发送一个half消息(这个半消息是指消费者消费不到，还未在broker提交) 2. broker接收到半消息之后，将其放在队列为0的topic中。 3. client端，提交本地事务。 4. client端，通过oneway方式来发送事务结果 5. broker根据结果，来处理半消息 6. broker端，还有个反查机制。避免oneway方式因网络抖动等发送给broker失败 资料 Fetching Title#hp97</description></item><item><title>Serial</title><link>https://clickear.github.io/Serial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Serial/</guid><description> [!NOTE] 串行回收
串行，是指一条线程回收线程进行垃圾清理，清理需要暂停用户线程(即STW)
老年代，叫 Seraal Old</description></item><item><title>SMART</title><link>https://clickear.github.io/SMART/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/SMART/</guid><description>Specific： 具体的， 把目标设定到可以衡量的程度，就叫做明确了
Measurable: 可衡量的
Attainable: 可达到的 可达性。够得着
Relevant: 相关性，保证不偏离。（别跑偏）
Time-bound: 时间限制的（缺少时间限制的目标没有意义）</description></item><item><title>springcloud和dubbo的关系？</title><link>https://clickear.github.io/springcloud%E5%92%8Cdubbo%E7%9A%84%E5%85%B3%E7%B3%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/springcloud%E5%92%8Cdubbo%E7%9A%84%E5%85%B3%E7%B3%BB/</guid><description>spring cloud 和 dubbo哪个会被淘汰？ - 知乎</description></item><item><title>spring中事务处理</title><link>https://clickear.github.io/spring%E4%B8%AD%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/spring%E4%B8%AD%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/</guid><description>事务提交成功后在执行操作 使用事件监听机制中@TransactionalEventListener 使用方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 @Slf4j @Service public class HelloServiceImpl implements HelloService { @Autowired private JdbcTemplate jdbcTemplate; @Autowired private ApplicationEventPublisher applicationEventPublisher; @Transactional @Override public Object hello(Integer id) { // 向数据库插入一条记录 String sql = &amp;#34;insert into user (id,name,age) values (&amp;#34; + id + &amp;#34;,&amp;#39;fsx&amp;#39;,21)&amp;#34;; jdbcTemplate.</description></item><item><title>spring循环依赖</title><link>https://clickear.github.io/spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96/</guid><description>#todo/now
spring为什么使用三级缓存而不是两级？ - 知乎</description></item><item><title>Text Elements</title><link>https://clickear.github.io/excalibrain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/excalibrain/</guid><description>Text Elements 🚀 To get started select a document using the search in the top left or open a document in another pane.</description></item><item><title>Text Elements</title><link>https://clickear.github.io/%E6%95%B0%E5%AD%97%E6%97%B6%E4%BB%A3%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%B7%A5%E4%BD%9C%E4%B8%8E%E7%94%9F%E6%B4%BB-%E5%9B%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%95%B0%E5%AD%97%E6%97%B6%E4%BB%A3%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%B7%A5%E4%BD%9C%E4%B8%8E%E7%94%9F%E6%B4%BB-%E5%9B%BE/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements 信息输入 ^W0UckBNX
提炼整理 ^wfkklxEz</description></item><item><title>threadlocal</title><link>https://clickear.github.io/threadlocal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/threadlocal/</guid><description>![[img_threadlocal]]
threadlocal 在thread中，存在一个 threadlocalmap的对象。threadlocalMap是一个数组的实现，有多个entry,entry的key值，是一个弱引用，指向的是[[threadlocal]],而value就是实际存的值。
思考:
为什么需要虚引用？方便在外部，将threadlocal设置为null时，key值自动回收的case。 为什么存在内存泄露的可能性？因为如果entry的key断开了连接，是null值。那边可能存在threadRef &amp;ndash;&amp;gt; thread &amp;ndash;&amp;gt; threadMap &amp;ndash;&amp;gt; entry &amp;ndash;&amp;gt; value的强引用，只是这个endtry的key是null而已。那就造成了gc无法进行回收。 解决方案。 threadlocal在get，set，remove都会将key为null的进行回收。最好就是在结束后，调用remove方法。 ThreadLocalMap中的key，为什么是ThreadLocal，而不是Thread.</description></item><item><title>undolog</title><link>https://clickear.github.io/undolog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/undolog/</guid><description>[!TIP] undolog记录数据被修改前的样子💡
undolog的2大作用
回滚功能 [[MVCC]] 回滚 [!NOTE] 笔记
当执行rollback时，就可以从undo log中的逻辑记录读取到相应的内容并进行回滚
undo log 主要为事务的回滚服务。在事务执行的过程中，除了记录[[redolog]]，还会记录一定量的[[undolog]]。undo log记录了数据在每个操作前的状态，如果事务执行过程中需要回滚，就可以根据undo log进行回滚操作。单个事务的回滚，只会回滚当前事务做的操作，并不会影响到其他的事务做的操作。 Undo记录的是已部分完成并且写入硬盘的未完成的事务，默认情况下回滚日志是记录下表空间中的（共享表空间或者独享表空间） undo log主要是保证事务的原子性，事务执行失败就回滚，用于在事务执行失败后，对数据回滚。undo log是逻辑日志，记录的是SQL。（可以认为当delete一条记录时，undo log中会记录一条对应的insert记录，反之亦然，当update一条记录时，它记录一条对应相反的update记录。） 在事务提交后，undo log日志不会立即删除，会放到一个待删除的链表中，有purge线程判断是否有其他事务在使用上一个事务之前的版本信息，然后决定是否可以清理，简单的来说就是前面的事务都提交成功了，这些undo才能删除。</description></item><item><title>volatile</title><link>https://clickear.github.io/volatile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/volatile/</guid><description>为什么cpu存在可见性问题？</description></item><item><title>vpn</title><link>https://clickear.github.io/vpn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/vpn/</guid><description>免费vpn
Redfish Networks - Browse the Web freely 收费vpn
ZhiMa|换域名啦~ 价格便宜，每月10块。偶尔不稳定</description></item><item><title>What Is a Second Brain? - 第二大脑是什么？</title><link>https://clickear.github.io/What-Is-a-Second-Brain-%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91%E6%98%AF%E4%BB%80%E4%B9%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/What-Is-a-Second-Brain-%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91%E6%98%AF%E4%BB%80%E4%B9%88/</guid><description/></item><item><title>Where It All Started - 第二大脑之缘起</title><link>https://clickear.github.io/Where-It-All-Started-%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91%E4%B9%8B%E7%BC%98%E8%B5%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/Where-It-All-Started-%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91%E4%B9%8B%E7%BC%98%E8%B5%B7/</guid><description>up:: [[∑ Building a Second Brain 翻译和读书笔记]]
你的头脑是用来产生想法，而不是持有它们。 —David Allen, author of Getting Things Done
在我大三的春天，毫无征兆地，我开始感到喉咙的疼痛。
我认为这是流感出现的第一个征兆，但我的医生诊断不出疾病。在接下来的几个月中，情况逐渐变糟，我开始起看其他更专业的医生。但是他们都得出了相同的结论：你没有生病。
然而，我的痛苦持续着且越来越糟，也不知道如何治疗。以至于我变得很难开口说话、吞咽或者大笑。我进行了所有的诊断测试和扫描，拼命寻找答案，想知道为什么我会有这种痛苦的感觉。
很多年过去了，我开始放弃我能找到治疗方法的希望。我开始复用一种强大的抗菌药物，以缓解疼痛，但副作用可怕，包括整个身体的麻木感觉和严重的短期记忆力丧失。在此期间，我旅行的记录，读过的书，和爱人的宝贵经历都被我的记忆魔趣了，好像从未发生过一样。我那时候24岁，却像有一个80岁的头脑。
随着我表达自己的能力持续恶化，我从沮丧变成了绝望。因为无法自主地正常说话，生活中很多例如友谊、约会、旅行、工作都从我身边滑走了。在此之前，我甚至曾经有一个机会能开始我站上我人生的大舞台进行表演，这种感觉就像在我生活的舞台上蒙上了黑暗窗帘。</description></item><item><title>ZGC</title><link>https://clickear.github.io/ZGC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/ZGC/</guid><description>它的目的是「降低停顿时间」，由此会导致吞吐量会有所降低. 支持TB量级的堆 最大GC停顿时间不超10ms 奠定未来GC特性的基础 最糟糕的情况下吞吐量会降低15%
这一点和G1一样，都是基于Region设计的垃圾回收器，ZGC中的Region也被称为「ZPages」，ZPages被动态创建，动态销毁。不过，和G1稍微有点不同的是，G1的每个Region大小是完全一样的，而ZGC的Region大小分为3类：2MB，32MB，N×2MB，如此一来，灵活性就更好了 G1和ZGC都是基于Region设计的，在回收的时候，它们只会选择一部分Region进行回收，这个回收过程采用的是Mark-Compact算法，即将待回收的Region中存活的对象拷贝到一个全新的Region中，这个新的Region对象分配就会非常紧凑，几乎没有碎片。垃圾回收算法这一点上，和G1是一样的
采用 [[NUMA架构]] ZGC中的[[读写屏障|读屏障]] 在标记和移动对象的阶段，每次「从堆里对象的引用类型中读取一个指针」的时候，都需要加上一个Load Barriers。这个动作非常像JDK并发中用到的CAS自旋。读取的值发现已经失效了，需要重新读取。而ZGC这里是之前持有的指针由于GC后失效了，需要通过读屏障修正指针。正是因为Load Barriers的存在，所以会导致配置ZGC的应用的吞吐量会变低。官方的测试数据是需要多出额外4%的开销
ZGC调优 启用ZGC比较简单，设置JVM参数即可：-XX:+UnlockExperimentalVMOptions 「-XX:+UseZGC」 参数 UseNUMA ZGC默认是开启支持NUMA的，不过，如果JVM探测到系统绑定的是CPU子集，就会自动禁用NUMA。我们可以通过参数-XX:+UseNUMA显示启动，或者通过参数-XX:-UseNUMA显示禁用。如果运行在NUMA服务器上，并且设置-XX:+UseNUMA，那对性能提升是显而易见的。 [[NUMA架构]] UseLargePages 配置ZGC使用large page通常就会得到更好的性能，比如在吞吐量、延迟、启动时间等方面。而且没有明显的缺点，除了配置过程复杂一点。因为它需要root权限，这也是默认并没有开启使用large page的原因。 ConcGCThreads ZGC是一个并发垃圾收集器，那么并发GC线程数就非常重要了。如果设置并发GC线程数越多，意味着应用线程数就会越少，这肯定是非常不利于应用系统稳定运行的。这个参数ZGC能自动设置，如果没有十足的把握。最好不要设置这个参数。 ParallelGCThreads 这是个并行线程数，与上一个参数ConcGCThreads有所不同，ConcGCThreads表示GC线程和应用线程「并发」执行时GC线程数量。而ParallelGCThreads表示GC时STW阶段的「并行」GC线程数量（例如第一阶段的Root扫描），这时候只有GC线程，没有应用线程。笔者这里解释了JVM中「并发和并行的区别」，也是JVM中比较容易理解错误的地方。 ZUncommit 掌握这个参数之前，我们先说一下JVM申请以及回收内存的行为。以前的垃圾回收器比如ParallelOldGC和CMS，只要JVM申请过的内存，即使发生了GC回收了很多内存空间，JVM也不会把这些内存归还给操作系统。这就会导致top命令中看到的RSS只会越来越高，而且一般都会超过Xmx的值（参考文章：）。 不过，默认情况下，ZGC是会把不再使用的内存归还给操作系统的。这对于那些比较注意内存占用情况的应用和服务器来说，是很有用的。这种行为可以通过JVM参数**-XX:-ZUncommit**关闭。不过，无论怎么归还，JVM至少会保留Xms参数指定的内存大小，这就是说，当Xmx和Xms一样大的时候，这个参数就不起作用了。</description></item><item><title>zooKeeper</title><link>https://clickear.github.io/zooKeeper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/zooKeeper/</guid><description>ZooKeeper是什么？ 特点: 文件系统 + 监听机制 Zookeeper维护一个类似文件系统的树状数据结构，这种特性使得 Zookeeper 不能用于存放大量的数据，每个节点的存放数据上限为1M
Watcher 监听机制是 Zookeeper 中非常重要的特性，我们基于 Zookeeper 上创建的节点，可以对这些节点绑定监听事件，比如可以监听节点数据变更、节点删除、子节点状态变更等事件，通过这个事件机制，可以基于 Zookeeper 实现分布式锁、集群管理等功能。
Watcher 特性：当数据发生变化的时候， Zookeeper 会产生一个 Watcher 事件，并且会发送到客户端。但是客户端只会收到一次通知。如果后续这个节点再次发生变化，那么之前设置 Watcher 的客户端不会再次收到消息。（Watcher 是一次性的操作）。可以通过循环监听去达到永久监听效果。</description></item><item><title>zotero和obsidian的联动</title><link>https://clickear.github.io/zotero%E5%92%8Cobsidian%E7%9A%84%E8%81%94%E5%8A%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/zotero%E5%92%8Cobsidian%E7%9A%84%E8%81%94%E5%8A%A8/</guid><description/></item><item><title>§ dubbo源码学习</title><link>https://clickear.github.io/-dubbo%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-dubbo%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</guid><description/></item><item><title>§ flomo101 - 思维方式目录</title><link>https://clickear.github.io/-flomo101-%E6%80%9D%E7%BB%B4%E6%96%B9%E5%BC%8F%E7%9B%AE%E5%BD%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-flomo101-%E6%80%9D%E7%BB%B4%E6%96%B9%E5%BC%8F%E7%9B%AE%E5%BD%95/</guid><description>🌱 思维方式目录 | flomo 101
思维方式目录 [[✨我们塑造了工具，工具又塑造了我们。——麦克卢汉《理解媒介：论人的延伸》]]
在 flomo，我们不仅仅是设计工具，也希望能给你带来全新的思考方式。因为重要的不是更好地记录，而是更好地思考。
在这里，我们尝试用朴素的语言和具体的例子，希望能为大家带来关于个人知识管理的一些新启发。
2022 年我们开始将其中部分重要的内容进行修订，你会看到标题后面有标记「修订」的就是最新版，预计每篇修订幅度在 20% ~ 60% 左右，即使曾经看过的同学，再看一遍相信也会有收获。
你可以微信扫码关注我们的服务号，第一时间收到更新提醒。
思维方式 [[该积累什么领域知识]] [[为何要写卡片]] [[如何设计笔记的回顾机制]] [[笔记的误区]] [[知识定义与管理]] [[为何收藏无用]] [[没有完美的分类]] [[如何用 IARP 规划标签]] [[为何知识需要连接]] [[如何真正理解一个新概念]] [[输出究竟是什么]] 综合应用 这是少楠的一场关于知识管理的分享，时长约 90 分钟，希望能提供一种视角给大家做个人知识管理时参考。</description></item><item><title>§ java</title><link>https://clickear.github.io/-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-java/</guid><description> java语言 [[§ java基础]] [[§ springboot]] 底层原理 &amp;amp; 性能优化 底层编程 网络编程 [[netty]] [[∑ rpc框架实战]] 并发编程 [[§ JVM目录]] [[性能调优]] [[微服务]] &amp;amp;&amp;amp; [[云原生]] [[大数据]] [[§ dubbo]] [[§ 分布式]] [[中间件]] [[框架源码]] 手写框架 架构与设计 [[设计模式]] [[架构设计方法论]] [[DDD]] [[devops]]</description></item><item><title>§ java基础</title><link>https://clickear.github.io/-java%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-java%E5%9F%BA%E7%A1%80/</guid><description>#task
[[exception和error的区别]] [[final、fianally、finalize的区别]] [[强引用]]、[[软引用]]、 [[弱引用]]、[[虚引用]] [[自动拆装箱]] [[java集合]] [[零拷贝]] [[NIO]]</description></item><item><title>§ JVM目录</title><link>https://clickear.github.io/-JVM%E7%9B%AE%E5%BD%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-JVM%E7%9B%AE%E5%BD%95/</guid><description> [[JVM架构图]] JVM作用 [[JAVA代码是如何运行的]] [[JAVA编译]] [[解释器与编译器]] [[字节码]] [[类加载子系统]] 类加载过程 [[加载]] [[校验]] [[准备]] [[解析]] [[初始化]] 类加载时机（按需加载，在用到时才加载） [[运行时数据区]] （JVM内存结构） [[虚拟机栈]] [[本地方法栈]] [[堆]] [[新生代]] [[老年代]] [[元数据区]] [[程序计数器]] [[垃圾回收]] 什么是垃圾？ [[引用计数法]] [[可达性分析]] 引用， [[强引用]]，GC无法回收 [[软引用]]，GC后内存还不够，可回收。主要用于内存 [[弱引用]]，GC后回收，不管内存够不够 [[虚引用]], 无法获取真实引用对象，GC后，触发GC后，要做的一些事情的机制 [[垃圾回收算法]] [[标记清除法]] [[标记复制法]] [[标记整理法]] [[分代收集算法]] &amp;ndash;根据分代，来进行使用回收算法 [[增量收集算法]] [[垃圾收集器]] [[垃圾回收器性能指标]] [[Serial]] 串行回收 [[Parallel]] 并行回收，吞吐量优先 [[ParallelNew]] 可以结合CMS使用 [[CMS垃圾收集器|CMS]],承上启下，垃圾收集线程和用户线程可同时运行 [[三色标记法]] [[读写屏障|写屏障]] + [[增量更新]]，写时如果发现，黑色引用了白色，直接将这个引用记录下来。 [[G1]] [[读写屏障|写屏障]] + [[SATB]] [[ZGC]] [[读写屏障|读屏障]] + [[颜色指针]]。读的时候，如果不对，要校对 [[JVM调优]] [[JVM参数]]</description></item><item><title>§ linux常用命令行</title><link>https://clickear.github.io/-linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C/</guid><description> 官方下载 pkg 安装 [[nodejs]] [[Golang]] [[🤖docker]] [[docker compose]] homebrew 安装 [[fzf]] [[thefuck]] [[tldr]] [[tree]] [[powershell]] 第三方 [[linux命令行测速 - speedtest]] [[homebrew]] [[zsh]] [[ohmyzsh]] [[🤖Git]] [[curl]] [[wget]] [[z命令]] [[iptables]] [[vim]] [[sudo]] [[apt-get]] [[http-server]] [[🤖kubectl]] [[kubectx]] [[mackup]]</description></item><item><title>§ mq面试</title><link>https://clickear.github.io/-mq%E9%9D%A2%E8%AF%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-mq%E9%9D%A2%E8%AF%95/</guid><description>什么是消息队列？（作用） 优点: [[异步]] [[削峰]] [[解耦]] 缺点: 可用性低，要考虑丢失、重复消费等 复杂度高 上下游数据一致性问题 消息队列技术选型？ rabbitmq,社区不活跃 activemq, 社区丰富，吞吐量低。elang语言 rocketmq，阿里捐赠给apache，吞吐量高。topic时，性能不会大幅度下降？ kafka， 基于大数据领域。日志和实时计算用的多。 topic多时，性能差 高可用 存储结构 [[kafka]], 每个partition是一个文件。会造成磁盘竞争IO rocketMq,采用commitlog + comsume queue的方式。相当于commitlog存储全部数据，queue存储偏移量。 数据分片存储 kafka一个topic下面的所有消息都是以partition的方式分布式的存储在多个节点上。即每一个机器，都没有完整的topic数据 一个 Topic 分布在多个Broker 上，一个 Broker 可以配置多个 Topic，它们是多对多的关系。如果某个 Topic 消息量很大，应该给它多配置几个队列，并且尽量多分布在不同 Broker 上，以减轻某个 Broker 的压力 主节点选举 rocketmq，基于raft进行选举，超过一半成功即可。在写数据时，只需一半成功即可。 kafka，是基于zk进行选择的。在写数据时，可配置多少个副本写入成功即算成功 [消息丢失] 生产者: 同步发送，或者分布式事务消息 服务端: 持久化: 同步刷盘策略 主从同步: 同步复制 消费者: ACK确认机制 [重复消费] 分布式锁 数据库唯一索引 [[消息堆积]] 优先保证线上，先处理bug，保证消费者没问题 提升消费者能力 多线程并发处理 新增消费节点 如果queue &amp;gt; 消费节点数，增加消费节点 如果queue &amp;lt; 消费节点数， 新增topic，并设置queue大小为消费节点数量 将旧的toppic数据，消费重新发送到新的topic进行消费 批量消费 跳过不重要消息，记录后续处理 优化代码 使用case: 大事务拆成 小事务 + 异步化处理。 omq备货流程优化 异步处理, 工作流发送消息 延迟消息，超时未支付 优化case: 抖音接口限流，导致重试调用失败 多线程调用 增加消费者 如何设计mq 可伸缩性，数据分片存储。broker -&amp;gt; topic -&amp;gt; partition，每个 partition 放一个机器，就存一部分数据 持久化，顺序写。 kafaka, partition写在一个文件中 rocketmq， 元数据都写在commitlog中，queue写偏移量 可用性 leader选举 多副本，主从 #todo/continue</description></item><item><title>§ mysql目录</title><link>https://clickear.github.io/-mysql%E7%9B%AE%E5%BD%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-mysql%E7%9B%AE%E5%BD%95/</guid><description>面试题 索引优化，大分页怎么处理？ mysql不是跳过offset行，而是取offset+N行，然后放弃前offset行，返回N行。 游标，减少数据量 快速定位获取需要的id数据。然后关联。利用[[索引覆盖]]避免[[回表]]。如select a.字段 from tableA a, (select id from tableA where age = 1 limit 100000,20) b where a.</description></item><item><title>§ springboot</title><link>https://clickear.github.io/-springboot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-springboot/</guid><description>[[spring中事务处理]]</description></item><item><title>§ TOCs</title><link>https://clickear.github.io/-TOCs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-TOCs/</guid><description>尝试定期将笔记库局部内容结构化，结构化的过程中，会有新的体会。
[[README]] | 关于本库&amp;amp;本花园 [[第二大脑与数字花园]]
[[阅读、笔记与写作]]
[[短文、论文与书籍阅读]] [[双链笔记与卡片笔记]] [[非虚构类写作]] 笔记组织法</description></item><item><title>§ 分布式</title><link>https://clickear.github.io/-%E5%88%86%E5%B8%83%E5%BC%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%88%86%E5%B8%83%E5%BC%8F/</guid><description> [[∑ 分布式算法]] [[缓存]] 实现 [[分布式缓存]] [[redis]] 问题 [[缓存和数据库一致性]] [[缓存雪崩]]， 失效时间 + 随机值 [[缓存穿透]]，访问到不存在的key，达到数据库. 存空值。 缓存击穿， 热点key失效，直接访问 分布式缓存([[redis]]) 高效原因？执行命令单线程，IO多线程。即单reactor多线程模式改进，将read/send使用IO多线程来处理。 高可用 RDB(全量数据) AOF(增量数据，类似顺序写的方式，会进行AOF指令重写，即类似合并指令等操作) 数据复制（副本/分片） 主从同步 (主从复制)，无法自动恢复，难在线扩容。需人工介入 Sentinel（哨兵模式）自动版主从复制。副本存储。 集群模式，哈希槽进行数据分片。支持在线扩容。 数据结构 string: 常用的缓存结构，incr等 list: 主要用来消息队列 hset: hash geo: 经纬度位置 json： [[分布式锁]] redis实现 SET lock_key unique_value NX PX 10000 lua实现原子性 随机值，requestId，避免被其它锁释放 需要过期时间，避免客户端发送异常，无释放。 主从同步问题，需要考虑未同步之前挂了。采用官方redission方案。 业务逻辑执行过长？需续签有效期。 redisson readlock(官方推荐) 守护线程，延迟线程。 大部分redis加解锁成功，才算成功 [[zooKeeper]] 临时顺序节点，监听watch。将最小的节点进行加锁。 释放锁后，通过watch通知下一个锁。 [[分布式id]] leaf: 双Buffer+DB号段获取。 twitter的雪花算法 时间回拨问题？ 机器id无分配回收问题 美团的lefa 雪花算法 时间回拨问题: 采用等待。如果差距过大，启动不了 workerId分配问题，采用zookeeper的顺序节点。 分布式服务框架 [[§ dubbo]] 多副本拷贝？ 类似mysql的主从模式，通过binlog进行复制。 类似redis，每个节点，存储部分solt的。 通过rdb和aof增量数据进行备份。 kafka类似redis，每个topic存储部分分区数据。 solt数据分片 + 副本 限流组件/降级</description></item><item><title>§ 如何成为学习高手 - 高冷冷</title><link>https://clickear.github.io/-%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E5%AD%A6%E4%B9%A0%E9%AB%98%E6%89%8B-%E9%AB%98%E5%86%B7%E5%86%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E5%AD%A6%E4%B9%A0%E9%AB%98%E6%89%8B-%E9%AB%98%E5%86%B7%E5%86%B7/</guid><description> [[如何减少对学习的排斥和厌恶心理]] [[如何告别伪学霸和学酥状态]] [[如何学会考试]] [[如何在考场上超常发挥]] [[如何全面提升专注力，学习不走神]] 长期记忆:[[如何提高长期记忆能力，复习是唯一路径]] 短期记忆:[[连点成线记忆法，记忆时缩写，回忆时扩写]] 不论长短，根本原理:[[高效记忆的根本：主动加工和组块化记忆]] [[如何高效读书，如何记住所读]] [[如何快速入门新领域，如何快速学会新技能]] [[如何快速完成学习和工作任务]] [[如何克服拖延症]] [[利用逆向思维，使自己成为一个真正自律的人]] [[所处物理环境对学习和工作效率影响极大]] [[如果在家，如何反人性做到高度自律]] [[如何戒掉玩手机]] [[如何合理地制定计划]] [[如何100%保证完成自己的制定计划]] [[如何完成复杂、艰难、令人痛苦的任务]] [[如何做到每天高效学习12个小时]] [[学霸学啥都快的根本原因和方法论]] [[通过刻意练习，改变智识，让自己更聪明]] [[学习过程中关于认知加工的双加工理论]] [[没有完美的方法论和工具，找到一个后，大量练习和实践才是关键]]</description></item><item><title>§ 并发</title><link>https://clickear.github.io/-%E5%B9%B6%E5%8F%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%B9%B6%E5%8F%91/</guid><description>进程和线程 进程作为资源分配的基本单位，线程作为资源调度的基本单位。 线程 优雅关闭 不建议使用stop和destory，会强制杀死线程，资源可能没有释放或正常关闭。 合理的是让其运行完。如果是循环运行线程，通过通信机制让其退出。 守护线程 jvm只有守护线程时，会退出。回收线程等都算守护线程。 如果有用户线程，就算主线程退出，也不会退出。 线程流转图 轻量级阻塞(对应线程状态是WAITING(会无期限等待)或者TIMED_WAITING(会阻塞一个有限时间))，可被中断 重量级阻塞(对应线程状态是BLOCKED)，如[[synchronized]]不可被中断。 线程流转 初始化是NEW状态 调用start()后，进入到RUNNING和READY之间切换，由操作系统根据时间片进行轮转。程序可通过yield()放弃cpu占用 一旦调用轻量级阻塞函数，线程就会进入到WAITING(会无期限等待)或者TIMED_WAITING(会阻塞一个有限时间)。 如果用的是重量级阻塞,即[[synchronized]]，就会进入BLOCKED状态 t.</description></item><item><title>§ 王者荣耀</title><link>https://clickear.github.io/-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/</guid><description>[[王者荣耀和公司组织架构的类比映射]]
王者荣耀的基础通用知识 [[红蓝双方地形及ban and pick - bp方法]] [[开局阵容分析与应对]] [[兵线、防御塔及经济]] [[草丛与视野]] [[出装与对线]] [[带线还是支援]] [[打团先手与后手]] [[反野、开龙与逼团]] [[顺风与逆风]] [[意识与操作]] [[荣耀战力与巅峰赛]] [[操作设置与三指]] [[时势造英雄：版本之子]] [[节奏与关键时间点]] 王者荣耀各个位置及英雄的细节操作 [[打野]] [[对抗路]] [[项羽]] [[廉颇]] [[猪八戒]] [[发育路]] [[后羿]] [[李元芳]] [[中路]] [[杨玉环]] [[嫦娥]] [[张良]] [[沈梦溪]] [[游走]] [[太乙真人]] [[鲁班大师]] [[张飞]] [[牛魔]] [[孙膑]]</description></item><item><title>§ 目前知名的在线mooc</title><link>https://clickear.github.io/-%E7%9B%AE%E5%89%8D%E7%9F%A5%E5%90%8D%E7%9A%84%E5%9C%A8%E7%BA%BFmooc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E7%9B%AE%E5%89%8D%E7%9F%A5%E5%90%8D%E7%9A%84%E5%9C%A8%E7%BA%BFmooc/</guid><description>国外课程
Learn the Latest Tech Skills; Advance Your Career | Udacity Coursera | Degrees, Certificates, &amp;amp; Free Online Courses edX | Free Online Courses by Harvard, MIT, &amp;amp; more | edX Khan Academy | Free Online Courses, Lessons &amp;amp; Practice 国内主打大学课程</description></item><item><title>§ 笔记写作系统</title><link>https://clickear.github.io/-%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid><description> Thoughts Memo 汉化组译制
原文： §Note-writing systems (andymatuschak.org)
原则： [[常青笔记是知识工作的基本单位]] [[更好地记笔记这个描述太过流于表面；核心在于更好地思考]] [[知识工作应能聚沙成塔]] [[笔记写作实践大多是无效的]] [[笔记写作的反馈不足]] 阅读与写笔记 [[写你所读，以求内化]] [[常青笔记有助于积累阅读成果]] [[收集材料的作用在感觉上被夸大了]] [[自主思考]] [[理解概念需与其尽力较量]] 写作促使人们更加深入地理解 [[如何在阅读时整理所得]] [[文献笔记是次要的，分离的]] [[如何将阅读标注处理成常青笔记]] [[外出时方便抓住灵感的口袋便笺]] [[为临时性的和不完整的笔记设置写作收件箱]] [[为有潜在价值的参考引用建立一个阅读收件箱]] [[不应该设置多处收件箱]] [[谨防自动导入阅读收件箱]] [[用手机收集和分流，而不是（通常）阅读]] 思考和写笔记 [[常青笔记有助于积累洞见]] [[间隔重复对于逐步完善灵光一闪可能有用]] [[卓越洞见从之前的所思所想中涌现]] [[头脑风暴往往可以替代缺位的见解积累系统]] [[常青笔记是发展大胆想法的安全场所]] [[常青笔记可以提高谈话的信息带宽]] [[对话涵盖多个讨论者的常青笔记可能会促进协作意义构建]] 写作和写笔记 [[可执行的写作策略]] [[在写作时创建推测性大纲]] [[常青笔记工作流能降低改稿的情绪负担]] [[常青笔记实现顺畅而渐进的写作（「渐进写作」）]] 笔记的结构 [[常青笔记]] [[大多数人只写临时的笔记]] [[常青笔记的维护近似于间隔重复]] [[常青笔记应面向概念]] [[常青笔记应该是原子化的]] [[常青笔记的标题就像 API]] [[笔记标题建议正面表述，以促进说理系统化]] [[笔记标题建议使用完整的句子，避免模糊主张]] [[常青笔记之间应该建立大量链接]] [[笔记应该让你吃惊]] PKMs（个人知识管理系统）中的关联结构 [[优先建立信息间的联系来分类，而非使用层级式分类法]] [[标签是无效的关联结构]] [[被索引的参考资料与标签]] 影响 与参考系统的关系 [[创建超链接到我的参考档案]] [[使用笔记在内容中建立联想的优缺点]] 工具 [[数字笔记系统专注于笔记个体的展示和操作，常忽略笔记之间内在连接所产生的意义]] 纯文本的价值 用纯文本 ID 来链接材料 在一个没有应用程序的系统中成为人类的连接器 历史/社区 卡片盒笔记系统 卢曼 Christian 和 Sascha 卡片笔记写作法 - Ahrens</description></item><item><title>§ 面试现场 - 白海飞</title><link>https://clickear.github.io/-%E9%9D%A2%E8%AF%95%E7%8E%B0%E5%9C%BA-%E7%99%BD%E6%B5%B7%E9%A3%9E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E9%9D%A2%E8%AF%95%E7%8E%B0%E5%9C%BA-%E7%99%BD%E6%B5%B7%E9%A3%9E/</guid><description/></item><item><title>§javaAgent</title><link>https://clickear.github.io/javaAgent/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/javaAgent/</guid><description> 什么是[[javaAgent]] 最佳实践 类隔离 &amp;ndash;&amp;gt; [[类加载器]] 开源项目 [[arthas]] jvmbox skywalking-agent 优秀文章 多agent治理在海拍客的应用与实践 | 海拍客技术博客</description></item><item><title>» Daily notes工作流</title><link>https://clickear.github.io/-Daily-notes%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-Daily-notes%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>dailynote中写闪念笔记，生成的文件回顾整理时挪到永久笔记中 [[dailynote]]绝不是日记。正经人谁写日记啊？它就是每天生成一个当天的文件，在这个文件中，做笔记。其实就是[[一元化收集]] 的 INBOX 作用。同时还有[[工作台]] 的作用。
做法：
电脑端直接在这输入今日日志和灵感。
将[[🤖滴答清单]]收集箱里的来自移动端的闪念或收藏，整理至每日日志中。
每个月或者[[看心情整理文件和MOC]]。
优点：
减小做 [[闪念笔记]] 输入摩擦力。
整理 [[dailynote]] 时，天然地进行了笔记重组与回顾。
它是 [[常青笔记]] 的一个回顾线索。</description></item><item><title>» 播客笔记工作流</title><link>https://clickear.github.io/-%E6%92%AD%E5%AE%A2%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%92%AD%E5%AE%A2%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>适用场景 音频podcast播客的笔记。 需要拿到mp3等源文件做转写。 涉及工具 [[小宇宙app]]、[[喜马拉雅app]]、[[微信听书]]等 [[飞书妙记]] [[🤖obsidian]] 简易工作流 完整工作流</description></item><item><title>» 文章笔记工作流</title><link>https://clickear.github.io/-%E6%96%87%E7%AB%A0%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%96%87%E7%AB%A0%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>适用场景 网络上的播客、论坛等各类文章的摘录和阅读。 涉及工具 剪藏工具： [[🤖简悦]] chrome [[markdownload]]插件 [[🤖cubox]] obsidian 简易工作流 单篇中等长度文章来说：</description></item><item><title>» 本库文章发布工作流</title><link>https://clickear.github.io/-%E6%9C%AC%E5%BA%93%E6%96%87%E7%AB%A0%E5%8F%91%E5%B8%83%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%9C%AC%E5%BA%93%E6%96%87%E7%AB%A0%E5%8F%91%E5%B8%83%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>文章的源文件，先发 github 私有库。
再通过 github actions，自动分发至各个发布平台。</description></item><item><title>» 电影笔记工作流</title><link>https://clickear.github.io/-%E7%94%B5%E5%BD%B1%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E7%94%B5%E5%BD%B1%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>适用场景 看线上或线下电影。 涉及工具 [[豆瓣电影]] obsidian [[iina]] [[snipaste]] 简易工作流 时间戳、截图、标注 完整工作流</description></item><item><title>» 电视剧笔记工作流</title><link>https://clickear.github.io/-%E7%94%B5%E8%A7%86%E5%89%A7%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E7%94%B5%E8%A7%86%E5%89%A7%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>x:: [[» 电影笔记工作流]]</description></item><item><title>» 视频笔记工作流</title><link>https://clickear.github.io/-%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>适用场景 [[bilibili]]和[[youtube]]等视频的观看笔记。 涉及工具 [[bilibili]]和[[youtube]] [[youtube 双字幕]] [[downie]]下载工具 chrome [[油猴脚本 - tempermonkey]]的b站和youtube下载插件。 [[飞书妙记]] 简易工作流 完整工作流</description></item><item><title>» 论文笔记工作流</title><link>https://clickear.github.io/-%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>适用场景 若是pdf文件为主的短课程，则借用zotero实现pdf标注。[[«« 课程笔记工作流]]
涉及工具 [[zotero]] [[Zotero IF Pro Max]]插件 [[🤖obsidian]] 简易工作流 Zotero协同Obsidian完成PDF文件高亮标注，实现原文与笔记双向跳转_哔哩哔哩_bilibili
完整工作流</description></item><item><title>» 读书笔记工作流</title><link>https://clickear.github.io/-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>适用场景 阅读微信读书的书。 自己上传epub电子书文件。 epub文件从[[zlibrary]]中获取。 涉及工具 [[微信读书]] obsidian [[weread plugin]]插件 chrome [[wereader插件]] 简易工作流 完整工作流</description></item><item><title>» 课程笔记工作流</title><link>https://clickear.github.io/-%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>适用场景 文字课程、音频课程、视频课程、线下课程均可。 尽量找老师获取到文字稿，pdf格式最佳。 短期、中期、长期课程均可。 涉及工具 [[飞书妙记]] [[bob]] [[marginnote]] [[🤖obsidian]] 简易工作流 完整工作流</description></item><item><title>œ 本库常用的dataview工作流</title><link>https://clickear.github.io/-%E6%9C%AC%E5%BA%93%E5%B8%B8%E7%94%A8%E7%9A%84dataview%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%9C%AC%E5%BA%93%E5%B8%B8%E7%94%A8%E7%9A%84dataview%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>提问：
为什么要写这个dataview，它实现了什么价值，带来了什么便利？ 是否有成熟的插件可能可以覆盖这个需求？ 能否复用已有代码？ 查询手册：
[[dataview|dataviewjs]]
调试步骤：
源码模式 cmd + r 切换 注释写代码块内 console控制台看log 功能实现后，注意其是否具备可移植性</description></item><item><title>Ω 约束条件</title><link>https://clickear.github.io/%CE%A9-%E7%BA%A6%E6%9D%9F%E6%9D%A1%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%CE%A9-%E7%BA%A6%E6%9D%9F%E6%9D%A1%E4%BB%B6/</guid><description>自动生成的frontmatter的url，[[quartz]]构建时候报错，需要手动删除。</description></item><item><title>∑ Daily notes待整理</title><link>https://clickear.github.io/-Daily-notes%E5%BE%85%E6%95%B4%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-Daily-notes%E5%BE%85%E6%95%B4%E7%90%86/</guid><description/></item><item><title>∑ excalidraw 白板创建入口</title><link>https://clickear.github.io/-excalidraw-%E7%99%BD%E6%9D%BF%E5%88%9B%E5%BB%BA%E5%85%A5%E5%8F%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-excalidraw-%E7%99%BD%E6%9D%BF%E5%88%9B%E5%BB%BA%E5%85%A5%E5%8F%A3/</guid><description>excalidraw白板文件 若用熟练了，在其他page中频繁嵌入excalidraw文件，则考虑直接将那些文件和该page放进同一个文件夹，而不是统一归置到Extras这里。
[[数字时代如何更好地工作与生活 - 图]]
excalibrain自动生成的文件</description></item><item><title>∑ flomo101阅读笔记</title><link>https://clickear.github.io/-flomo101%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-flomo101%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</guid><description>[[§ flomo101 - 思维方式目录]]
[[🤖flomo]]产品其实功能设计上，非常简单，可以认为比安卓或苹果手机自带的笔记软件多不了多少功能。其牛逼之处在于：创始人少楠给予其灌注的思维方式和使用理念。官方整理的每一篇都很值得多次阅读，故我在此对其做读书笔记。版权归flomo所有，侵删。
很多obsidian的摘录笔记模板很花哨，我觉得使用起来很难坚持。我自己就采用==高亮==语法进行重点标注、callout语法进行想法记录、在文章最前面做总结。
通过阅读官方help里面最有价值的思维方式目录这个章节，学习flomo背后的理念，但不一定要使用flomo。</description></item><item><title>∑ golang</title><link>https://clickear.github.io/-golang/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-golang/</guid><description/></item><item><title>∑ hystrix</title><link>https://clickear.github.io/-hystrix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-hystrix/</guid><description/></item><item><title>∑ JVM</title><link>https://clickear.github.io/-JVM/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-JVM/</guid><description>::我的理解 什么是[[JAVA虚拟机]]，顾名思义，就是模拟通用的计算机,来进行执行代码。也就是说，需要每个平台都有虚拟机程序，在虚拟机程序上屏蔽操作系统的差异。然后执行自己的一套代码。想[[C语言]] 这种，都是通过每个平台的[[编译器]]上编译成每个平台可执行的二进制代码来执行。而java则是通过编译成 [[字节码]],来达到一次编译，到处执行。因为[[JAVA虚拟机]]执行的就是特定代码，即编译后的[[字节码]]
::架构图 ![[JVM架构图]]
先经过[[前端编译]]，编译成class文件。然后通过[[类加载子系统]]加载到内存中，将方法等放到相应的方法区，常量区等。方便后续执行代码使用到。后通过JVM执行引擎执行代码。没调用一个方法，需要将[[栈帧]]压栈，然后结合堆区，方法区，常量区和程序计数器进行配合执行代码。JVM执行引擎，会收集runtime信息，判断是否为[[热点代码]],必要时进行编译成机器码。
这里涉及到JVM常用的一个问题，就是堆区垃圾的释放问题。在C++中，是由代码进行手动释放的。JVM是自动释放垃圾的。这就涉及到[[垃圾回收]]
文献 GitHub - doocs/jvm: 🤗 JVM 底层原理最全知识总结</description></item><item><title>∑ MOCs</title><link>https://clickear.github.io/-MOCs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-MOCs/</guid><description>这个是一个大 [[MOC]] 或叫根 MOC，是本库的所有 MOC 的 MOC。现在我还没想清楚，所以是边实践边改动。
初来乍到，随意走走 这个库，就是我外置的 [[第二大脑]]，我稍加打理，加上一些引导信息，开源到网络上，邀请观众来瞧瞧，变成了我开放的[[数字花园]]。他可不是传统博客的新瓶装旧酒哦。所以你可以先瞧瞧[[第二大脑与数字花园]] 是怎么一回事儿。
如果这个库里面空空如也，或者填满了我自己再也不会看的剪藏文章，那不就是又一个印象笔记。所以其次要关注这个话题 [[阅读、笔记与写作]]，学与思结合，并落地成文字，是为其道。
当你开始成为 [[🤖obsidian]]的重度用户，你大概率也会对[[∑ PKM]]开始探索，它不是以前剪藏时代的信息输入，也不是简单的任务管理。为了打造[[个人效率系统工作流]]，我选用了几个各领域最棒的效率软件，进行了[[∑ 工作和生活的效率体系建设]]，它包含4个子系统：[[个人信息管理系统]]，[[个人任务管理系统]]，[[个人任务管理系统]]，[[个人输出发布系统]]。通过一些简单的编程知识，写一点脚本，相当于加上一些胶水，让[[效率系统4大子系统联动与配合]]。
写到这里，我沉默了。这个库，包含了几乎全部的我个人的深度思考内容，稍加整理做成课卖钱都没问题，我为什么愿意完全免费公开发布？[[🤖obsidian]]为什么能让个人用户完全免费使用，为什么有这么多开发者写插件给我们免费使用？这些行为背后都是为了流量，而后将流量变现吗？这值得深究[[开源、免费与流量]]。</description></item><item><title>∑ mq</title><link>https://clickear.github.io/-mq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-mq/</guid><description>关键词 异步、削峰、解耦、消息分发、大事务拆分成 (小事务+ 异步)、错误重试、消费者幂、分布式、重复消费、消息丢失、顺序消费等
什么是消息队列(MQ)? 队列是一种先进先出的数据结构。但是作为中间件，跟单机中的队列是不一样的。 毫无疑问，单机的队列是无法满足需求的，集群/分布式。 消除了单点故障、保证消息可靠性等。消息队列可以简单理解为：把要传输的数据放在队列中。消息队列做业务解耦/最终一致性/广播/错峰流控等。反之，如果需要强一致性，关注业务逻辑的处理结果，则RPC显得更为合适。
名称定义 消费者: 生产者 broker 优点 解耦 作为一个订单系统，我们可以需要在创建订单、有库存信息或者有物流信息调用其它子系统。耦合严重。如某个系统挂了，导致该接口异常。将消息发送到队列中，需要使用的系统，去订阅的方式</description></item><item><title>∑ mysql</title><link>https://clickear.github.io/-mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-mysql/</guid><description>::一览mysql mysql架构图：
mysql思维导图：
:: 原资料地址 mysql思维导图：
:: 原资料地址</description></item><item><title>∑ PKM</title><link>https://clickear.github.io/-PKM/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-PKM/</guid><description>我对pkm的定义 [[pkm 的定义]]
Nick Milo对pkm的理解 [[PKM系统的不同侧重点-四象限图 by lyt]]
[[PKM 的指导性原则 from lyt]]
我的PKM工具变迁 [[我的 PKM 工具变迁]]
[[为什么需要新工具新方法]]
为什么需要构建PKM系统？ 为了[[终身学习]]</description></item><item><title>∑ rpc框架实战</title><link>https://clickear.github.io/-rpc%E6%A1%86%E6%9E%B6%E5%AE%9E%E6%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-rpc%E6%A1%86%E6%9E%B6%E5%AE%9E%E6%88%98/</guid><description>RPC 框架能够帮助我们解决系统拆分后的通信问题，并且能让我们像调用本地一样去调用远程方法，隐藏底层网络通信的复杂性，让我们更专注于业务逻辑。java中的实现, [[§ dubbo]]
前置知识 RPC是一个远程调用，需要通过网络来传输数据，为了可靠性，一般会采用TCP来传输数据。
RPC 是一个远程调用，那肯定就需要通过网络来传输数据，并且 RPC 常用于业务系统之间的数据交互，需要保证其可靠性，所以 RPC 一般默认采用 TCP 来传输。我们常用的 HTTP 协议也是建立在 TCP 之上的 网络传输的数据必须是二进制数据，将调用方参数转换成二进制，为序列化。 object—&amp;gt; byte[]</description></item><item><title>∑ 人与科技融合</title><link>https://clickear.github.io/-%E4%BA%BA%E4%B8%8E%E7%A7%91%E6%8A%80%E8%9E%8D%E5%90%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E4%BA%BA%E4%B8%8E%E7%A7%91%E6%8A%80%E8%9E%8D%E5%90%88/</guid><description/></item><item><title>∑ 人文社科通识</title><link>https://clickear.github.io/-%E4%BA%BA%E6%96%87%E7%A4%BE%E7%A7%91%E9%80%9A%E8%AF%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E4%BA%BA%E6%96%87%E7%A4%BE%E7%A7%91%E9%80%9A%E8%AF%86/</guid><description>#todo 参考考研大纲要求的科目，进行基础知识的入门即可。比如计算机考研，就是经典的 4 门，计算机组成，网络，数据结构，操作系统
为什么需要通识教育 [[∑ 法学]] [[∑ 金融学]] [[∑ 经济学]] [[∑ 哲学]]</description></item><item><title>∑ 会计基础</title><link>https://clickear.github.io/-%E4%BC%9A%E8%AE%A1%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E4%BC%9A%E8%AE%A1%E5%9F%BA%E7%A1%80/</guid><description/></item><item><title>∑ 分布式系统</title><link>https://clickear.github.io/-%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/</guid><description>#todo/now
java不学分布式可以面试找工作吗？ - 知乎</description></item><item><title>∑ 哲学</title><link>https://clickear.github.io/-%E5%93%B2%E5%AD%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%93%B2%E5%AD%A6/</guid><description/></item><item><title>∑ 在线课程MOOC</title><link>https://clickear.github.io/-%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8BMOOC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8BMOOC/</guid><description>[[§ 目前知名的在线mooc]]</description></item><item><title>∑ 城市与旅行</title><link>https://clickear.github.io/-%E5%9F%8E%E5%B8%82%E4%B8%8E%E6%97%85%E8%A1%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%9F%8E%E5%B8%82%E4%B8%8E%E6%97%85%E8%A1%8C/</guid><description/></item><item><title>∑ 小知识点</title><link>https://clickear.github.io/-%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/</guid><description>我对小知识的定义 任何小知识，对专业人士来说，可能都是要付出一生去精进。但是我的目的是接触不同的领域，满足好奇心，比如游泳，攀岩等等，我只需要入门就够了。所以我将一切我只需要达到 [[学习目标的分级]] 的 40 分，入门水平即可的知识，都是小知识。
为什么要学习小知识 这些技能，基本上只需要几个小时，就能初步入门，感受到一点小乐趣。
这些活动，一般可能都是经验性的掌握，也就是说，学会就会了，有终身肌肉记忆的效果，没学会的话做再多笔记都没卵用。那么做笔记的时候，应该要注重记忆钩子的构造，可以帮助自己快速回忆起当初学习中的时候的一些细节。以及描述学习的时候，对自身的学习状态、进度、克服困难等过程的描述为主。
除了通识类智力型技能的学习，采用 [[费曼技巧]]，[[📚刻意练习]] 等方法。
还有语言类的知识学习，需要用什么方法？待总结。 #todo/某天
以及经验类的技能的学习，需要用什么方法？ #todo/某天
偏智力的活动 [[3阶魔方还原入门]] [[五子棋必胜法]] 偏口才的活动 [[狼人杀轻度入门]] [[谁是卧底轻度入门]] [[五分钟脱口秀]] 逃离舒适区，非常不擅长的领域 [[转笔入门]] [[踩高跷入门]] [[开车机动车入门]] 这几个都是自己缺乏勇气，过于怯懦，导致学习很慢。 [[攀岩入门]] [[游泳入门]] [[滑雪入门]] [[溜冰入门]] [[自行车入门]] 网络游戏类，用较短时间，达到精通水平 [[冒险岛]] [[三国杀]] [[炉石传说]] [[§ 王者荣耀]] [[天谕手游]] 单机游戏类，玩的时候尽情享受其中，欣赏第一、过关第二 [[地狱边境 limbo]] [[机械迷城]] [[INSIDE]] [[GRIS]]</description></item><item><title>∑ 工作和生活的效率体系建设</title><link>https://clickear.github.io/-%E5%B7%A5%E4%BD%9C%E5%92%8C%E7%94%9F%E6%B4%BB%E7%9A%84%E6%95%88%E7%8E%87%E4%BD%93%E7%B3%BB%E5%BB%BA%E8%AE%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%B7%A5%E4%BD%9C%E5%92%8C%E7%94%9F%E6%B4%BB%E7%9A%84%E6%95%88%E7%8E%87%E4%BD%93%E7%B3%BB%E5%BB%BA%E8%AE%BE/</guid><description>和项目管理关系的映射 信息管理 - 需求管理。产品的需求来源四面八方，用户需求，一线 SA 需求，周边配合需求，自发掘需求等等。
任务管理 - 开发计划。分解成可执行的粒度进行实际开发和操作。
知识管理 - 团队赋能。团队不断进化，才能应对更高的挑战。
输出发布 - 产品上线。上线获得用户真实体验，才能避免闭门造车，才能持续演进自己的产品的方向、战略、迭代计划等等。
为什么要区分知识管理和信息管理 所有的书，视频，首先都是信息。只有我思考并输出，并应用了，才是知识。obsidian 要当成我的 [[∑ PKM]]工具，而不仅仅是[[个人信息管理系统]] 工具。</description></item><item><title>∑ 常见心理学效应</title><link>https://clickear.github.io/-%E5%B8%B8%E8%A7%81%E5%BF%83%E7%90%86%E5%AD%A6%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%B8%B8%E8%A7%81%E5%BF%83%E7%90%86%E5%AD%A6%E6%95%88%E5%BA%94/</guid><description>[[安慰剂效应]]
[[拆屋效应]]
[[登门槛效应]]
[[飞轮效应]]
[[蝴蝶效应]]
[[棘轮效应]]
[[刻板印象]]
[[马太效应]]
[[墨菲定律]]
[[鲶鱼效应]]
[[皮格马利翁效应]]
[[破窗效应]]
[[收藏者谬误]]
[[首因效应和近因效应]]
[[习得性无助]]
[[延迟满足]]
[[晕轮效应]]</description></item><item><title>∑ 常见经济学概念</title><link>https://clickear.github.io/-%E5%B8%B8%E8%A7%81%E7%BB%8F%E6%B5%8E%E5%AD%A6%E6%A6%82%E5%BF%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%B8%B8%E8%A7%81%E7%BB%8F%E6%B5%8E%E5%AD%A6%E6%A6%82%E5%BF%B5/</guid><description>宏观经济学 [[比较优势]]
微观经济学 [[边际效应]]</description></item><item><title>∑ 常青笔记阅读笔记</title><link>https://clickear.github.io/-%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</guid><description>中文翻译阅读入口 [[常青笔记]] &amp;ndash; 翻译 by 知乎[[🧑叶峻峣]]团队
阅读提醒及版权授权 ⚠️提醒：由于是卡片笔记组成的内容，会颠覆你传统的文章线性阅读体验，请做好心理准备。此外，如果要完整阅读常青笔记相关的内容，可能要1小时以上。但好在，卡片笔记原子化的特点，让你可以随时抽离，而不至于产生好电影看到一半被拉走的不快之感。 若你非要以传统的线性方式来阅读（不推荐），入口在这：[[§ 笔记写作系统]] 🤞若您之前没有阅读由双链笔记组成的文章的经验，这里有个小建议：[[如何阅读由双链笔记组成的文章]]。 📢注：本打算自己翻译一遍，但工作量实在太大了，而且[[🧑叶峻峣]]团队翻译地也非常好。这则笔记我可能会跟随自己的开源策略发布到网上，如果侵权了，请联系我删除。 📝提示：如偶有几个页面没有对应链接，则是我还未搬运或团队未翻译，可以尝试自行去知乎搜索该标题。 [[2022-08-10]]更新：已取得原作者的同意。我不是知识的生产者，我只是大佬的传声筒💪。 为什么要剪藏这么多内容到我自己的笔记库中 尝试完整阅读[[🧑Andy Matuschak]]的关于常青笔记的笔记式文章，常看常新。他围绕常青笔记写的笔记可谓是市面上最佳的[[卡片笔记写作法：如何实现从阅读到写作-申克·阿伦斯]]的实践案例参考 。也借此不断提醒自己未来做笔记的真正目的，避免迷失。</description></item><item><title>∑ 平台＋插件</title><link>https://clickear.github.io/-%E5%B9%B3%E5%8F%B0%E6%8F%92%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%B9%B3%E5%8F%B0%E6%8F%92%E4%BB%B6/</guid><description>x:: [[渐进式 - progressive]]
平台 + 插件： 优势 平台默认配置一般极简化，开箱即用 通过插件机制，实现更多可玩性，用别人造好的轮子，开自己的高速公路。 劣势 有插件机制的平台，再怎么开箱即用，比其他极致讲究用户体验的软件也要复杂些，所以一般会把纯小白和不愿折腾者滤除掉。但这类人群随着国家教育水平提升，感觉是越来越少了。 插件质量问题，可能对平台本身造成不可预料影响，从而折腾浪费时间，但遇到概率也比较低。 涉及软件汇总： 浏览器：edge 或 [[chrome]] [[油猴脚本 - tempermonkey]] 编辑器：[[🤖VSCode]] 笔记软件：[[🤖obsidian]]，[[🤖logseq]]，[[onenote]] 文献管理: [[zotero]] 快速启动：[[alfred]]，[[raycast]] 服务聚合：[[🤖docker]] 翻译工具：[[bob]] 相关编程工具 前端打包：[[webpack]]，[[vite]]</description></item><item><title>∑ 并发</title><link>https://clickear.github.io/-%E5%B9%B6%E5%8F%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%B9%B6%E5%8F%91/</guid><description>#todo/continue
进程和线程 +
锁
重量级锁和轻量级锁。 多线程访问 &amp;ndash;&amp;gt; 线程安全。
[[volatile]]如何保证可见性和有序性？
AQS。。。</description></item><item><title>∑ 必备软件</title><link>https://clickear.github.io/-%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/</guid><description>全平台 + 云同步 [[搜狗输入法]] Mac 独有 [[mac必备软件]] Win 独有 [[windows必备软件]]
安卓独有 [[安卓手机必备软件]]</description></item><item><title>∑ 快捷键</title><link>https://clickear.github.io/-%E5%BF%AB%E6%8D%B7%E9%94%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid><description>[[快捷键、图标、命令行的对比与选择]]
为了避免因为惰性，而导致习惯变形，失去高效性。在这里整理一下当前常用软件的快捷键。
就用默认，不改映射。
MacOS 系统知识 全局
软件 功能 快捷键 频率 是否已完全习惯 alfred or raycast 打开全局快捷命令悬浮窗 cmd + space 极高 是 bob ocr 截图并获取翻译结果 option + shift + s 高 bob 打开翻译悬浮窗 option + a 高 [[🤖滴答清单]] 打开滴答任务添加悬浮窗 cmd + shift +a 高 搜狗输入法 语音输入 option + option 低 全软件 打开软件设置 cmd + , 系统自带 截图 cmd +shift + 5 软件内</description></item><item><title>∑ 投资与理财</title><link>https://clickear.github.io/-%E6%8A%95%E8%B5%84%E4%B8%8E%E7%90%86%E8%B4%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%8A%95%E8%B5%84%E4%B8%8E%E7%90%86%E8%B4%A2/</guid><description/></item><item><title>∑ 持续学习</title><link>https://clickear.github.io/-%E6%8C%81%E7%BB%AD%E5%AD%A6%E4%B9%A0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%8C%81%E7%BB%AD%E5%AD%A6%E4%B9%A0/</guid><description>不要轻视不直接产生实践价值的知识; 不要对陷入已经被你熟练掌握的技术中不能自拔.&amp;ndash; 周志明
#todo/think
如何成为一个架构师？ - 知乎</description></item><item><title>∑ 播客笔记</title><link>https://clickear.github.io/-%E6%92%AD%E5%AE%A2%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%92%AD%E5%AE%A2%E7%AC%94%E8%AE%B0/</guid><description>x:: [[» 播客笔记工作流]]</description></item><item><title>∑ 文章笔记</title><link>https://clickear.github.io/-%E6%96%87%E7%AB%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%96%87%E7%AB%A0%E7%AC%94%E8%AE%B0/</guid><description>x:: [[» 文章笔记工作流]]
一系列的文章 [[∑ 常青笔记阅读笔记]] [[∑ flomo101阅读笔记]] [[∑ 常见思维工具]] 单篇文章 [[使用Unsplash API生成随机图片]]</description></item><item><title>∑ 本库Dataview汇总</title><link>https://clickear.github.io/-%E6%9C%AC%E5%BA%93Dataview%E6%B1%87%E6%80%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%9C%AC%E5%BA%93Dataview%E6%B1%87%E6%80%BB/</guid><description>x:: [[» 本库常用的dataview工作流]]
[[本库的宏观统计数据]] [[模板汇总]] [[微信读书清单]] [[Daily notes汇总]] [[EXTERNAL]] [[Index for 已发布文章和草稿]] [[LATEST]] [[MOC文件汇总]]</description></item><item><title>∑ 沟通与表达</title><link>https://clickear.github.io/-%E6%B2%9F%E9%80%9A%E4%B8%8E%E8%A1%A8%E8%BE%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%B2%9F%E9%80%9A%E4%B8%8E%E8%A1%A8%E8%BE%BE/</guid><description/></item><item><title>∑ 法学</title><link>https://clickear.github.io/-%E6%B3%95%E5%AD%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%B3%95%E5%AD%A6/</guid><description/></item><item><title>∑ 电影笔记</title><link>https://clickear.github.io/-%E7%94%B5%E5%BD%B1%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E7%94%B5%E5%BD%B1%E7%AC%94%E8%AE%B0/</guid><description>x:: [[» 电影笔记工作流]]
[[🎬彗星来的那一夜]]
[[🎬怦然心动]]
[[🎬少年派的奇幻漂流]]
[[🎬泰坦尼克号]]
[[🎬肖申克的救赎]]
[[🎬星际穿越]]
[[🎬这个杀手不太冷]]</description></item><item><title>∑ 电视剧笔记</title><link>https://clickear.github.io/-%E7%94%B5%E8%A7%86%E5%89%A7%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E7%94%B5%E8%A7%86%E5%89%A7%E7%AC%94%E8%AE%B0/</guid><description>x:: [[» 电视剧笔记工作流]]
[[📺天才基本法]]</description></item><item><title>∑ 经济学</title><link>https://clickear.github.io/-%E7%BB%8F%E6%B5%8E%E5%AD%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E7%BB%8F%E6%B5%8E%E5%AD%A6/</guid><description/></item><item><title>∑ 职业规划？</title><link>https://clickear.github.io/-%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/</guid><description>#todo/think
外企？ 英语？
30岁程序员，一直呆在小公司，现在当了leader，很迷茫，该跳槽到大公司当普通开发吗？ - 知乎</description></item><item><title>∑ 舌尖-瑞幸门店服务设计</title><link>https://clickear.github.io/-%E8%88%8C%E5%B0%96-%E7%91%9E%E5%B9%B8%E9%97%A8%E5%BA%97%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%88%8C%E5%B0%96-%E7%91%9E%E5%B9%B8%E9%97%A8%E5%BA%97%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1/</guid><description> [[舌尖-瑞幸门店服务设计-首页推荐门店]] [[舌尖-瑞幸门店服务设计-门店下单]] [[舌尖-瑞幸门店服务设计-门店配送]] [[舌尖-瑞幸门店服务设计-附近门店列表]]</description></item><item><title>∑ 视频笔记</title><link>https://clickear.github.io/-%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/</guid><description>x:: [[» 视频笔记工作流]]
[[📹storytelling]]
[[📹【罗翔】我们为什么要读书？]]
[[📹回村3天，二舅治好了我的精神内耗 - 视频笔记]]
[[📹视频笔记-youtube]]
[[📹【何同学】我做了一个自己打字的键盘&amp;hellip;]]</description></item><item><title>∑ 计算机科学</title><link>https://clickear.github.io/-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/</guid><description> [[计算机基础知识]] [[计算机体系结构]] [[计算机网络]] [[计算机操作系统]] [[∑ 数据结构与算法]]</description></item><item><title>∑ 论文笔记</title><link>https://clickear.github.io/-%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/</guid><description>x:: [[» 论文笔记工作流]]</description></item><item><title>∑ 读书笔记</title><link>https://clickear.github.io/-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid><description>x:: [[» 读书笔记工作流]]
一年能看的书，远少于电影数量和电视剧数量。所以直接做一个表格，自己整理好全部的书，而不是依赖豆瓣平台或者微信读书。
阅读方法 [[📚如何阅读一本书]] 常看常新 [[📚这样读书就够了]] 功利性阅读最佳方法，读实用类书籍，必备方法 [[🔡RIA]] [[📚学会提问]] 小说 [[📚白夜行]] [[📚解忧杂货店]] [[📚三体 - 热门批注]] [[📚三重门]] [[📚围城 - 热门批注]] 非虚构读物 [[📚金字塔原理]] [[金字塔原理大全集-芭芭拉·明托]] [[📚金字塔原理 - 热门批注]] [[📚拆掉思维里的强 - 热门批注]] [[📚置身事内]] [[📚置身事内 - 热门批注]] [[卡片笔记]] [[📚如何阅读一本书]] [[📚思考·快与慢]] [[📚这样读书就够了]] [[📚认知觉醒 - 热门批注]] [[📚史蒂夫·乔布斯传 - 热门批注]] 英文原著：</description></item><item><title>∑ 课程笔记</title><link>https://clickear.github.io/-%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/</guid><description>[[» 课程笔记工作流]]
大学人文社科通识课程 得到app的短课程 [[§ 如何成为学习高手 - 高冷冷]]
在线MOOC的中期课程</description></item><item><title>∑ 金融学</title><link>https://clickear.github.io/-%E9%87%91%E8%9E%8D%E5%AD%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E9%87%91%E8%9E%8D%E5%AD%A6/</guid><description/></item><item><title>∑ 面试计划</title><link>https://clickear.github.io/-%E9%9D%A2%E8%AF%95%E8%AE%A1%E5%88%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E9%9D%A2%E8%AF%95%E8%AE%A1%E5%88%92/</guid><description>面试计划 当前阶段，以面试为主要目的，并进行知识点梳理和学习。以尚学堂的大厂学院进行整理。
Java-Interview-Advanced: 中华石杉&amp;ndash;互联网Java面试训练营
Page not found · GitHub · GitHub)
知乎播放量最多的JVM课程《jvm性能调优+面试+实战》 - 知乎 #todo/面试
12丨缓存：数据库成为瓶颈后，动态数据的查询要如何加速？ | JAVA 架构师笔记 #todo/continue</description></item><item><title>一句顶一万句（典藏版）-刘震云</title><link>https://clickear.github.io/%E4%B8%80%E5%8F%A5%E9%A1%B6%E4%B8%80%E4%B8%87%E5%8F%A5%E5%85%B8%E8%97%8F%E7%89%88-%E5%88%98%E9%9C%87%E4%BA%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%80%E5%8F%A5%E9%A1%B6%E4%B8%80%E4%B8%87%E5%8F%A5%E5%85%B8%E8%97%8F%E7%89%88-%E5%88%98%E9%9C%87%E4%BA%91/</guid><description>元数据 [!abstract] 一句顶一万句（典藏版）
书名： 一句顶一万句（典藏版） 作者： 刘震云 简介： 本书是著名作家刘震云先生参磨四年的扛鼎之作。被北京五大评论家誉为“中国的《百年孤独》（诺贝尔获奖作家马尔克斯的作品）”，是刘震云迄今为止最成熟最大气的作品。这部小说洗尽铅华，返璞归真，笔触始终紧贴苦难的大地和贱如草芥的底层人群，结构单纯而内容丰富，命悬一丝而荡气回肠，主人公常常走投无路而又一直勇往直前。这是当代文坛敢于直面真实的不可多得的佳作。著名评论家张颐武说，该书是刘震云“最具企图心和想象力的作品，也是他超越自我的最为坚韧的努力的成果。”我们认为该书是刘震云作品中唯一可以获奖也可以留存文学史的畅销和长销的作品。 出版时间 2016-08-01 00:00:00 ISBN： 9787535486752 分类： 文学-经典作品 出版社： 长江文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>一地鸡毛（典藏版）-刘震云</title><link>https://clickear.github.io/%E4%B8%80%E5%9C%B0%E9%B8%A1%E6%AF%9B%E5%85%B8%E8%97%8F%E7%89%88-%E5%88%98%E9%9C%87%E4%BA%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%80%E5%9C%B0%E9%B8%A1%E6%AF%9B%E5%85%B8%E8%97%8F%E7%89%88-%E5%88%98%E9%9C%87%E4%BA%91/</guid><description>元数据 [!abstract] 一地鸡毛（典藏版）
书名： 一地鸡毛（典藏版） 作者： 刘震云 简介： 《一地鸡毛》被称为新写实主义的代表作，获得多种文学奖，描写了主人公小林在单位在家庭的种种遭遇和心灵轨迹的演变。菜篮子、妻子、孩子、豆腐、保姆、单位中的恩恩怨怨和是是非非。从而反映了大多数中国人在八九十年代的日常生活和生存状态。它真实而生动地反映了大多数中国人生活的主旋律，深刻反映了改革开放的新形势给人们内心和外在的变化。本书以生动的细节和人物形象取胜，是一部精彩作品。 《一地鸡毛》在 出版时就引起轰动，被称为新写实主义的代表作，获得多种文学奖。其中很多篇目是琐碎人生的范本和关系学的教科书。菜篮子、妻子、孩子、保姆、单位……当中的恩恩怨怨和是是非非将官场和家庭的鸡毛蒜皮纤毫毕现，不嫌其俗，不掩其恶，人心之险展示无遗。 出版时间 2016-08-01 00:00:00 ISBN： 9787535486745 分类： 精品小说-社会小说 出版社： 长江文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>一条简单SQL的加锁实现分析</title><link>https://clickear.github.io/%E4%B8%80%E6%9D%A1%E7%AE%80%E5%8D%95SQL%E7%9A%84%E5%8A%A0%E9%94%81%E5%AE%9E%E7%8E%B0%E5%88%86%E6%9E%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%80%E6%9D%A1%E7%AE%80%E5%8D%95SQL%E7%9A%84%E5%8A%A0%E9%94%81%E5%AE%9E%E7%8E%B0%E5%88%86%E6%9E%90/</guid><description>[TOC]
上锁与排除 [!TIP] 上锁模式 💡
快照读，不加锁。如普通的select 隐式加锁， inser,update,delete 加 X锁。排他锁 显示上锁。 select lock in share mode 加S锁。其它都是排他锁 显示上锁。 select * from table_name for update;（当前读，排他锁） 表级别</description></item><item><title>万物生长-冯唐</title><link>https://clickear.github.io/%E4%B8%87%E7%89%A9%E7%94%9F%E9%95%BF-%E5%86%AF%E5%94%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%87%E7%89%A9%E7%94%9F%E9%95%BF-%E5%86%AF%E5%94%90/</guid><description>元数据 [!abstract] 万物生长
书名： 万物生长 作者： 冯唐 简介： 《万物生长》是冯唐的“北京三部曲”的第二部，记录了医科大学新生秋水的八年求学和成长历程。一个是曾共同埋首于数学公式、徘徊在校园小径上的女友兼同学；一个是偶然相识、成熟又风情的情人兼姐姐，两个女人在秋水心中争夺领地，而秋水也从与两个女人的相处中得到成长。全书鲜活地展现了秋水与他的兄弟们在医科大学的八年光阴，还涉及很多对生活现状的描绘与议论，显得尖锐、幽默又不失智慧。 出版时间 2017-06-01 00:00:00 ISBN： 9787533948702 分类： 精品小说-情感小说 出版社： 浙江文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>三体前传：球状闪电-刘慈欣</title><link>https://clickear.github.io/%E4%B8%89%E4%BD%93%E5%89%8D%E4%BC%A0%E7%90%83%E7%8A%B6%E9%97%AA%E7%94%B5-%E5%88%98%E6%85%88%E6%AC%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%89%E4%BD%93%E5%89%8D%E4%BC%A0%E7%90%83%E7%8A%B6%E9%97%AA%E7%94%B5-%E5%88%98%E6%85%88%E6%AC%A3/</guid><description>元数据 [!abstract] 三体前传：球状闪电
书名： 三体前传：球状闪电 作者： 刘慈欣 简介： 没有《球状闪电》，就没有后来的《三体》！《三体》前传！亚洲首位雨果奖得主刘慈欣的三大长篇之一！（《三体》《球状闪电》《超新星纪元》）《球状闪电》拥有最狂野的想象力！带你从另一个维度观察世界！全面展现刘慈欣对人生的终极思考！《三体》中解决可控核聚变的顶级物理学家丁仪，正是《球状闪电》中找到球状闪电的关键人物。《三体》中一号面壁人的幽灵军队计划，正是来自于《球状闪电》。《球状闪电》中的疑似宇宙观察者，为《三体》中的智子出现铺陈了线索。《球状闪电》和《三体》是刘慈欣两个不同时期的巅峰之作，《球状闪电》是他对人生的终极思考，《三体》则是他对宇宙的终极思考。过一个美妙的人生并不难，关键在于你迷上的是什么。某个离奇的雨夜，一颗球状闪电在一瞬间将少年的父母化为灰烬，而他们身下的板凳却分毫无损。从此少年踏上了研究球状闪电的旅程，死亡者的幽灵笔迹、前苏联的地下科技城、次世代的世界大战……球状闪电意外成为了战争中决定祖国存亡的终极武器！一个从未有人想像过的未来，在宇宙观察者的注视下，悄然降临在人类面前…… 出版时间 2019-06-01 00:00:00 ISBN： 分类： 精品小说-科幻经典 出版社： 读客文化股份有限公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>三体（全集）-刘慈欣</title><link>https://clickear.github.io/%E4%B8%89%E4%BD%93%E5%85%A8%E9%9B%86-%E5%88%98%E6%85%88%E6%AC%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%89%E4%BD%93%E5%85%A8%E9%9B%86-%E5%88%98%E6%85%88%E6%AC%A3/</guid><description>元数据 [!abstract] 三体（全集）
书名： 三体（全集） 作者： 刘慈欣 简介： 每个人的书架上都该有套《三体》！关于宇宙最狂野的想象！就是它！征服世界的中国科幻神作！包揽九项世界顶级科幻大奖！出版16个语种，横扫30国读者！奥巴马、雷军、马化腾、周鸿袆、潘石屹、扎克伯格……强推！刘慈欣获得2018年度克拉克想象力贡献社会奖！刘慈欣是中国科幻小说的最主要代表作家，亚洲首位世界科幻大奖“雨果奖”得主，被誉为中国科幻的领军人物。 出版时间 2018-12-01 00:00:00 ISBN： 分类： 精品小说-科幻经典 出版社： 海南省电子音像出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>三色标记法</title><link>https://clickear.github.io/%E4%B8%89%E8%89%B2%E6%A0%87%E8%AE%B0%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%89%E8%89%B2%E6%A0%87%E8%AE%B0%E6%B3%95/</guid><description>[!NOTE] 三色标记法(黑白灰)
根据可达性分析，从GC Roots开始进行遍历访问，按“是否访问过”这个条件标记成以下三种颜色：
黑色：本对象已访问过，而且本对象 引用到 的其他对象 也全部访问过了。 (自己标记完了，自己的孩子（包括多个孩子）也标记完了，都不是垃圾)
灰色：本对象已访问过，但是本对象 引用到 的其他对象 尚未全部访问完。全部访问后，会转换为黑色。(自己标记完了，自己的孩子（包括多个孩子）没有标记)
白色：尚未访问过，对象即为GC Roots 不可达，可以进行回收。
::多标, 多标记了一些正常节点，实际上是需要回收的 即，已经标记好的引用，突然断裂。导致后面的引用链都是垃圾，而没进行回收。产生[[浮动垃圾]]</description></item><item><title>上下文反向链接</title><link>https://clickear.github.io/%E4%B8%8A%E4%B8%8B%E6%96%87%E5%8F%8D%E5%90%91%E9%93%BE%E6%8E%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%8A%E4%B8%8B%E6%96%87%E5%8F%8D%E5%90%91%E9%93%BE%E6%8E%A5/</guid><description>x:: [[反向链接]] [[上下文]]
%%我的理解:: 正如[[反向链接#使用技巧]]所言，反向链接提供的上下文，有时候也是一种更细粒度的信息补充。%%
上下文的反向链接不仅显示来自另一处的参考资料，而且显示围绕该参考资料的具体上下文——例如，一本书的页面或参考段落。
相关笔记： 优先使用细粒度的关联 [1]</description></item><item><title>上帝掷骰子吗？：量子物理史话（升级版）-曹天元</title><link>https://clickear.github.io/%E4%B8%8A%E5%B8%9D%E6%8E%B7%E9%AA%B0%E5%AD%90%E5%90%97%E9%87%8F%E5%AD%90%E7%89%A9%E7%90%86%E5%8F%B2%E8%AF%9D%E5%8D%87%E7%BA%A7%E7%89%88-%E6%9B%B9%E5%A4%A9%E5%85%83/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%8A%E5%B8%9D%E6%8E%B7%E9%AA%B0%E5%AD%90%E5%90%97%E9%87%8F%E5%AD%90%E7%89%A9%E7%90%86%E5%8F%B2%E8%AF%9D%E5%8D%87%E7%BA%A7%E7%89%88-%E6%9B%B9%E5%A4%A9%E5%85%83/</guid><description>元数据 [!abstract] 上帝掷骰子吗？：量子物理史话（升级版）
书名： 上帝掷骰子吗？：量子物理史话（升级版） 作者： 曹天元 简介： 本书回顾量子论从无到有发展的风云录，从18世纪开始，直到21世纪，一批科学巨人开始颠覆传统物理学大厦，为了宇宙的终极理论而战，大大改变了人类发展的历史。你会知道：1.用武侠小说般的语言，清晰勾勒量子物理发展风云录。2.量子究竟是什么，为什么说量子论是上帝在掷骰子？3.对双缝干涉实验、薛定谔的猫、量子纠缠、多重宇宙等硬核知识的生动解读。4.量子物理如何影响世界，量子计算机、量子通信……量子物理未来将有哪些应用。5.牛顿、普朗克、爱因斯坦、玻尔、海森堡、霍金……科学版的《人类群星闪耀时》，兼具科普、哲学、文学、传奇、探险故事、名人传记等多项功能。 出版时间 2019-06-01 00:00:00 ISBN： 9787559630612 分类： 科学技术-自然科学 出版社： 北京联合出版公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>不可重复读</title><link>https://clickear.github.io/%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB/</guid><description>[!TIP] 不可重复读的重点是修改💡
在同一事务中，同样的条件，第一次读的数据和第二次读的数据不一样。（因为中间有其他事务提交了修改）
一个事务在读取某些数据后的某个时间，再次读取以前读过的数据， 却发现其读出的数据已经发生了改变、 或某些记录已经被删除了！这种现象就叫做“不可重复读”。 一句话：事务A读取到了事务B已经提交的修改数据，不符合隔离性</description></item><item><title>不应该设置多处收件箱</title><link>https://clickear.github.io/%E4%B8%8D%E5%BA%94%E8%AF%A5%E8%AE%BE%E7%BD%AE%E5%A4%9A%E5%A4%84%E6%94%B6%E4%BB%B6%E7%AE%B1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%8D%E5%BA%94%E8%AF%A5%E8%AE%BE%E7%BD%AE%E5%A4%9A%E5%A4%84%E6%94%B6%E4%BB%B6%E7%AE%B1/</guid><description>%%我的理解:: 所以需要[[一元化收集]]%%
[[收件箱需要可靠的清空流程才有效]]，但做到这点很难。如果对应单一概念的收件箱（如「要读的东西」），在实体上却分散在许多不同的地方，可靠地清空收件箱更是难上加难。
可靠的收件箱要求流出率&amp;gt;=流入率，但如果一个收件箱分布在许多地方，就很难看到和管理这些速率（例如，通过放弃或推迟项目）。
一个解决方案可能是创建虚拟收件箱，为该概念收件箱的项目所在的几个「地方」提供一个统一的界面；见[[我的阅读收件箱实现]]。</description></item><item><title>世界因你不同：李开复自传（纪念版）-李开复 范海涛</title><link>https://clickear.github.io/%E4%B8%96%E7%95%8C%E5%9B%A0%E4%BD%A0%E4%B8%8D%E5%90%8C%E6%9D%8E%E5%BC%80%E5%A4%8D%E8%87%AA%E4%BC%A0%E7%BA%AA%E5%BF%B5%E7%89%88-%E6%9D%8E%E5%BC%80%E5%A4%8D-%E8%8C%83%E6%B5%B7%E6%B6%9B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%96%E7%95%8C%E5%9B%A0%E4%BD%A0%E4%B8%8D%E5%90%8C%E6%9D%8E%E5%BC%80%E5%A4%8D%E8%87%AA%E4%BC%A0%E7%BA%AA%E5%BF%B5%E7%89%88-%E6%9D%8E%E5%BC%80%E5%A4%8D-%E8%8C%83%E6%B5%B7%E6%B6%9B/</guid><description>元数据 [!abstract] 世界因你不同：李开复自传（纪念版）
书名： 世界因你不同：李开复自传（纪念版） 作者： 李开复 范海涛 简介： 《世界因你不同：李开复自传》是李开复唯一的一本自传，字里行间，是岁月流逝中沉淀袭来的宝贵的人生智慧和职场经验。捣蛋的“小皇帝”，11岁的“留学生”，26岁获得《商业周刊》“最重要的科学发明”奖，33岁的苹果副总裁，谷歌中国的创始人，他有着太多传奇的经历，为了他，两家最大的IT公司对簿公堂。而他的每一次人生选择，都是一次成功的自我超越。 透过这本自传，李开复真诚讲述了他鲜为人知的成长史、风雨兼程的成功史和烛照人生的心灵史，也首次全面披露了他亲历的苹果、微软、谷歌等IT巨头风云变幻的内幕。娓娓道来，字字珠玑。 抓住一切去探寻生命的意义，总有一天，世界将因你不同。 出版时间 2015-07-01 00:00:00 ISBN： 9787508652115 分类： 人物传记-传记综合 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>两个class对象是否为同一个类</title><link>https://clickear.github.io/%E4%B8%A4%E4%B8%AAclass%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E4%B8%BA%E5%90%8C%E4%B8%80%E4%B8%AA%E7%B1%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%A4%E4%B8%AAclass%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E4%B8%BA%E5%90%8C%E4%B8%80%E4%B8%AA%E7%B1%BB/</guid><description>2个必要条件:
类的完全类名必须一致。 加载这个类的ClassLoader（指ClassLoader实例对象）必须相同.即 在JVM中，用同一个[[类加载器]]加载 换句话说，在JVM中，即使这两个类对象（class对象）来源同一个Class文件，被同一个虚拟机所加载，但只要加载它们的ClassLoader实例对象不同，那么这两个类对象也是不相等的。
JVM必须知道一个类型是由启动加载器加载的还是由用户类加载器加载的。如果一个类型是由用户类加载器加载的，那么JVM会将这个类加载器的一个引用作为类型信息的一部分保存在方法区中。当解析一个类型到另一个类型的引用的时候，JVM需要保证这两个类型的类加载器是相同的</description></item><item><title>两阶段锁</title><link>https://clickear.github.io/%E4%B8%A4%E9%98%B6%E6%AE%B5%E9%94%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%A4%E9%98%B6%E6%AE%B5%E9%94%81/</guid><description>在 InnoDB 事务中，行锁是在需要的时候才加上的，但并不是不需要了就立刻释放， 而是要等到事务结束时才释放。
如果你的事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并发度的锁尽量往后放。</description></item><item><title>中国哲学简史-冯友兰</title><link>https://clickear.github.io/%E4%B8%AD%E5%9B%BD%E5%93%B2%E5%AD%A6%E7%AE%80%E5%8F%B2-%E5%86%AF%E5%8F%8B%E5%85%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%AD%E5%9B%BD%E5%93%B2%E5%AD%A6%E7%AE%80%E5%8F%B2-%E5%86%AF%E5%8F%8B%E5%85%B0/</guid><description>元数据 [!abstract] 中国哲学简史
书名： 中国哲学简史 作者： 冯友兰 简介： 《中国哲学简史》打通古今中外的相关知识，以宏观开阔的视野对中国哲学进行了深入浅出的、融会贯通的讲解。在有限的篇幅里融入了对中国传统思想、文化、精神、智慧等方面的理解，融会了史与思的智慧结晶，洋溢着人生的智慧与哲人的洞见，寄托着现实的人生关怀。它在世界各地有多种译本，拥有众多的读者，是许多大学中国哲学的通用教材；同样，它也是广大读者学习中国古代文化、借鉴中国传统智慧、启迪现实人生的入门书。它是一部名副其实的可以影响大众一生的文化经典。本书是北京大学出版社独家拥有版权的冯友兰先生亲自指导翻译并认可的唯一版本。 出版时间 2013-01-01 00:00:00 ISBN： 9787301215692 分类： 哲学宗教-东方哲学 出版社： 北京大学出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>中国，少了一味药-慕容雪村</title><link>https://clickear.github.io/%E4%B8%AD%E5%9B%BD%E5%B0%91%E4%BA%86%E4%B8%80%E5%91%B3%E8%8D%AF-%E6%85%95%E5%AE%B9%E9%9B%AA%E6%9D%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%AD%E5%9B%BD%E5%B0%91%E4%BA%86%E4%B8%80%E5%91%B3%E8%8D%AF-%E6%85%95%E5%AE%B9%E9%9B%AA%E6%9D%91/</guid><description>元数据 [!abstract] 中国，少了一味药
书名： 中国，少了一味药 作者： 慕容雪村 简介： 愚蠢不是天生的，而是人工制造出来的。我有一个希望：让常识在阳光下行走，让贫弱者从苦难中脱身，让邪恶远离每一颗善良的心。世上最大的恶不是杀人放火，而是制造愚蠢。愚蠢本身不是恶，却可以把恶放大无数倍。聪明人只反对愚蠢，愚蠢的人什么都反对。聪明的人自己思考，愚蠢的人让别人替他思考。不会思考是可耻的，而更可耻的是，这群不会思考的人正在教我如何思考。 出版时间 2011-01-01 00:00:00 ISBN： 9787513700665 分类： 文学-纪实文学 出版社： 中国和平出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>中文博客排版指南</title><link>https://clickear.github.io/%E4%B8%AD%E6%96%87%E5%8D%9A%E5%AE%A2%E6%8E%92%E7%89%88%E6%8C%87%E5%8D%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%AD%E6%96%87%E5%8D%9A%E5%AE%A2%E6%8E%92%E7%89%88%E6%8C%87%E5%8D%97/</guid><description>中文博客排版指南 标题 正确：（Markdown 语法）
1 2 3 4 5 6 7 # 文章的标题 ## 文章内容的一级标题 ### 文章内容的二级标题 #### 文章内容的三级标题 原则：</description></item><item><title>中路</title><link>https://clickear.github.io/%E4%B8%AD%E8%B7%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%AD%E8%B7%AF/</guid><description> 分类 工具人、挂边、理财型。西施、张良 法核 法刺流派。上官婉儿、不知火舞、 战士型法师。嫦娥、貂蝉 poker 流派。干将莫邪、墨子、沈梦溪 团控团伤团辅流派。奕星、女娲、王昭君、杨玉环 为什么中路一般是法师？有什么不可取代的核心作用？ 阵容上看，团队必须要有 1-2 个法伤，不然出装就能被碾压，对手不需要出魔抗装备。 路线上看，法师走路慢，但手长 核心作用 前期 优先线权 沈梦溪、嫦娥、周瑜 支援边路和野区 中后期 团队控制 团队伤害</description></item><item><title>丰乳肥臀-莫言</title><link>https://clickear.github.io/%E4%B8%B0%E4%B9%B3%E8%82%A5%E8%87%80-%E8%8E%AB%E8%A8%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%B0%E4%B9%B3%E8%82%A5%E8%87%80-%E8%8E%AB%E8%A8%80/</guid><description>元数据 [!abstract] 丰乳肥臀
书名： 丰乳肥臀 作者： 莫言 简介： 诺贝尔文学奖评委会认可的代表作，华语文学传媒大奖·年度杰出成就奖，首届《大家》文学奖。莫言最庞大、最丰满的小说，记录百年中国风云变幻的恢宏“史诗”。经由一双婴儿的眼睛，目睹一个家族亲历的战争、贫穷、革命、荒淫。有爱有欲，有生有死，有人性的愚昧、贪婪，也有人情的温暖、博爱。一切无情，一切有情，一切疯癫——用一个故事看懂中国。 出版时间 2017-01-02 00:00:00 ISBN： 9787533946630 分类： 文学-经典作品 出版社： 浙江文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>串行化</title><link>https://clickear.github.io/%E4%B8%B2%E8%A1%8C%E5%8C%96/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%B2%E8%A1%8C%E5%8C%96/</guid><description>都不可能。最严格。会进行锁表。
底层实现，是通过[[锁]]中的[[悲观锁]]来实现的。</description></item><item><title>为临时性的和不完整的笔记设置写作收件箱</title><link>https://clickear.github.io/%E4%B8%BA%E4%B8%B4%E6%97%B6%E6%80%A7%E7%9A%84%E5%92%8C%E4%B8%8D%E5%AE%8C%E6%95%B4%E7%9A%84%E7%AC%94%E8%AE%B0%E8%AE%BE%E7%BD%AE%E5%86%99%E4%BD%9C%E6%94%B6%E4%BB%B6%E7%AE%B1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%BA%E4%B8%B4%E6%97%B6%E6%80%A7%E7%9A%84%E5%92%8C%E4%B8%8D%E5%AE%8C%E6%95%B4%E7%9A%84%E7%AC%94%E8%AE%B0%E8%AE%BE%E7%BD%AE%E5%86%99%E4%BD%9C%E6%94%B6%E4%BB%B6%E7%AE%B1/</guid><description>%%我的理解:: 用inbox进行[[一元化收集]]的理念，在知识管理和任务管理等领域都适用。现在这块儿我自己将临时的东西放到[[dailynote]]中，也能流畅运行起来，但可能是因为inbox里面东西太少的缘故，仍需努力。%%
即使你想要写出[[常青笔记]]，其中大部分也是从临时的笔记开始的。所以你应该能零阻力地捕获想法（[[闭合开环]]），然后可靠地将它们逐步完善，写成常青笔记（[[知识工作应能聚沙成塔]]）。这意味着两个重要的机制：
一个能快速捕获临时笔记的方法，将它们与常青笔记本身明确隔离；以及 一个笔记暂存处，存放你想进一步完善笔记。并且应有一套流程实践，能可靠地清空它（[[收件箱需要可靠的清空流程才有效]]） 为此，我使用了一个「写作收件箱」。好多想法的种子、[[每日工作日志]]中的摘录、读书笔记、单行卡片等，都从这个队列开始的。在[[我的晨间写作]]中，我会查看这个收件箱中的笔记，并花时间深入任何触动我想法的东西。多数日子里，我的写作时间主要会这么使用。
我写作收件箱中的许多笔记会写成常青笔记，但不是所有笔记都适合（或可能）这么做。如果某个笔记看到几次，却仍不够有趣，最好是归档或删除它。（这里有一个挑战：[[收件箱维护的分流策略（如「收件箱归零」）往往不够稳健]]）
当我在电脑前时，我把笔记直接捕获到我的写作收件箱中。我同样也会设立[[外出时方便抓住灵感的口袋便笺]]来投喂临时笔记。
参考文献 Zettelkasten 的构建模块 • Zettelkasten 方法</description></item><item><title>为什么 JVM 不用 JIT 全程编译？</title><link>https://clickear.github.io/%E4%B8%BA%E4%BB%80%E4%B9%88-JVM-%E4%B8%8D%E7%94%A8-JIT-%E5%85%A8%E7%A8%8B%E7%BC%96%E8%AF%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%BA%E4%BB%80%E4%B9%88-JVM-%E4%B8%8D%E7%94%A8-JIT-%E5%85%A8%E7%A8%8B%E7%BC%96%E8%AF%91/</guid><description>::我的理解 [!NOTE] 笔记
HotSpot VM, J9 VM: 这两个JVM默认用混合模式执行引擎, 以解释为基础, 然后对热点做编译;
这两者同时还支持AOT编译执行. J9 VM对AOT编译的支持早就有了; HotSpot VM的将在JDK9的某个更新版中发布, 请参考Java Goes AOT(打不开请自备工具…)
JRockit VM: 不是, JRockit VM没有解释器, 只能对所有Java方法都做JIT编译;</description></item><item><title>为何收藏无用</title><link>https://clickear.github.io/%E4%B8%BA%E4%BD%95%E6%94%B6%E8%97%8F%E6%97%A0%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%BA%E4%BD%95%E6%94%B6%E8%97%8F%E6%97%A0%E7%94%A8/</guid><description>up:: [[§ flomo101 - 思维方式目录]]
我的理解 人之本性，使得我们倾向于去收藏和保存信息。其实收集本身没错，错在过量收集以致于再也不会回顾，错在为了收集而下意识忽略品读。
很多人会说[[anki]]制卡麻烦，浪费时间。我也觉得思维导图画图麻烦，浪费时间。但其实这2者隐藏的价值在于，制作的过程本身就是记忆和学习。就如[[存储强度与提取强度 - 记忆]]，我们往往认为对知识的提取花费的时间更重要，其实加工并存储它所花费的时间也极为重要。
可能现在刚开始记笔记无从下手，感觉什么都重要，感觉什么都不重要，感觉怎么记都会有信息熵损失，不如不记。其实可以换个思路，去==记让我有极大触动的内容==，引发我们情绪波动的东西，往往很有价值，也更容易记忆，这个策略真的很有效。
开始改变就一个行动要领：放弃剪藏，并用自己的话转写一遍。末尾少楠也分享了[[渐进式总结]]中提到的一些原则。
![[为何收藏无用#^oooo]]
# 📥 为何收藏无用 多数时候我们都会陷入「收藏者谬误」，感觉收藏到就是学习到，但实际上「知晓某事」并不是「知道某事」。收藏更像是把信息搬运（而非加工），途中没有增加任何知识。
没必要捕捉 100% 的信息，大脑像个过滤器，只有不断改变过滤器，才能让信息真正输入到大脑（潜意识会默认过滤掉大量无用信息，这一点很难觉察到）</description></item><item><title>为何知识需要连接</title><link>https://clickear.github.io/%E4%B8%BA%E4%BD%95%E7%9F%A5%E8%AF%86%E9%9C%80%E8%A6%81%E8%BF%9E%E6%8E%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%BA%E4%BD%95%E7%9F%A5%E8%AF%86%E9%9C%80%E8%A6%81%E8%BF%9E%E6%8E%A5/</guid><description>up:: [[§ flomo101 - 思维方式目录]]
我的理解 连接，和[[上下文]]真是兄弟。当同一个词语，概念，有了不同的上下文，就能产生不同的思考和价值。当我们能更容易发现某个知识，我们曾经在不同的上下文思考过，这就会产生更奇妙的化学反应，这也是[[双向链接]]神奇之一。
# 🔗 为何知识需要连接 # 连接的三种方式 如果你玩过模拟城市就知道，城市的发展很大程度上取决于连接的方式 ——
如果没有高速公路，那么大家就会因为通勤问题导致不去上班 而如果到处都是大道而没有小路，居民又会抱怨没有休息交流的空间 缺乏连接会导致整个城市无法发展。 当你着急抵达某个地方的时候，你会考虑开车上高速，或者直接地铁直达。但当你想要放松或者随意漫步的时候，高架下面绝对不是一个好选择。</description></item><item><title>为何要写卡片</title><link>https://clickear.github.io/%E4%B8%BA%E4%BD%95%E8%A6%81%E5%86%99%E5%8D%A1%E7%89%87/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%BA%E4%BD%95%E8%A6%81%E5%86%99%E5%8D%A1%E7%89%87/</guid><description>up:: [[§ flomo101 - 思维方式目录]]
我的思考 卡片笔记，其实就是将来我们会面临生活或工作中非常多潜在的大boss，通过提前的每日的组块化的知识积累，时机成熟之日，打败大boss就是轻而易举了。写卡片为啥有这样的魔力，因为它小，操作和执行起来方便不反人类。有几个行之有效原则：1，用自己的话写；2，首先写给自己，其次考虑分享；3，尽可能地在卡片之间建立思考链路。
# 📋 为何要写卡片 在 2022 年初的计划中，我们提到了深度年（Depth Year）的概念，希望能用一年时间把一些已有的东西深入打磨。在 Android 完成离线，iOS 完成编辑器重构后，作为 flomo 重要的组成部分，flomo 101 （也就是 help.</description></item><item><title>为有潜在价值的参考引用建立一个阅读收件箱</title><link>https://clickear.github.io/%E4%B8%BA%E6%9C%89%E6%BD%9C%E5%9C%A8%E4%BB%B7%E5%80%BC%E7%9A%84%E5%8F%82%E8%80%83%E5%BC%95%E7%94%A8%E5%BB%BA%E7%AB%8B%E4%B8%80%E4%B8%AA%E9%98%85%E8%AF%BB%E6%94%B6%E4%BB%B6%E7%AE%B1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%BA%E6%9C%89%E6%BD%9C%E5%9C%A8%E4%BB%B7%E5%80%BC%E7%9A%84%E5%8F%82%E8%80%83%E5%BC%95%E7%94%A8%E5%BB%BA%E7%AB%8B%E4%B8%80%E4%B8%AA%E9%98%85%E8%AF%BB%E6%94%B6%E4%BB%B6%E7%AE%B1/</guid><description>%%我的理解:: 那些不需要做笔记的阅读内容，不应该成为真正的稍后读。我们需要的是一个有质量的稍后读inbox，其中的每天文章都要写点笔记。这样的阅读有闭环，才是有效的阅读。%%
浏览器标签逐渐堆积的，PDF 文件夹不断激增，这一切真让人焦虑。为了避免这一点，重要的是要有一个程序，来自动化地保存阅读中那些有潜在价值的参考材料。
一旦捕获材料，收集箱中每个项目要么：
删除（最后看起来不值得详细阅读） 被认真阅读（即[[写你所读，以求内化]]) 被浅读，并在参考书库中存档 （也许）被添加到其他一些清单中，如「待烹调的食谱」 重点在于，这不是一个「也许有一天会读」的清单。它不会无限期地积累，因为那样的话，它就不是一个可靠的方法来[[闭合开环]]。
因此，在构建一个阅读收件箱时，重要的考虑因素是：
书籍、文章、网页的零阻力捕获（以轻松地关闭该循环） 零阻力地查看收件箱项目对应的阅读量 零阻力地跨类型列举（译注：作为清单或者引用） 收件箱应鼓励删除滞留的项目（例如，当一个项目被多次跳过时，应该很明显。） 有趣的是，现有的「稍后阅读」或参考管理系统都不符合这些标准。它们通常是按内容类型划分的，而且没有一个系统鼓励删除徘徊的项目。另见：[[谨防自动导入阅读收件箱]]。</description></item><item><title>也许你该找个人聊聊-洛莉·戈特利布</title><link>https://clickear.github.io/%E4%B9%9F%E8%AE%B8%E4%BD%A0%E8%AF%A5%E6%89%BE%E4%B8%AA%E4%BA%BA%E8%81%8A%E8%81%8A-%E6%B4%9B%E8%8E%89%E6%88%88%E7%89%B9%E5%88%A9%E5%B8%83/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B9%9F%E8%AE%B8%E4%BD%A0%E8%AF%A5%E6%89%BE%E4%B8%AA%E4%BA%BA%E8%81%8A%E8%81%8A-%E6%B4%9B%E8%8E%89%E6%88%88%E7%89%B9%E5%88%A9%E5%B8%83/</guid><description>元数据 [!abstract] 也许你该找个人聊聊
书名： 也许你该找个人聊聊 作者： 洛莉·戈特利布 简介： 这是一位心理治疗师的回忆录，讲述了发生在诊室中的故事。在这个小小的密闭空间里，人们会展现出最真实、最脆弱的一面；也是在这里，人们获得了陪伴和倾听，也获得了宝贵的觉察、成长与改变。在书中，我们会看到四个来访者的故事，他们是：一个四十多岁、事业成功、自以为是，认为身边所有人都是蠢货的好莱坞制片人；一个三十多岁、刚刚新婚就被诊断出患有绝症，时日不多的大学女教师；一个六十九岁、离过三次婚，感觉孤独绝望，声称生活再不好转就要在七十岁生日当天自杀的老太太；一个二十多岁、有原生家庭创伤和酗酒问题，在爱情中频频受挫的姑娘。同时，书中还有第五个寻求帮助的人，那就是治疗师自己。她是一个单身的职场妈妈，四十多岁时遭遇失恋，几乎崩溃。有朋友对她说“或许你该找个人聊聊”，于是她也给自己找了一位心理治疗师。当她切换到来访者的位置，坐到另一位心理治疗师的沙发上诉说自己内心的脆弱与悲伤，就更能感受到心理治疗为何具有治愈和改变的力量。这本书从治疗师和来访者的双重视角展现了心理治疗的过程，让我们发现：无论身份背景有多相异，人类面对的烦恼其实都相通——爱与被爱、遗憾、选择、控制、不确定、死亡，这些都是我们身而为人必须共同学习面对的议题。我们在现实生活中所遭遇的切肤之痛和生命困境，都能在这本书中得到共鸣、找到希望。 出版时间 2021-06-01 00:00:00 ISBN： 9787553522838 分类： 心理-心理学应用 出版社： 上海文化出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>习得性无助</title><link>https://clickear.github.io/%E4%B9%A0%E5%BE%97%E6%80%A7%E6%97%A0%E5%8A%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B9%A0%E5%BE%97%E6%80%A7%E6%97%A0%E5%8A%A9/</guid><description>x:: [[🐤PUA]]
指个人经历了失败与挫折后,面临问题时产生的无能为力、丧失信心的心理状态与行为。[由宾夕法尼亚大学的 Martin E.P.Seligma（1942-）先后与 J.Bruce Overmier、科罗拉多大学博尔德分校的 Steven F.Maier 在 1967 年的动物实验中首次提出。]
案例：嘟嘟小时候总是有很多理想，可每当他将理想告诉爸爸时，爸爸总是说“你看你…不是那块料；你…这不现实；…”，有时，甚至还要挨揍，后来嘟嘟就再也没提自己的梦想了…</description></item><item><title>乡土中国-费孝通</title><link>https://clickear.github.io/%E4%B9%A1%E5%9C%9F%E4%B8%AD%E5%9B%BD-%E8%B4%B9%E5%AD%9D%E9%80%9A/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B9%A1%E5%9C%9F%E4%B8%AD%E5%9B%BD-%E8%B4%B9%E5%AD%9D%E9%80%9A/</guid><description>元数据 [!abstract] 乡土中国
书名： 乡土中国 作者： 费孝通 简介： 费孝通最知名的社会学著作之一，多年来深受学界和普通读者的一致推崇！如果说《江村经济》侧重讨论社会制度变革，那么《乡土中国》则在探讨与之相匹配的社会道德。这是费孝通对中国进行社会结构分析的尝试，他试图在理论上总结并开导实地研究，以构建中国社会特有的乡土伦理体系。沿着作者的思路，可以一窥中国的基层社会。虽然时移世易，但作者透视社会的眼光、观察社会的方法，在今天仍值得借鉴。 出版时间 2012-10-01 00:00:00 ISBN： 9787301174821 分类： 社会文化-社科 出版社： 北京大学出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>乡村教师-刘慈欣</title><link>https://clickear.github.io/%E4%B9%A1%E6%9D%91%E6%95%99%E5%B8%88-%E5%88%98%E6%85%88%E6%AC%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B9%A1%E6%9D%91%E6%95%99%E5%B8%88-%E5%88%98%E6%85%88%E6%AC%A3/</guid><description>元数据 [!abstract] 乡村教师
书名： 乡村教师 作者： 刘慈欣 简介： 身居僻壤山乡村古井村教师李宝库已经时日无多，社会的磨难，生活的阻力，无穷无尽的且无法颠覆的绝望将他重重压在下面。然而从自己恩师那里继承的承诺与信念。让他始终心系村里4个调皮捣蛋的学生。并下定决心要为这些孩子贡献出最后一份心力与生命。 出版时间 2012-09-01 00:00:00 ISBN： 9787535458667 分类： 精品小说-科幻经典 出版社： 长江文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>事务隔离级别</title><link>https://clickear.github.io/%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/</guid><description>[[事务隔离级别]] 读数据一致性 [[脏读]] [[不可重复读]] [[幻读]] [[读未提交]] 最低级被，只能保证不读取物理上损坏的数据 是 是 是 [[读已提交]] 语句级 否 是 是 [[可重复读]] 事务级 否 否 是, [[innodb]]通过nex-key-lock [[间隙锁]]避免幻读 [[串行化]] 最高级别，事务级 否 否 否 隔离级别 [[读未提交]]，脏读/不可重复读/幻读都可能</description></item><item><title>二阶段提交</title><link>https://clickear.github.io/%E4%BA%8C%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BA%8C%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4/</guid><description>[!INFO] 二阶段提交
写[[redolog]] (prepare) → 写[[binlog]] → 设置[[redolog]]为提交状态(commit)
binlog 主要用来主从同步，事务最终提交前写入的
redolog，是[[innodb]]特有的，记录的是物理日志，记录的是 “ 在某个数据页上做了什么修改 ”。 事务执行过程中 会不断的写入
更新时，先改内存中的数据页，将更新操作写入redo log日志，此时redo log进入prepare状态，然后通知MySQL Server执行完了，随时可以提交，MySQL Server将更新的SQL写入bin log，然后调用innodb接口将redo log设置为提交状态，更新完成。</description></item><item><title>五分钟脱口秀</title><link>https://clickear.github.io/%E4%BA%94%E5%88%86%E9%92%9F%E8%84%B1%E5%8F%A3%E7%A7%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BA%94%E5%88%86%E9%92%9F%E8%84%B1%E5%8F%A3%E7%A7%80/</guid><description/></item><item><title>五子棋必胜法</title><link>https://clickear.github.io/%E4%BA%94%E5%AD%90%E6%A3%8B%E5%BF%85%E8%83%9C%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BA%94%E5%AD%90%E6%A3%8B%E5%BF%85%E8%83%9C%E6%B3%95/</guid><description>[[禁手规则]]
五子棋必胜法，汇集精髓，超详细解说（连载中）_哔哩哔哩bilibili_教学
规则玩法 实际情况，黑棋先手优势过大，所以需要给它有各种限制，称为禁手 [[禁手规则]]
但其实有了禁手，黑棋还是有必胜法，比如这个浦月必胜法。浦月指的是开局的一种形式，比如前 10 子。
但是主要学思维方式，而不是定式的棋谱。
正式比赛为了防止这种引入禁手以后的必胜法，还加入了“三手交换”“五手二打”的规定。
“三手交换”是指第 3 手（黑第 2 步），白棋有权要求和对方黑白互换，也就是如果黑棋第 3 手下出了必胜定式，对手可以要求执黑，这样就坑了自己，对于稍懂点五子棋的人来说，必胜式是基础中的基础，所以这样就不会有人用必胜开局。
“五手二打”也就是第 5 手（黑第 3 步）黑棋下两个黑子，让对手二选一，这样对手肯定会选择对自己较有利、对先手较不利的一步。</description></item><item><title>人人都是产品经理-苏杰</title><link>https://clickear.github.io/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86-%E8%8B%8F%E6%9D%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86-%E8%8B%8F%E6%9D%B0/</guid><description>元数据 [!abstract] 人人都是产品经理
书名： 人人都是产品经理 作者： 苏杰 简介： 书名叫“人人都是产品经理”，是因为作者觉得过去几年在做产品的过程中学到的思维方法与做事方式对自己都很有帮助，而每个人也无时无刻在思考着同样的问题：“我们为了什么？做什么事，解决什么人的什么问题？何时，和谁一起做？需要什么能力？”这些正对应了本书要说的几大话题：用户、需求、项目、团队、战略、修养。 出版时间 2010-04-01 00:00:00 ISBN： 9787121105777 分类： 个人成长-人生哲学 出版社： 电子工业出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>人们似乎忘记了他们所读的大部分内容，而且他们大多没有注意到这一点</title><link>https://clickear.github.io/%E4%BA%BA%E4%BB%AC%E4%BC%BC%E4%B9%8E%E5%BF%98%E8%AE%B0%E4%BA%86%E4%BB%96%E4%BB%AC%E6%89%80%E8%AF%BB%E7%9A%84%E5%A4%A7%E9%83%A8%E5%88%86%E5%86%85%E5%AE%B9%E8%80%8C%E4%B8%94%E4%BB%96%E4%BB%AC%E5%A4%A7%E5%A4%9A%E6%B2%A1%E6%9C%89%E6%B3%A8%E6%84%8F%E5%88%B0%E8%BF%99%E4%B8%80%E7%82%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BA%BA%E4%BB%AC%E4%BC%BC%E4%B9%8E%E5%BF%98%E8%AE%B0%E4%BA%86%E4%BB%96%E4%BB%AC%E6%89%80%E8%AF%BB%E7%9A%84%E5%A4%A7%E9%83%A8%E5%88%86%E5%86%85%E5%AE%B9%E8%80%8C%E4%B8%94%E4%BB%96%E4%BB%AC%E5%A4%A7%E5%A4%9A%E6%B2%A1%E6%9C%89%E6%B3%A8%E6%84%8F%E5%88%B0%E8%BF%99%E4%B8%80%E7%82%B9/</guid><description>原文： People seem to forget most of what they read, and they mostly don’t notice
似乎大多数人在几周后只能记住一本书的一些高层次细节——如果是这样的话。一个典型的读者可能会花几个小时来读完一些严肃的非虚构类作品，然后也许在一个晚宴上提到它，他们发现你能记住大概三句话。基本上没有细节的回忆。根本就不着重点！
更重要的是：当这种情况发生时，人们似乎很惊讶。他们似乎总是高估自己从一本书中吸收了多少东西。
见《 人们对实用知识的遗忘有多快？》 [1]</description></item><item><title>人生由我-梅耶·马斯克</title><link>https://clickear.github.io/%E4%BA%BA%E7%94%9F%E7%94%B1%E6%88%91-%E6%A2%85%E8%80%B6%E9%A9%AC%E6%96%AF%E5%85%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BA%BA%E7%94%9F%E7%94%B1%E6%88%91-%E6%A2%85%E8%80%B6%E9%A9%AC%E6%96%AF%E5%85%8B/</guid><description>元数据 [!abstract] 人生由我
书名： 人生由我 作者： 梅耶·马斯克 简介： 她15岁次登台，22岁结婚，31岁成为破产的单身母亲，随后辗转于3个国家的多个城市开展自己的事业，独立培养出3个出色的子女，同时获得了两个硕士学位。60多岁的她重返模特舞台，在头发变白的时候走红，69岁时，她的形象在美国时代广场独占4个广告牌。她是72岁的“网红”，是众多女性眼中的励志偶像，也许她最出名的标签是“硅谷钢铁侠”、特斯拉公司创始人埃隆·马斯克的母亲，但她更是自己人生的女王，她是梅耶·马斯克。 你很难想象，这样的她也曾因为害怕而多年默默忍受丈夫的家暴，身为令众人艳羡不已的超模却说自己衣品差，在看中名气和年龄的职场圈不断遭遇歧视，拥有成功的后半生但至今仍未遇到可与之共度余生的人。她并不是媒体塑造的“女性代言人”，事实上，就是这种人设给普通人制造了数不清的压力和困惑。这本书展现了一个女性是怎样逐步探索世界和重建自我的。 虽然人生困境重重，但成功的蜕变依然有法可循。梅耶在书中真诚地分享了关于美丽、职场、家庭、教育和健康等人生问题的经历和建议，我们或许无法避免遇到与之相似的困境，但可以像她一样积极应对。 出版时间 2020-06-01 00:00:00 ISBN： 9787521715637 分类： 人物传记-传记综合 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>人生的智慧-叔本华</title><link>https://clickear.github.io/%E4%BA%BA%E7%94%9F%E7%9A%84%E6%99%BA%E6%85%A7-%E5%8F%94%E6%9C%AC%E5%8D%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BA%BA%E7%94%9F%E7%9A%84%E6%99%BA%E6%85%A7-%E5%8F%94%E6%9C%AC%E5%8D%8E/</guid><description>元数据 [!abstract] 人生的智慧
书名： 人生的智慧 作者： 叔本华 简介： 本书论述了人生如何获得幸福。作者认为获得幸福有三种条件，第一人自身的健康、性格、智力等；第二人自身以外的物，如财富等；第三人给他人展示的形象，如地位、名誉、名声。 出版时间 2011-06-01 00:00:00 ISBN： 9787511706706 分类： 哲学宗教-西方哲学 出版社： 中央编译出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>人类简史：从动物到上帝-尤瓦尔·赫拉利</title><link>https://clickear.github.io/%E4%BA%BA%E7%B1%BB%E7%AE%80%E5%8F%B2%E4%BB%8E%E5%8A%A8%E7%89%A9%E5%88%B0%E4%B8%8A%E5%B8%9D-%E5%B0%A4%E7%93%A6%E5%B0%94%E8%B5%AB%E6%8B%89%E5%88%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BA%BA%E7%B1%BB%E7%AE%80%E5%8F%B2%E4%BB%8E%E5%8A%A8%E7%89%A9%E5%88%B0%E4%B8%8A%E5%B8%9D-%E5%B0%A4%E7%93%A6%E5%B0%94%E8%B5%AB%E6%8B%89%E5%88%A9/</guid><description>元数据 [!abstract] 人类简史：从动物到上帝
书名： 人类简史：从动物到上帝 作者： 尤瓦尔·赫拉利 简介： 10万年前，地球上至少有6个不同的人类物种，但今天只剩下1个，就是我们智人。究竟发生了什么，让其他人类物种都消失了？我们智人又将会怎样？ 以色列著名历史学家尤瓦尔·赫拉利开创性地将历史和科学结合起来，讲述了从宇宙大爆炸至今智人历史的完整故事。尤瓦尔·赫拉利教授认为，在智人从一种不起眼的动物到地球主宰者的漫长演化史上，发生了三次关键性的革命：认知革命、农业革命和科学革命。认知革命让智人拥有了创造想象秩序和虚构故事的能力，彻底超越了其他物种；农业革命让智人从狩猎-采集生活走向定居生活，生活方式和社会组织发生了革命性的转变；科学革命让智人成为神一样的“造物主”，获得整个地球的统治地位。 尤瓦尔·赫拉利教授还提示我们向前看，因为在过去的几十年里，我们已经开始违背自然选择的法则，而自然选择的法则在过去的40亿年里都一直是生命遵循的法则，今天的我们不仅获得了设计周围世界的能力，也获得了设计我们自己的能力，这将引领我们走向何方，我们想成为什么样的人类？是时候重新定义“人类”了。 《人类简史》是一部全球畅销书，摒弃了旧的解释框架，提出了颠覆性的创见，让我们对自身的存在有了全新的认知。 出版时间 2017-02-23 00:00:00 ISBN： 9787508660752 分类： 历史-世界史 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>今日简史：人类命运大议题-尤瓦尔·赫拉利</title><link>https://clickear.github.io/%E4%BB%8A%E6%97%A5%E7%AE%80%E5%8F%B2%E4%BA%BA%E7%B1%BB%E5%91%BD%E8%BF%90%E5%A4%A7%E8%AE%AE%E9%A2%98-%E5%B0%A4%E7%93%A6%E5%B0%94%E8%B5%AB%E6%8B%89%E5%88%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BB%8A%E6%97%A5%E7%AE%80%E5%8F%B2%E4%BA%BA%E7%B1%BB%E5%91%BD%E8%BF%90%E5%A4%A7%E8%AE%AE%E9%A2%98-%E5%B0%A4%E7%93%A6%E5%B0%94%E8%B5%AB%E6%8B%89%E5%88%A9/</guid><description>元数据 [!abstract] 今日简史：人类命运大议题
书名： 今日简史：人类命运大议题 作者： 尤瓦尔·赫拉利 简介： 当前人类社会面临着科技颠覆、生态崩溃和核战争三大挑战。“国家”这一身份认同已不足以应对今天的挑战，任何一个国家都无法独立解决全球性问题。人工智能和生物技术正在颠覆原有的社会结构和分配方式，数据成为最重要的资源。 当数据巨头比我们更了解自己，当“在线”成为一种生存方式，如何规范数据的所有权？能否建立起一个维护人类自由和平等的全球社群？人工智能和生物技术已使人类掌握了重塑和重新设计生命的能力。我们该如何运用这种能力，上演另一出全新大戏？ 在一个信息爆炸却多半无用的世界，清晰的见解就成了一种力量。对于关乎人类命运的种种议题，尤瓦尔•赫拉利在《今日简史》中没有简单给出答案，而是引发了我们进一步思考。 出版时间 2018-07-13 00:00:00 ISBN： 9787508692098 分类： 社会文化-社科 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>任务拆解</title><link>https://clickear.github.io/%E5%B7%A5%E4%BD%9C%E6%B5%81%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C1.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B7%A5%E4%BD%9C%E6%B5%81%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C1.0/</guid><description>工作流简介 什么是工作流? 所谓工作流引擎是指workflow作为应用系统的一部分，并为之提供对各应用系统有决定作用的根据角色、分工和条件的不同决定信息传递路由、内容等级等核心解决方案。
功能特性 支持审批、驳回、撤销操作 支持会签(即多实例中的人需要全部审批完成)、抢签(有1人审批完成即可) 支持单节点多实例串行/并行功能(即一个节点可以有多个节点实例) 组织接入支持钉钉ID和QD fadongxiauth接入 支持评论功能 支持钉钉通知，流程审批、驳回等消息都会发送钉钉消息 工作流术语 app应用
即流程定义的集合，可认为是流程定义的分类
流程定义和节点定义</description></item><item><title>优先使用细粒度的关联</title><link>https://clickear.github.io/%E4%BC%98%E5%85%88%E4%BD%BF%E7%94%A8%E7%BB%86%E7%B2%92%E5%BA%A6%E7%9A%84%E5%85%B3%E8%81%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BC%98%E5%85%88%E4%BD%BF%E7%94%A8%E7%BB%86%E7%B2%92%E5%BA%A6%E7%9A%84%E5%85%B3%E8%81%94/</guid><description>%%我的理解:: 这也是相比于[[🤖obsidian]]，我一直对[[🤖logseq]]的大纲式块引用笔记念念不忘的原因，更细粒度的引用，应该能发挥出更强大的力量。现在还没经过大量实践，还不清楚太多的细粒度的块引用会带来什么麻烦和缺点。 #todo/某天 %%
Thoughts Memo 汉化组译制
原文： Prefer fine-grained associations (andymatuschak.org)
信息系统中材料之间的链接（例如[[常青笔记之间应该建立大量链接]]）可以是细粒度的（如文章中一句话中的引用），也可以是粗粒度的（如「另请参阅」小节）。
一般来说，进行细粒度的关联会更好。例如，与其评估与你正在阅读的论文有关的杂乱无章的论文清单，不如看到我注意到文章 X 与段落 N 有关，这样更有帮助。</description></item><item><title>优先使用经过标注的关联</title><link>https://clickear.github.io/%E4%BC%98%E5%85%88%E4%BD%BF%E7%94%A8%E7%BB%8F%E8%BF%87%E6%A0%87%E6%B3%A8%E7%9A%84%E5%85%B3%E8%81%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BC%98%E5%85%88%E4%BD%BF%E7%94%A8%E7%BB%8F%E8%BF%87%E6%A0%87%E6%B3%A8%E7%9A%84%E5%85%B3%E8%81%94/</guid><description>%%我的理解:: 让人想到[[🧑ryooo]]提出的[[KG笔记法]]，能让笔记更具语义化，回顾浏览这种笔记组成的知识图谱，才能更有效。%%
Thoughts Memo 汉化组译制
原文： Prefer labeled associations (andymatuschak.org)
在信息系统中连接节点的边（例如，[[常青笔记之间应该建立大量链接]]）本身应以某种方式标注，以展现关联的背景。仅仅说「X 与 Y 有关」通常是不够的：最好说「X 在 Z 的背景下更详细地介绍了 Y。」</description></item><item><title>优先建立信息间的联系来分类，而非使用层级式分类法</title><link>https://clickear.github.io/%E4%BC%98%E5%85%88%E5%BB%BA%E7%AB%8B%E4%BF%A1%E6%81%AF%E9%97%B4%E7%9A%84%E8%81%94%E7%B3%BB%E6%9D%A5%E5%88%86%E7%B1%BB%E8%80%8C%E9%9D%9E%E4%BD%BF%E7%94%A8%E5%B1%82%E7%BA%A7%E5%BC%8F%E5%88%86%E7%B1%BB%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BC%98%E5%85%88%E5%BB%BA%E7%AB%8B%E4%BF%A1%E6%81%AF%E9%97%B4%E7%9A%84%E8%81%94%E7%B3%BB%E6%9D%A5%E5%88%86%E7%B1%BB%E8%80%8C%E9%9D%9E%E4%BD%BF%E7%94%A8%E5%B1%82%E7%BA%A7%E5%BC%8F%E5%88%86%E7%B1%BB%E6%B3%95/</guid><description>%%我的理解:: 采用[[自下而上]]的创作方式，能让结构自然、有机地从创作中涌现。如果说适用人群的话，我觉得应该是已经具备一定知识储备的人这么做会比较好。如果肚子里没货，用这种方式会觉得很难受。而[[自上而下]]是我们从小到大，尚处于积累知识阶段，老师教给我们的方法，所以操作起来更符合我们的[[路径依赖]]和直觉，但这并不意味着这种方法依旧有优势。总的来说，根据自身水平和应用场景，二者结合，是为其道。%%
Thoughts Memo 汉化组译制
原文： Prefer associative ontologies to hierarchical taxonomies (andymatuschak.org)
让结构自然、有机地从创作中涌现吧。如果一开始就预定了创作结构，你就会过早地限制可能涌现而出的东西，并人为压缩想法和想法之间的微妙关系。
从我们的文件系统、组织结构和图书馆上看，层级分类是世界的自然结构。然而项目通常不止属于一处，且互相关联的项目，却常常归类到不同的层级之下。
更糟的是，如果预先明确划分类别，这些类别之间的边界必然是模糊的。不是所有事情都能精准地归类。也许一旦积累足够多的新想法，新的类别又冒出来了……只是你看不到它的新形状，因为一切都已经被分类了。此时，进一步的分类需要拆现有的结构。
最好是让关联的想法所形成的网络逐渐涌现，不加任何标签：[[让思想和信念有机地涌现]]。一旦你能看到形状，那么你就可以思考它的特征了。这就是为什么[[常青笔记是发展大胆想法的安全场所]]的原因之一。</description></item><item><title>优先选择明确的关联，而不是推断的关联</title><link>https://clickear.github.io/%E4%BC%98%E5%85%88%E9%80%89%E6%8B%A9%E6%98%8E%E7%A1%AE%E7%9A%84%E5%85%B3%E8%81%94%E8%80%8C%E4%B8%8D%E6%98%AF%E6%8E%A8%E6%96%AD%E7%9A%84%E5%85%B3%E8%81%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BC%98%E5%85%88%E9%80%89%E6%8B%A9%E6%98%8E%E7%A1%AE%E7%9A%84%E5%85%B3%E8%81%94%E8%80%8C%E4%B8%8D%E6%98%AF%E6%8E%A8%E6%96%AD%E7%9A%84%E5%85%B3%E8%81%94/</guid><description>Thoughts Memo 汉化组译制
原文： Prefer explicit associations to inferred associations (andymatuschak.org)
在建立「笔记互链」的个人知识库时（例如[[常青笔记之间应该建立大量链接]]），关联是否一定要全部手动建立？ DEVONthink 这样的工具，会使用机器学习推荐「相关」的笔记；而浏览网页时，浏览历史（单个标签里的时间线也可能为其提供背景）也可以反映内容间的关联。除此之外，或许光靠搜索，也能帮助我们顺藤摸瓜查找相关概念？
像这些（自动化的）工具确实有助于构建关联，可以作为寻找互联的参考，但构建关联的工作不应该全部交给这些工具。
第一：对内容相互关系的思考，是[[自主思考]]的一部分。这样迫使你深入体会新材料。
第二：紧密组织后的互链，信息量更高 —— 你不希望自己的笔记关联一大堆没用的内容，阅读时要在一屏幕的链接里挑拣半天（译注：跟进了百度似的）。你写的条目，应能让读者很快地看出自己要进哪些链接，而不是点进一个又退出来。这样的笔记需要你记住知识库里所有的条目到底谈了什么。</description></item><item><title>伟大的博弈（珍藏版）-约翰·S·戈登</title><link>https://clickear.github.io/%E4%BC%9F%E5%A4%A7%E7%9A%84%E5%8D%9A%E5%BC%88%E7%8F%8D%E8%97%8F%E7%89%88-%E7%BA%A6%E7%BF%B0S%E6%88%88%E7%99%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BC%9F%E5%A4%A7%E7%9A%84%E5%8D%9A%E5%BC%88%E7%8F%8D%E8%97%8F%E7%89%88-%E7%BA%A6%E7%BF%B0S%E6%88%88%E7%99%BB/</guid><description>元数据 [!abstract] 伟大的博弈（珍藏版）
书名： 伟大的博弈（珍藏版） 作者： 约翰·S·戈登 简介： 这是一本关于华尔街历史的书，也是一本关于美国金融史和经济史的书。它所描述的历史事件使我们清晰地看到，在很大程度上，华尔街推动了美国从一个原始而单一的经济体成长为一个强大而复杂的经济体。在美国经济发展的每一个阶段中，以华尔街为代表的美国资本市场都扮演着重要的角色。华尔街为美国经济的发展提供源源不断的资金，实现社会资源的优化配置，而华尔街本身也伴随着美国经济的发展而成长为全球金融体系的中心。美国经济的成功是资本市场和实体经济之间协同发展的很好的例证。 出版时间 2011-01-01 00:00:00 ISBN： 9787508616773 分类： 经济理财-财经 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>何以笙箫默-顾漫</title><link>https://clickear.github.io/%E4%BD%95%E4%BB%A5%E7%AC%99%E7%AE%AB%E9%BB%98-%E9%A1%BE%E6%BC%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BD%95%E4%BB%A5%E7%AC%99%E7%AE%AB%E9%BB%98-%E9%A1%BE%E6%BC%AB/</guid><description>元数据 [!abstract] 何以笙箫默
书名： 何以笙箫默 作者： 顾漫 简介： 同名电影《何以笙箫默》由黄晓明、杨幂联袂主演！快餐时代的爱情，似乎你我四目相对，瞬间就能干柴烈火，转眼又相忘于江湖，彼此干干净净再无瓜葛。谁还记得遥远的《诗经》里，还写下过“执子之手，与子偕老”的浪漫传说，谁又能想见，这样简单干净，一眼便是万年的爱情，真的在何以琛和赵默笙身上发生了。 出版时间 2011-01-01 00:00:00 ISBN： 9787544143615 分类： 精品小说-情感小说 出版社： 沈阳出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>你是我的荣耀（杨洋、迪丽热巴主演）-顾漫</title><link>https://clickear.github.io/%E4%BD%A0%E6%98%AF%E6%88%91%E7%9A%84%E8%8D%A3%E8%80%80%E6%9D%A8%E6%B4%8B%E8%BF%AA%E4%B8%BD%E7%83%AD%E5%B7%B4%E4%B8%BB%E6%BC%94-%E9%A1%BE%E6%BC%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BD%A0%E6%98%AF%E6%88%91%E7%9A%84%E8%8D%A3%E8%80%80%E6%9D%A8%E6%B4%8B%E8%BF%AA%E4%B8%BD%E7%83%AD%E5%B7%B4%E4%B8%BB%E6%BC%94-%E9%A1%BE%E6%BC%AB/</guid><description>元数据 [!abstract] 你是我的荣耀（杨洋、迪丽热巴主演）
书名： 你是我的荣耀（杨洋、迪丽热巴主演） 作者： 顾漫 简介： 同名电视剧2021年7月26日腾讯视频独播。十年过去，乔晶晶意外的星光闪耀，高中拒绝过她的男神却似乎已经泯然众人……时光匆匆，你依旧在我心中闪耀，我是否也能成为你的荣耀？是乔晶晶。高考一别以来，他们已经有十年没见了。或者这么说也不对，其实他到处可以见到她，在各种新闻媒体、各种大小屏幕，甚至地铁广告、公车站牌上，处处都有她的身影。看着不远处那个朝他盈然而笑的女子，于途不能免俗地恍惚地觉得——他大概遇见了一个奇遇。乔晶晶也在看着于途，她想，有句话，很流行的，怎么说来着。哦，好像是——归来仍是少年。她在滚滚红尘中奔波名利，而这个人却一如既往，眼神清澈。 出版时间 2019-06-01 00:00:00 ISBN： 9787510874451 分类： 精品小说-情感小说 出版社： 九州出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>使用笔记在内容中建立联想的优缺点</title><link>https://clickear.github.io/%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%E5%9C%A8%E5%86%85%E5%AE%B9%E4%B8%AD%E5%BB%BA%E7%AB%8B%E8%81%94%E6%83%B3%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%E5%9C%A8%E5%86%85%E5%AE%B9%E4%B8%AD%E5%BB%BA%E7%AB%8B%E8%81%94%E6%83%B3%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9/</guid><description>当发现正在阅读网页可能与我们硬盘里某些 PDF 有联系时，我们没有办法直接为他们建立关联，但可以通过建立笔记来连接这两个资源。
这与 memex 解决方案（Bush , 1945）不同，后者设想了任何种类的文件——你的或别人的——之间的直接联系。
写笔记是好的，因为它迫使你[[独立思考]]，然而它有点费心思，因为[[常青笔记应该以概念为导向]]。因此，为了写笔记，我们必须提取两者之间的概念联系，为其命名，并以某种可能引出未来联系的方式安排它。
当进行[[写你所读，以求内化]]时，我们有两层笔记：在我们的参考图书馆里有关于阅读本身的轻量级笔记，然后在我们的笔记档案里有更高保真度的[[常青笔记]]。支持并维护这两层关于联系保真度的笔记也可能会很有价值，方法是：在材料之间进行轻量级的联系，逐渐将有价值的观察「编码」成持久的笔记。
参考文献 Bush, Vannevar. “As We May Think.” Atlantic Monthly, July 1945.</description></item><item><title>使用笔记来避免先入为主的结论</title><link>https://clickear.github.io/%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%E6%9D%A5%E9%81%BF%E5%85%8D%E5%85%88%E5%85%A5%E4%B8%BA%E4%B8%BB%E7%9A%84%E7%BB%93%E8%AE%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%E6%9D%A5%E9%81%BF%E5%85%8D%E5%85%88%E5%85%A5%E4%B8%BA%E4%B8%BB%E7%9A%84%E7%BB%93%E8%AE%BA/</guid><description>Thoughts Memo 汉化组译制
原文： Use notes to avoid preconceived conclusions (andymatuschak.org)
在编辑手稿时，人们往往一开始脑中已经有了一个结论（或至少是一个角度），然后我们的写作或研究就着眼于支持这个想法。如果我们不够谨慎，那么这些先入为主的观念就会扭曲我们的思维。但是，如果我们一开始就从[[常青笔记应该是原子化的]]写起，我们就可以让结论和主题从我们的周密思考中自然涌现出来。
参考文献 Ahrens, S. (2017). How to Take Smart Notes: One Simple Technique to Boost Writing, Learning and Thinking – for Students, Academics and Nonfiction Book Writers.</description></item><item><title>信息简史-詹姆斯·格雷克</title><link>https://clickear.github.io/%E4%BF%A1%E6%81%AF%E7%AE%80%E5%8F%B2-%E8%A9%B9%E5%A7%86%E6%96%AF%E6%A0%BC%E9%9B%B7%E5%85%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BF%A1%E6%81%AF%E7%AE%80%E5%8F%B2-%E8%A9%B9%E5%A7%86%E6%96%AF%E6%A0%BC%E9%9B%B7%E5%85%8B/</guid><description>元数据 [!abstract] 信息简史
书名： 信息简史 作者： 詹姆斯·格雷克 简介： 人类与信息遭遇的历史由来已久。詹姆斯·格雷克笔下的这段历史出人意料地从非洲的鼓语讲起。非洲土著部落在尚未直接跨越到移动电话之前，曾用鼓声来传递讯息，但他们是如何做到的呢？后续章节进而讲述了这段历史上几个影响深远的关键事件，包括文字的发明、罗伯特·考德里的第一本英语词典、查尔斯·巴贝奇的差分机与爱达·拜伦的程序、沙普兄弟的信号塔与摩尔斯电码。但人类开始自觉地理解和利用信息始于克劳德·香农在1948年创立的信息论。香农的信息论不仅推动了信息技术的发展，也引发了许多学科的信息转向，改变了人们对于诸如麦克斯韦妖、生命的编码、模因、随机性、量子信息论等的理解。部分科学家甚至认为，构成世界的基础不是物质，不是能量，而是信息。正如物理学家约翰·惠勒所说，“万物源自比特”。现如今，信息如洪流般淹没了我们，使我们深陷信息焦虑、信息过载、信息疲劳的困扰。但回顾历史，这并不是件新鲜事，人们也总是能想出应对手段。维基百科、Google便是我们的应对之一。无论对于信息的未来持何态度，有一点是确定无疑的，即我们人类是信息的造物。 出版时间 2013-12-01 00:00:00 ISBN： 9787115331809 分类： 历史-历史文化 出版社： 人民邮电出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>元数据区</title><link>https://clickear.github.io/%E5%85%83%E6%95%B0%E6%8D%AE%E5%8C%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%85%83%E6%95%B0%E6%8D%AE%E5%8C%BA/</guid><description>[!TIP] 技巧💡
JDK1.7叫 永久代 ，本质性上是一样的，都是对 JVM 规范中方法区的实现。最大的区别在于：元数据空间并不在虚拟机中，而是使用本地内存
在JDK1.8之后，属于本地内存，而不是jvm内存。
永久代元数据 -主要用于存储类的信息、常量池、方法数据、方法代码等 永久代必须指定大小限制（属于jvm内存），元数据可以设置，也可以不设置，无上限（受限与物理内存） 属于本地内存 演进历史 jdk1.6: 有永久代，静态变量存放在永久代上 jdk1.7: 有永久代，字符串常量池、静态变量保存在堆中 jdk1.</description></item><item><title>兄弟（第3版）-余华</title><link>https://clickear.github.io/%E5%85%84%E5%BC%9F%E7%AC%AC3%E7%89%88-%E4%BD%99%E5%8D%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%85%84%E5%BC%9F%E7%AC%AC3%E7%89%88-%E4%BD%99%E5%8D%8E/</guid><description>元数据 [!abstract] 兄弟（第3版）
书名： 兄弟（第3版） 作者： 余华 简介： 余华作品，被誉为中国的弥尔顿《失乐园》，荣获法国国际信使外国小说奖，入选瑞士《时报》2000年至2010年这10年来全球最为重要的15本书。讲述了江南小镇两兄弟李光头和宋钢的人生。李光头的父亲不怎么光彩地意外身亡，而同一天李光头出生。宋钢的父亲宋凡平在众人的嘲笑声中挺身而出，帮助了李光头的母亲李兰，被后者视为恩人。几年后宋钢的母亲也亡故，李兰和宋凡平在互相帮助中相爱并结婚。虽然这场婚姻遭到了镇上人们的鄙夷和嘲弄，但两人依然相爱甚笃，而李光头和宋钢这对没有血缘关系的兄弟也十分投缘，他们在相互照顾中成长……本书荣获法国国际信使外国小说奖（2008年），入选瑞士《时报》2000年至2010年这10年来全球最为重要的15本书。 出版时间 2012-09-01 00:00:00 ISBN： 9787506365697 分类： 文学-经典作品 出版社： 作家出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>免费：商业的未来-克里斯·安德森</title><link>https://clickear.github.io/%E5%85%8D%E8%B4%B9%E5%95%86%E4%B8%9A%E7%9A%84%E6%9C%AA%E6%9D%A5-%E5%85%8B%E9%87%8C%E6%96%AF%E5%AE%89%E5%BE%B7%E6%A3%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%85%8D%E8%B4%B9%E5%95%86%E4%B8%9A%E7%9A%84%E6%9C%AA%E6%9D%A5-%E5%85%8B%E9%87%8C%E6%96%AF%E5%AE%89%E5%BE%B7%E6%A3%AE/</guid><description>元数据 [!abstract] 免费：商业的未来
书名： 免费：商业的未来 作者： 克里斯·安德森 简介： 这是一个商业模式不断被颠覆、被改写的时代。一种商业模式既可以统摄未来市场，也可以挤垮当前市场——在我们这个现代经济社会里，这并不是一件不可能的事情。“免费”就是这样的一种商业模式，它代表了互联网时代的商业未来。 “免费”商业模式是一种建立在以电脑字节为基础上的经济学，而非过去建立在物理原子基础上的经济学。在原子经济中，随着时间的推移，我们周围的物品都在逐渐升值。但是在字节经济的网络世界中，物品变得越来越便宜。在上世纪“免费”是一种强有力的推销手段，而在21世纪它已经成为一种全新的商业模式。 在免费商业模式下，很多传统的企业的商业模式将彻底被颠覆。那么，传统企业将如何在免费的商业背景下构建一种新的商业模式？《免费》一书将是你的必读之作。 出版时间 2015-10-01 00:00:00 ISBN： 9787508652085 分类： 经济理财-管理 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>公平锁</title><link>https://clickear.github.io/%E5%85%AC%E5%B9%B3%E9%94%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%85%AC%E5%B9%B3%E9%94%81/</guid><description>公平锁指的就是：在竞争环境下，先到临界区的线程比后到的线程一定更快地获取得到锁。类似FIFO思想。
实现思路 FIFO的队列。</description></item><item><title>公正：该如何做是好？-迈克尔·桑德尔</title><link>https://clickear.github.io/%E5%85%AC%E6%AD%A3%E8%AF%A5%E5%A6%82%E4%BD%95%E5%81%9A%E6%98%AF%E5%A5%BD-%E8%BF%88%E5%85%8B%E5%B0%94%E6%A1%91%E5%BE%B7%E5%B0%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%85%AC%E6%AD%A3%E8%AF%A5%E5%A6%82%E4%BD%95%E5%81%9A%E6%98%AF%E5%A5%BD-%E8%BF%88%E5%85%8B%E5%B0%94%E6%A1%91%E5%BE%B7%E5%B0%94/</guid><description>元数据 [!abstract] 公正：该如何做是好？
书名： 公正：该如何做是好？ 作者： 迈克尔·桑德尔 简介： 《公正》是哈佛大学有史以来最受学生欢迎的课程，youtube上最受欢迎讲座，在全球掀起学习政治哲学的狂潮！钱颖一、邓正来、闾丘露薇推荐阅读！当我们遇到生死抉择的时候，为什么我们常常违背利益最大化的原则而尊重人的基本权利？可是，当我们口口声声说生命至上时，为什么像福特汽车这样的企业却会给生命贴上价格标签？如果我们尊重个体的权利，但为什么大多数人又会反对同性恋婚姻？我们认为法律必须保护合同的有效性，但为什么一些双方自愿签订的合同却被法院推翻？我们的社会、我们的思潮、我们的正义观，正陷入尴尬的两难选择当中。我们清醒的理性和人类的良知，会促发我们去寻找有关“公正”的“出路”。这条道路既能体现我们社会规范的人性，又能体现客观性。而这正是“世界最受欢迎的老师之一”的迈克尔·桑德尔教授寻找的有关公正的第三条进路：培养我们每个人的德性，作出我们应该作的、公正的选择。 出版时间 2013-06-17 00:00:00 ISBN： 9787508636238 分类： 政治军事-政治 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>兵线、防御塔及经济</title><link>https://clickear.github.io/%E5%85%B5%E7%BA%BF%E9%98%B2%E5%BE%A1%E5%A1%94%E5%8F%8A%E7%BB%8F%E6%B5%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%85%B5%E7%BA%BF%E9%98%B2%E5%BE%A1%E5%A1%94%E5%8F%8A%E7%BB%8F%E6%B5%8E/</guid><description>兵如何判定攻击目标。
防御塔如何判定攻击目标。
经济来源 兵线奖励
推塔奖励
击杀奖励
高光奖励</description></item><item><title>写你所读，以求内化</title><link>https://clickear.github.io/%E5%86%99%E4%BD%A0%E6%89%80%E8%AF%BB%E4%BB%A5%E6%B1%82%E5%86%85%E5%8C%96/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%86%99%E4%BD%A0%E6%89%80%E8%AF%BB%E4%BB%A5%E6%B1%82%E5%86%85%E5%8C%96/</guid><description>%%我的理解:: 正如[[🧑卢曼]]所言：[[✨不写作，就无法思考]] %%
如果你想深刻内化你所读的内容，我所知的最好方法就是围绕它们写点什么：
因为[[理解概念需与其尽力较量]] 具体到写作上， 写作迫使人们更敏锐地理解 记住：[[收集材料的作用在感觉上被夸大了]] 否则你就不会[[自主思考]] 因为[[知识工作应能聚沙成塔]]和[[常青笔记有助于积累阅读成果]] 诚然：[[多数人的阅读成效不大]] 对于理解深刻来说，仅仅在书本上划出重点或写上旁注是不够的：没有太多的压力去综合、联系，或去探究事物的核心。而且随着时间的推移，随着你读得越多，这些内容也不会逐步积累。而在阅读时写下[[常青笔记]]则与之不同。
但当然，这种阅读方式有时候并没有意义：很多时候，你并不是真的想把深入内化文本，而且它也不一定值得耗费心力：[[最好的阅读方式是高度语境化的]]。
另外值得注意的一点是：[[我所认识的高效阅读者和思想家在阅读时不做笔记]]。但至少就我个人经验而言，我自己是需要更多的支持，来有效地体会我所阅读的内容的。
方法 我们的大方针是交替地循环：
收集看起来有趣的段落和阅读时出现的想法：[[如何在阅读时整理所得]] 加工将这些段落和思想群，写出经久耐用的笔记：[[如何将阅读标注处理成常青笔记]] 参考文献 Luhmann, N.</description></item><item><title>写笔记可以是高超的技能</title><link>https://clickear.github.io/%E5%86%99%E7%AC%94%E8%AE%B0%E5%8F%AF%E4%BB%A5%E6%98%AF%E9%AB%98%E8%B6%85%E7%9A%84%E6%8A%80%E8%83%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%86%99%E7%AC%94%E8%AE%B0%E5%8F%AF%E4%BB%A5%E6%98%AF%E9%AB%98%E8%B6%85%E7%9A%84%E6%8A%80%E8%83%BD/</guid><description>Note-writing can be a virtuosic skill</description></item><item><title>写给大家看的设计书（第4版）-Robin Williams</title><link>https://clickear.github.io/%E5%86%99%E7%BB%99%E5%A4%A7%E5%AE%B6%E7%9C%8B%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B9%A6%E7%AC%AC4%E7%89%88-Robin-Williams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%86%99%E7%BB%99%E5%A4%A7%E5%AE%B6%E7%9C%8B%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B9%A6%E7%AC%AC4%E7%89%88-Robin-Williams/</guid><description>元数据 [!abstract] 写给大家看的设计书（第4版）
书名： 写给大家看的设计书（第4版） 作者： Robin Williams 简介： 平面设计入门经典大作、 零基础自学平面设计师指导手册！ 让人人都能成为设计师！在这部畅销全球多年、影响了一代设计师的经典著作中，Robin　Williams将优秀设计的秘诀归纳为对比、重复、对齐和亲密性四条基本原则，并用简洁通俗、幽默生动的文笔，同时配以大量经过修改进行前后对比的实例图解和设计练习（并提供解答），直观清晰地传授给读者。通过本书，普通读者很快就能够自信地设计出专业级别的作品，而专业设计师也将从中获得灵感和解决问题的途径。 出版时间 2016-01-01 00:00:00 ISBN： 9787115404404 分类： 艺术-设计 出版社： 人民邮电出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>冯唐成事心法-冯唐</title><link>https://clickear.github.io/%E5%86%AF%E5%94%90%E6%88%90%E4%BA%8B%E5%BF%83%E6%B3%95-%E5%86%AF%E5%94%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%86%AF%E5%94%90%E6%88%90%E4%BA%8B%E5%BF%83%E6%B3%95-%E5%86%AF%E5%94%90/</guid><description>元数据 [!abstract] 冯唐成事心法
书名： 冯唐成事心法 作者： 冯唐 简介： 他是热爱文艺的管理专家，是精通麦肯锡与曾国藩成事学的商业领袖，是医学博士出身的投资人。10年麦肯锡战略规划经验，5年华润医疗集团创始心得，5年中信资本投资管理启示——冯唐20年持续跨界成事经验，凝结成这本《冯唐成事心法》。冯唐说：“我将自己二十年职业管理生涯中吃过的苦、踩过的雷、翻过的山、见识过的人，总结为‘冯唐成事心法’。”以西方麦肯锡管理方法为经，以中国经典成事智慧为纬，融合冯唐20年职场亲身实践的经验，以冯唐独特观点+方法语录提炼+丰富运用场景+经验案例+实战方法为内容框架，助你在现实中修行，在工作中求法，在沟通中识人，在思考中升级。写给每一个想干事、能干事、持续成大事的人。 出版时间 2020-12-01 00:00:00 ISBN： 9787559646996 分类： 经济理财-管理 出版社： 北京联合出版公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>冷热数据分离</title><link>https://clickear.github.io/%E5%86%B7%E7%83%AD%E6%95%B0%E6%8D%AE%E5%88%86%E7%A6%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%86%B7%E7%83%AD%E6%95%B0%E6%8D%AE%E5%88%86%E7%A6%BB/</guid><description>冷热数据特殊处理，是个很重要的思路。针对不同数据不同处理。
典型应用 jvm中[[垃圾回收]] 在[[垃圾回收]]中，需要对内存进行管理，回收。因为不同数据，使用不同的[[垃圾回收算法]]，性能是不一样的。进行[[分代收集算法]]，即
[[老年代]]（不常回收数据），采用[[标记整理法]]或者[[标记清除法]]，大部分数据都是不回收的
新生代(招生熄灭)，大部分对象都存不久。采用 [[标记复制法]]
冷热数据切换条件:
达到年龄或者新生代直接放不下。
mysql中的[[bufferpool]] [[bufferpool]]缓存失效策略，也是使用[[mysqlLRU]]策略。区分冷热数据。
冷热数据切换条件:</description></item><item><title>准备</title><link>https://clickear.github.io/%E5%87%86%E5%A4%87/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%87%86%E5%A4%87/</guid><description>准备阶段的目的，则是为被加载类的静态字段分配内存。Java 代码中对静态字段的具体初始化，则会在稍后的初始化阶段中进行。 除了分配内存外，部分 Java 虚拟机还会在此阶段构造其他跟类层次相关的数据结构，比如说用来实现虚方法的动态绑定的方法表。 在 class 文件被加载至 Java 虚拟机之前，这个类无法知道其他类及其方法、字段所对应的具体地址，甚至不知道自己方法、字段的地址。因此，每当需要引用这些成员时，Java 编译器会生成一个符号引用。在运行阶段，这个符号引用一般都能够无歧义地定位到具体目标上。
为类变量分配内存并且设置该类变量的默认初始值，即零值数据类型零值。 这里不包含用final修饰的static，因为final在编译的时候就会分配了，准备阶段会显示初始化 这里不会为实例变量分配初始化，类变量会分配在方法区中，而实例变量是会随着对象一起分配到Java堆中
private static int i = 1;</description></item><item><title>出装与对线</title><link>https://clickear.github.io/%E5%87%BA%E8%A3%85%E4%B8%8E%E5%AF%B9%E7%BA%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%87%BA%E8%A3%85%E4%B8%8E%E5%AF%B9%E7%BA%BF/</guid><description>装备分类角度
攻防角度分析 攻击装 法伤 物伤 防御装 法防 物防 功用角度分析 数值型装备 功能型装备</description></item><item><title>分代收集算法</title><link>https://clickear.github.io/%E5%88%86%E4%BB%A3%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%86%E4%BB%A3%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95/</guid><description> [[新生代]]（招生熄灭）用[[标记复制法]]，把少量存活对下复现出来 [老年代]， 用[[标记整理法]]或者[[标记清除法]] 思路 为了控制GC产生的停顿时间，将一块大的内存区域分割成多个小块，根据目标的停顿时间，每次合理的回收若干个小区间，而不是整个堆空间，从而减少一次GC所产生的时间 分代算法是将对象按照生命周期长短划分为两个部分，分区算法是将整个堆划分为连续的不同的小区间 每一个小区间都独立使用，独立回收，这种算法的好处是可以控制一次回收多少个小区间</description></item><item><title>分布2式算法种类</title><link>https://clickear.github.io/-%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/</guid><description>#分布式
link: 凤凰架构
待办列表 分布式算法-极客时间 常青笔记 分布式写一致性级别（All、[[Quorum机制]]、One、Any） [[多副本]]是分布式中的重要问题，本质上分布式就是解决[[多副本]]的同步问题、共识问题。 [[数据同步]]是直接同步原始数据，状态转移。以同步为代表的数据复制方法。需要每个节点都参与同步，导致可用性太差。 主流做法，是操作转移。类型react中的增量操作。分布式一致性的解决方案是[[状态机复制]]来达到的。 [[Quorum机制]] ([[多数派]])：分布式节点多余一半完成了状态转换，就认为存储成功。 分布2式算法种类 [[拜占庭问题]] 一般而言，在可信环境（比如企业内网）中，系统具有故障容错能力就可以了，常见的算法有二阶段提交协议（2PC）、TCC（Try-Confirm-Cancel）、Paxos 算法、ZAB 协议、Raft 算法、Gossip 协议、Quorum NWR 算法。而在不可信的环境（比如有人做恶）中，这时系统需要具备拜占庭容错能力，</description></item><item><title>分布式id</title><link>https://clickear.github.io/%E5%88%86%E5%B8%83%E5%BC%8Fid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%86%E5%B8%83%E5%BC%8Fid/</guid><description>[!TIP] 技巧💡
主要特点就是要唯一 + 有序（至少整体的递增趋势） 全局递增: 3. 数据库db方案，采用双buffer + db号段方案， 4. 典型使用 leaf, TinyId 非全局递增，递增趋势的，适合订单id
雪花算法（时钟回拨，workder没回收）
时钟回拨: 采用等待时间 leaf采用，超过太长时间就启动失败 bufferfly， 启动时间戳采用的是“历史时间”，每次请求只增序列值，序列值增满，然后“历史之间”增1，序列值重新计算。</description></item><item><title>分库分表</title><link>https://clickear.github.io/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/</guid><description>单机qps 1000-2000 ，还能撑
MQ 每秒8w并发
单库，最多支撑到并发 1000 - 2000。
2-3千万
200个学生
拆分类型 垂直拆分(非重要字段剥离) 水平拆分(表字段一样，水平扩展) 数据分片逻辑 range，按时间段来，一般少用 按某个值取 hash 在线系统怎么迁移？ 停机（low) 双写迁移</description></item><item><title>刑法学讲义（法律男神罗翔的刑法普及课）-罗翔</title><link>https://clickear.github.io/%E5%88%91%E6%B3%95%E5%AD%A6%E8%AE%B2%E4%B9%89%E6%B3%95%E5%BE%8B%E7%94%B7%E7%A5%9E%E7%BD%97%E7%BF%94%E7%9A%84%E5%88%91%E6%B3%95%E6%99%AE%E5%8F%8A%E8%AF%BE-%E7%BD%97%E7%BF%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%91%E6%B3%95%E5%AD%A6%E8%AE%B2%E4%B9%89%E6%B3%95%E5%BE%8B%E7%94%B7%E7%A5%9E%E7%BD%97%E7%BF%94%E7%9A%84%E5%88%91%E6%B3%95%E6%99%AE%E5%8F%8A%E8%AF%BE-%E7%BD%97%E7%BF%94/</guid><description>元数据 [!abstract] 刑法学讲义（法律男神罗翔的刑法普及课）
书名： 刑法学讲义（法律男神罗翔的刑法普及课） 作者： 罗翔 简介： 全网爆红的“法律男神”罗翔教授为每一位普通读者写的刑法普及讲义。刑法与每个人的生活都密不可分，家庭、校园、职场、人际关系、经济活动处处都有违法犯罪行为，相应地，每个人都需要学习刑法。罗翔让本来枯燥专业的刑法课变得“津津有味”，读者直呼上头，“根本停不下来”。刑法常识结合法理精神，兼具法律与人文的力量。本书为读者提供了相对完整的刑法学习体系，涵盖刑法演变、犯罪论、刑罚论，以及具体罪名的定罪量刑。全书通过分析真实刑法案件、张三的犯罪行为，激发读者用独立、睿智的法学思维去看待生活，提高法律感知能力。最后，每一位读者都能带着法学思维回归到工作、生活中去。 出版时间 2020-07-01 00:00:00 ISBN： 9787222193727 分类： 社会文化-法律 出版社： 云南人民出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>创制环境极大程度受作者的动机塑造</title><link>https://clickear.github.io/%E5%88%9B%E5%88%B6%E7%8E%AF%E5%A2%83%E6%9E%81%E5%A4%A7%E7%A8%8B%E5%BA%A6%E5%8F%97%E4%BD%9C%E8%80%85%E7%9A%84%E5%8A%A8%E6%9C%BA%E5%A1%91%E9%80%A0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%9B%E5%88%B6%E7%8E%AF%E5%A2%83%E6%9E%81%E5%A4%A7%E7%A8%8B%E5%BA%A6%E5%8F%97%E4%BD%9C%E8%80%85%E7%9A%84%E5%8A%A8%E6%9C%BA%E5%A1%91%E9%80%A0/</guid><description>%%我的理解:: 唯有热爱，创造奇迹。%%
创制环境中，活动也许本身具有一些表层目标，但作者的动机会影响这些目标，并赋予其一些特征。当作者、参与者和活动的目标一致，作者能够创造出强效的环境；当他们相互抵触时，环境就无法变得融贯起来。
例如，有一些非虚拟作品的出发点，是调动读者对某个主题的积极性，使读者有激情去深入学习。如果作者由衷喜爱这一主题，以至于不吐不快，则其作品的行文水平也随之水涨船高。相比之下，若是出于义务而撰写一本教科书，对内容本身并无兴趣，那么写出的文章也无从传达热情，有辱其使命。
Haskell 据称是和 Python 一样的，可用于生产的企业级编程语言。能想到的「真正」编程时所需的功能，这门语言都有。然而 Haskell 开发者的主要动机是这门语言的理论特性，这一点可以从各种细节中窥见。尽管 Haskell 在其他方面发力良多，它主要还是在辅助研究者更有效地思考 Haskell 所践行的编程语言理论，是这一方面的[[赋能环境]]；对于编写软件的人则并不如此。Smalltalk 与其类似。
孢子被包装成动作/冒险游戏，在游戏中你可以创造自己的生命体，然后征服银河系。但我感觉，孢子的创造者的主要动机是研究模拟和程序式生成的机制。游戏的这些部分很饱满，很吸引人，但「主要」的游玩环节感觉是后来添上的一笔。
Michael Nielsen 指出，阿波罗计划的目的是让进入太空优先于其他任何事项（参见 强大的赋能环境通常是作为追求自身内在意义的项目的副产品而产生的。这也是一个创制环境：它的管理者通过设计一些流程和营造一种氛围来促成这一愿景。当然还有官僚主义：通过设定进入太空的目标，官僚主义是否变得不那么具有阻碍性？</description></item><item><title>创建超链接到我的参考档案</title><link>https://clickear.github.io/%E5%88%9B%E5%BB%BA%E8%B6%85%E9%93%BE%E6%8E%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8F%82%E8%80%83%E6%A1%A3%E6%A1%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%9B%E5%BB%BA%E8%B6%85%E9%93%BE%E6%8E%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8F%82%E8%80%83%E6%A1%A3%E6%A1%88/</guid><description>%%我的理解:: 外部链接的不稳定性，导致资源失效。我也一直在寻求更好的方式，目前看，文件放到devonthink里面，是一个好选择，但无法实现很方便的分享给别人某篇笔记+若干个文件这种场景。[[hook]]将是解决之道，可惜太贵了。%%
在我的参考档案中，应该很容易建立持久的、可供人类阅读的资源链接。
例如，当提到一篇论文时，最好能链接到 PDF——可能是链接到一个特定的页面。我可以使用一个 file:// 的 URL，但这带来了几个问题。
文件储存位置可能会变化 我无法链接到一个特定的页码 URL可能不具可读性 这在 iOS 上肯定无法运行 如果能链接到一个自定义的协议（如 ammref://），那就更好了，它可以
重定向引用到具体文件 如果需要的话，可以直接运行具体文件 避免将我捆绑在任何文件系统结构或阅读器应用程序上 支持可读的 URL；例如 ammref://Hattie/1994/VisibleLearning#p57 这是很可行的。这将意味着：</description></item><item><title>初始化</title><link>https://clickear.github.io/%E5%88%9D%E5%A7%8B%E5%8C%96/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%9D%E5%A7%8B%E5%8C%96/</guid><description> [!NOTE] 笔记
注意：字节码文件中初始化方法有两种，非静态资源初始化的&amp;lt;init&amp;gt;和静态资源初始化的&amp;lt;clinit&amp;gt;，类构造器方法&amp;lt;clinit&amp;gt;()不同于类的构造器，这些方法都是字节码文件中只能给JVM识别的特殊方法。
初始化其实就是执行类构造器方法的&amp;lt;clinit&amp;gt;()的过程，而且要保证执行前父类的&amp;lt;clinit&amp;gt;()方法执行完毕。这个方法由编译器收集，顺序执行所有类变量（static修饰的成员变量）显式初始化和静态代码块中语句。此时准备阶段时的那个 static int a 由默认初始化的0变成了显式初始化的3。 由于执行顺序缘故，初始化阶段类变量如果在静态代码块中又进行了更改，会覆盖类变量的显式初始化，最终值会为静态代码块中的赋值。
执行过程 &amp;lt;clinit&amp;gt;()方法不需要定义，是javac编译器自动收集类中的所有类变量的赋值动作和静态代码块中的语句按顺序合并而来。 若该类具有父类，JVM会保证子类的&amp;lt;clinit&amp;gt;()执行前，父类的&amp;lt;clinit&amp;gt;()已经执行完毕 虚拟机必须保证一个类的&amp;lt;clinit&amp;gt;()方法在多线程下被同步加锁 jvm保证。这个特性，可以用来保证[[单例模式]]的实现。</description></item><item><title>利用逆向思维，使自己成为一个真正自律的人</title><link>https://clickear.github.io/%E5%88%A9%E7%94%A8%E9%80%86%E5%90%91%E6%80%9D%E7%BB%B4%E4%BD%BF%E8%87%AA%E5%B7%B1%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E7%9C%9F%E6%AD%A3%E8%87%AA%E5%BE%8B%E7%9A%84%E4%BA%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%A9%E7%94%A8%E9%80%86%E5%90%91%E6%80%9D%E7%BB%B4%E4%BD%BF%E8%87%AA%E5%B7%B1%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E7%9C%9F%E6%AD%A3%E8%87%AA%E5%BE%8B%E7%9A%84%E4%BA%BA/</guid><description>改变思考方式：自律不是在 2 种快乐中，选择更快乐的；而是在 2 种痛苦中，选择更有意义的那种痛苦。 当我们面临是否去运动，是否早睡等等选择的时候。下意识的思考方式是：运动和早睡是痛苦的选择，反之是快乐的选择。前者是 [[延迟满足]]，后者是[[即时满足]]。但是其实，延迟满足，带来的是当下的痛苦，但也是有意义的痛苦；即时满足，带来的是往后的痛苦。想清楚这一点，接受这个设定，以后在面临选择前，思考你更希望接受哪种痛苦？那当然是有意义的痛苦。
一句话，以后苦不如现在苦。
不去约束自己某段时间一定要自律，而是去约定自己某段时间一定要放纵。 比如我准备考研那会儿，约定自己周日晚上一定要尽情放纵。反而带来了理想的效果，自己更愿意在其他没有被强制放松的时间进入自律状态了。
只在规定的时间里自我管理，过时不候；剩下的时间，绝对不允许自律，一定要玩儿，一定要大吃大喝。结果反而 更容易达成自律的目的。
所有自律其实都有外部约束。外部约束就是他律，用他律达成自律。 deadline 其实就是一个例子，它就是一种隐形的外部约束，让我们不得不自律起来去干活。
比如想跑步，自律很难，就提前报个马拉松，为了到时候能跑出成绩，平时会更可能自觉地去锻炼。
比如我现在想搞一个自己全部笔记的 [[数字花园]]，发布在线上，这样会促进我去每天做笔记，因为就算没多少人看，我也会想让自己发布出来的东西不至于太难看。实现了他律达成自律的效果。
除了简单的单一的外部约束，综合环境对一个人的自律影响最大 孟母三迁，离异家庭的孩子读书成绩往往不好，等等生活的例子告诉我们：综合环境，很可能会对一个人造成致命的不可逆转的打击，导致其心理崩盘，再也不会有自律的动力。这个时候跟他谈一切方法，都会失去意义，因为他内心已经隐隐觉得，人生又有何意义？所以现代 2022 年，很多人也是被各方面打击，击穿心理防线，导致失去了自律的底层动力。</description></item><item><title>刻意练习：如何从新手到大师-安德斯·艾利克森 罗伯特·普尔</title><link>https://clickear.github.io/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E5%A6%82%E4%BD%95%E4%BB%8E%E6%96%B0%E6%89%8B%E5%88%B0%E5%A4%A7%E5%B8%88-%E5%AE%89%E5%BE%B7%E6%96%AF%E8%89%BE%E5%88%A9%E5%85%8B%E6%A3%AE-%E7%BD%97%E4%BC%AF%E7%89%B9%E6%99%AE%E5%B0%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E5%A6%82%E4%BD%95%E4%BB%8E%E6%96%B0%E6%89%8B%E5%88%B0%E5%A4%A7%E5%B8%88-%E5%AE%89%E5%BE%B7%E6%96%AF%E8%89%BE%E5%88%A9%E5%85%8B%E6%A3%AE-%E7%BD%97%E4%BC%AF%E7%89%B9%E6%99%AE%E5%B0%94/</guid><description>元数据 [!abstract] 刻意练习：如何从新手到大师
书名： 刻意练习：如何从新手到大师 作者： 安德斯·艾利克森 罗伯特·普尔 简介： 本书是两位作者合作撰写的，一位是心理学家，另一位是科学作家。10多年前，我们开始经常探讨杰出人物和“刻意练习”这个主题，并在5年前开始认真地围绕这个主题写书。在那段时间，本书在我们两人的思想碰撞中慢慢成形，以至于我们现在都难以分辨，书中的哪一部分观点由谁提出。我们只知道，本书由我们两人合写，比由我们单独去写要好得多，也完全不同。 出版时间 2016-11-01 00:00:00 ISBN： 9787111551287 分类： 个人成长-认知思维 出版社： 机械工业出版社 高亮划线 读书笔记 “天才”是训练的产物 划线评论 📌 不论基因遗传可能在“天才”取得的成就中发挥着什么作用，他们和我们一样，大脑和身体都具有适应能力，只是比我们更多地利用了那一能力而已。 ^10500316-7yjWCUApK 💭 小时候那些奥数天才，只不过是有其他技能，比如专注，耐得住寂寞等等特质，再加上父母从小请老师培养，进行正反馈的不断的可以练习，而达到的而已。省级的奥数天才，不需要聪明绝顶，只需要相对聪明即可。 ⏱ [[2022-04-06]] 20:35 本书将告诉我们什么 划线评论 📌 不论在什么行业或领域，提高表现与水平的最有效方法，全都遵循一系列普遍原则。我们把这种通用的方法命名为“刻意练习”。 ^10500316-7yjWVXpnX 💭 在很多领域，我的目标是用轻度的刻意练习，做到60分入门水平，比如心理，金融，法律等。在极为感兴趣的领域，我的目标是用中度的可以练习，超过大部分人，做到80分优秀水平，比如知识管理，健身写作，工具运用，科技数码等。在本职工作上，应该要重度的刻意练习，有时候甚至要忍受一些枯燥和无聊，因为那是达到顶峰的必经之路。 ⏱ [[2022-04-06]] 20:40 本书评论</description></item><item><title>刻板印象</title><link>https://clickear.github.io/%E5%88%BB%E6%9D%BF%E5%8D%B0%E8%B1%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%BB%E6%9D%BF%E5%8D%B0%E8%B1%A1/</guid><description>刻板效应，又称刻板印象，它是指对某个群体产生一种固定的看法和评价，并对属于该群体的个人也给予这一看法和评价。[由苏联社会心理学家包达列夫（1923-）于 1965 年提出并通过实验证明。]
案例：基于对博士“学识渊博”的印象，人们一般认为博士肯定无所不知，或者一定写字很漂亮，其实多数博士更多的是在一个领域的专注精通，而不是常人以为的知识广度的积累；而且也不一定就写得一手漂亮字呢。</description></item><item><title>加载</title><link>https://clickear.github.io/%E5%8A%A0%E8%BD%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8A%A0%E8%BD%BD/</guid><description>::我的理解 [!NOTE] 笔记
就是加载到内存，生成一个代表这个类的java.lang.Class对象(实例)
通过一个类的全限定名获取定义此类的二进制字节流 将这个字节流所代表的的静态存储结构转化为方法区的运行时数据结构 在内存中生成一个代表这个类的 java.lang.Class 对象，作为方法区这个类的各种数据的访问入口 加载class文件的方式 从本地系统中直接加载 通过网络获取，典型场景：Web Applet 从zip压缩文件中读取，成为日后jar、war格式的基础 运行时计算生成，使用最多的是：动态代理技术 由其他文件生成，比如 JSP 应用 从专有数据库提取.</description></item><item><title>动物农场-乔治·奥威尔</title><link>https://clickear.github.io/%E5%8A%A8%E7%89%A9%E5%86%9C%E5%9C%BA-%E4%B9%94%E6%B2%BB%E5%A5%A5%E5%A8%81%E5%B0%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8A%A8%E7%89%A9%E5%86%9C%E5%9C%BA-%E4%B9%94%E6%B2%BB%E5%A5%A5%E5%A8%81%E5%B0%94/</guid><description>元数据 [!abstract] 动物农场
书名： 动物农场 作者： 乔治·奥威尔 简介： 《动物农场》是奥威尔最优秀的作品之一，是一则入木三分的反乌托的政治讽喻寓言。农场的一群动物成功地进行了一场“革命”，将压榨他们的人类东家赶出农场，建立起一个平等的动物社会。然而，动物领袖，那些聪明的猪们最终却篡夺了革命的果实，成为比人类东家更加独裁和极权的统治者。 出版时间 2010-09-01 00:00:00 ISBN： 9787532751457 分类： 文学-外国文学 出版社： 上海译文出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>动物庄园-乔治·奥威尔</title><link>https://clickear.github.io/%E5%8A%A8%E7%89%A9%E5%BA%84%E5%9B%AD-%E4%B9%94%E6%B2%BB%E5%A5%A5%E5%A8%81%E5%B0%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8A%A8%E7%89%A9%E5%BA%84%E5%9B%AD-%E4%B9%94%E6%B2%BB%E5%A5%A5%E5%A8%81%E5%B0%94/</guid><description>元数据 [!abstract] 动物庄园
书名： 动物庄园 作者： 乔治·奥威尔 简介： 曼娜庄园里的一头猪“老麦哲”（Old Major）临死前号召庄园里的动物反抗人类剥削，建立动物自己当家做主的共和国。老麦哲死后，庄园里的两头猪继承了他的思想，将其总结为“动物主义”，并以此为革命纲领领导了一场起义，将人类赶出了庄园，实现了“动物当家做主”的愿望，并把庄园更名为“动物庄园”，同时制定了宪法性质的“七诫”。但起义成功不久以后，作为领导集团的猪发生内部政治斗争。革命领袖之一“斯诺鲍”（Snowball）被宣布为革命的叛徒遭到驱逐，而另一革命领袖“拿破仑”获得了庄园的绝对领导权。此后，猪领导集团获得了越来越多的特权，最终变成了比人类更甚的剥削者…… 出版时间 2009-01-01 00:00:00 ISBN： 9787542630544 分类： 文学-经典作品 出版社： 北京东西时代数字科技有限公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>动物精神-罗伯特·希勒 乔治·阿克洛夫</title><link>https://clickear.github.io/%E5%8A%A8%E7%89%A9%E7%B2%BE%E7%A5%9E-%E7%BD%97%E4%BC%AF%E7%89%B9%E5%B8%8C%E5%8B%92-%E4%B9%94%E6%B2%BB%E9%98%BF%E5%85%8B%E6%B4%9B%E5%A4%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8A%A8%E7%89%A9%E7%B2%BE%E7%A5%9E-%E7%BD%97%E4%BC%AF%E7%89%B9%E5%B8%8C%E5%8B%92-%E4%B9%94%E6%B2%BB%E9%98%BF%E5%85%8B%E6%B4%9B%E5%A4%AB/</guid><description>元数据 [!abstract] 动物精神
书名： 动物精神 作者： 罗伯特·希勒 乔治·阿克洛夫 简介： 在本书中，两位作者抛开人类经济决策源于理性经济动机的假设，将信心、公平感、腐败和欺诈、货币幻觉以及作为人们生活参照物的“故事”等心理因素置于宏观经济学的前沿和核心，试图建构一套动物精神理论来解释宏观经济现象和经济的真实运行原理。它会告诉你：为什么经济会陷入萧条？为什么有人找不到工作？为什么从长期看通货膨胀和失业此消彼长？为什么为将来储蓄的决定如此随意？为什么金融价格和公司投资如此易变？为什么房地产市场具有周期性？危机当前，哪种政策才能真正奏效？ 出版时间 2012-12-01 00:00:00 ISBN： 9787508636160 分类： 经济理财-财经 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>助记媒介</title><link>https://clickear.github.io/%E5%8A%A9%E8%AE%B0%E5%AA%92%E4%BB%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8A%A9%E8%AE%B0%E5%AA%92%E4%BB%8B/</guid><description>#todo 一个大分类，有时间再细读并搬运。
助记媒介 (Mnemonic medium) - 知乎</description></item><item><title>助记媒介可以扩展到个人笔记上</title><link>https://clickear.github.io/%E5%8A%A9%E8%AE%B0%E5%AA%92%E4%BB%8B%E5%8F%AF%E4%BB%A5%E6%89%A9%E5%B1%95%E5%88%B0%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E4%B8%8A/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8A%A9%E8%AE%B0%E5%AA%92%E4%BB%8B%E5%8F%AF%E4%BB%A5%E6%89%A9%E5%B1%95%E5%88%B0%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E4%B8%8A/</guid><description>%%我的理解:: 就像[[spaced repetition]]插件和obsidian有机融合在一起。%%
Thoughts Memo 汉化组译制
原文： The mnemonic medium can be extended to one’s personal notes (andymatuschak.</description></item><item><title>卓越洞见从之前的所思所想中涌现</title><link>https://clickear.github.io/%E5%8D%93%E8%B6%8A%E6%B4%9E%E8%A7%81%E4%BB%8E%E4%B9%8B%E5%89%8D%E7%9A%84%E6%89%80%E6%80%9D%E6%89%80%E6%83%B3%E4%B8%AD%E6%B6%8C%E7%8E%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8D%93%E8%B6%8A%E6%B4%9E%E8%A7%81%E4%BB%8E%E4%B9%8B%E5%89%8D%E7%9A%84%E6%89%80%E6%80%9D%E6%89%80%E6%83%B3%E4%B8%AD%E6%B6%8C%E7%8E%B0/</guid><description>%%我的想法:: 就像牛顿的万有引力定律，绝不是靠1个苹果掉头上而得来的，之前的所思所想和知识积累必不可少。引申联想：[[个人努力与社会进程]]。%%
Thoughts Memo 汉化组译制
原文： Leaps of insight emerge from prior thought (andymatuschak.org)
他人的神来之笔，你看到的只是最终成果，却看不到多少想法在灵光闪现之前被弃之不用。这某种程度上，是因为我们感觉自己的顿悟从来不是靠努力去顺其自然得到的 —— 然而他们的这些灵感却是这样的！</description></item><item><title>单独的间隔重复记忆卡片是一种糟糕的交流媒介</title><link>https://clickear.github.io/%E5%8D%95%E7%8B%AC%E7%9A%84%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E8%AE%B0%E5%BF%86%E5%8D%A1%E7%89%87%E6%98%AF%E4%B8%80%E7%A7%8D%E7%B3%9F%E7%B3%95%E7%9A%84%E4%BA%A4%E6%B5%81%E5%AA%92%E4%BB%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8D%95%E7%8B%AC%E7%9A%84%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E8%AE%B0%E5%BF%86%E5%8D%A1%E7%89%87%E6%98%AF%E4%B8%80%E7%A7%8D%E7%B3%9F%E7%B3%95%E7%9A%84%E4%BA%A4%E6%B5%81%E5%AA%92%E4%BB%8B/</guid><description>#todo
[[传统的间隔重复记忆卡片是原子化的]]。每张卡片必须独立存在，可以在任何时候以任何顺序呈现。但是，这使得我们很难利用这些卡片来有效地传达一个本身就高度结构化且有序的概念。在实践中，概念通常依赖于其他概念，而情感显著性需要将这些概念与一个更大的整体联系起来（与[[深刻的理解需要强烈的个人联系（也是其结果）]]矛盾）。叙事在这些方面表现出色（[[文本的叙述作为认知脚手架]]）。
一个重要的影响：[[学习别人的间隔重复记忆卡片通常是无效的]]。
这一观察是开发[[助记媒介]]的主要动机之一：[[助记媒介给原子化的间隔重复记忆卡片以结构]]</description></item><item><title>卡片笔记写作法：如何实现从阅读到写作-申克·阿伦斯</title><link>https://clickear.github.io/%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E6%B3%95%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%BB%8E%E9%98%85%E8%AF%BB%E5%88%B0%E5%86%99%E4%BD%9C-%E7%94%B3%E5%85%8B%E9%98%BF%E4%BC%A6%E6%96%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E6%B3%95%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%BB%8E%E9%98%85%E8%AF%BB%E5%88%B0%E5%86%99%E4%BD%9C-%E7%94%B3%E5%85%8B%E9%98%BF%E4%BC%A6%E6%96%AF/</guid><description>元数据 [!abstract] 卡片笔记写作法：如何实现从阅读到写作
书名： 卡片笔记写作法：如何实现从阅读到写作 作者： 申克·阿伦斯 简介： 卢曼的“盒中笔记”通常很简短，因为这些只是他庞大繁杂研究中的索引，等需要时，他会借由这些线头进行延伸思考，然后不断链接知识要点，从而形成自己的知识树。你也可以试试。 出版时间 2021-06-01 00:00:00 ISBN： 9787115564672 分类： 文学-语言文字 出版社： 人民邮电出版社 高亮划线 中文版序 📌 卡片盒笔记法——关联的、分散的、自下而上的方法不仅比一些教育者们所推崇的线性的、自上而下的方法更为自然，而且衍生出了诸多写作及笔记记录工具。 ^5-996-1066 ⏱ [[2022-03-08]] 01:06 推荐序三 用卡片笔记积累你的知识复利 📌 重要的不是记录，而是更好地思考 ^8-955-970 ⏱ [[2022-05-07]] 21:21 第一章 绪论 📌 对成功人士的研究一再证明，成功不是源于强大的意志力和克服阻力的能力，而是源于高明的工作环境事先避免了阻力 ^11-9218-9270 ⏱ [[2022-03-08]] 01:44 📌 其实，你没有必要建立一个复杂的系统，也没有必要重新组织你已经拥有的一切。你可以通过记卡片盒笔记的方法立即开始工作，并完善自己的想法。 ^11-2926-2992 ⏱ [[2022-07-17]] 19:58 关于写作，你需要做的 📌 撰写论文的步骤1.</description></item><item><title>卧底间谍用摩斯码是真的吗</title><link>https://clickear.github.io/%E5%8D%A7%E5%BA%95%E9%97%B4%E8%B0%8D%E7%94%A8%E6%91%A9%E6%96%AF%E7%A0%81%E6%98%AF%E7%9C%9F%E7%9A%84%E5%90%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8D%A7%E5%BA%95%E9%97%B4%E8%B0%8D%E7%94%A8%E6%91%A9%E6%96%AF%E7%A0%81%E6%98%AF%E7%9C%9F%E7%9A%84%E5%90%97/</guid><description>[[摩尔斯电码]]
我的加密方法 小鹤双拼，2 字母 = 1 中文字。混加常见的英文缩写。比如 I C U = I see you，2=to ，4=for。</description></item><item><title>原则：应对变化中的世界秩序-瑞·达利欧</title><link>https://clickear.github.io/%E5%8E%9F%E5%88%99%E5%BA%94%E5%AF%B9%E5%8F%98%E5%8C%96%E4%B8%AD%E7%9A%84%E4%B8%96%E7%95%8C%E7%A7%A9%E5%BA%8F-%E7%91%9E%E8%BE%BE%E5%88%A9%E6%AC%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8E%9F%E5%88%99%E5%BA%94%E5%AF%B9%E5%8F%98%E5%8C%96%E4%B8%AD%E7%9A%84%E4%B8%96%E7%95%8C%E7%A7%A9%E5%BA%8F-%E7%91%9E%E8%BE%BE%E5%88%A9%E6%AC%A7/</guid><description>元数据 [!abstract] 原则：应对变化中的世界秩序
书名： 原则：应对变化中的世界秩序 作者： 瑞·达利欧 简介： 自然界的发展是有规律的，而任何事物都按其固有的轨迹运行。人们能够用一定的方法去认识它、体验它、并按照客观规律改造它。从《原则》《债务危机》到《原则：应对变化中的世界秩序》，桥水投资公司创始人瑞·达利欧的研究角度涉及个体、组织、社会和世界。他想揭示的是个体的生活和工作原则、组织机构的运转原则、国家和社会的兴衰原则、世界秩序的变化原则。在这本书中，瑞·达利欧探究的是社会和世界的运行规律和原则，他考察了500年财富和权力的所有重大变化背后反复出现的模式和因果关系。他认为在这些变化背后存在着永恒普适的规律。通过考察许多相互关联的历史事件，可以看到这些变化的典型模式、规律、周期和因果关系，并以此为基础推断未来。达利欧认为，历史通常也是通过相对明确的生命周期、随着一代人向下一代人的过渡而逐步演进的。目前相对财富、权力和世界秩序正在发生典型的巨变，这将对所有国家的每个人都产生深远的影响……这本书的分析和探究建立在达利欧独创的债务大周期、历史大周期的基础之上，揭示的是变化背后的永恒和普遍的力量，以此展望未来，搞清世界的运行原理，总结出永恒普适的原则，从而妥善地应对当前形势。 出版时间 2022-01-01 00:00:00 ISBN： 9787521719499 分类： 经济理财-财经 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>原谅我红尘颠倒-慕容雪村</title><link>https://clickear.github.io/%E5%8E%9F%E8%B0%85%E6%88%91%E7%BA%A2%E5%B0%98%E9%A2%A0%E5%80%92-%E6%85%95%E5%AE%B9%E9%9B%AA%E6%9D%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8E%9F%E8%B0%85%E6%88%91%E7%BA%A2%E5%B0%98%E9%A2%A0%E5%80%92-%E6%85%95%E5%AE%B9%E9%9B%AA%E6%9D%91/</guid><description>元数据 [!abstract] 原谅我红尘颠倒
书名： 原谅我红尘颠倒 作者： 慕容雪村 简介： 律师是一个阴险的行当，身处其中，每个人都会变得居心叵测。什么叫律师？三个字：蒙、乖、装！在当事人面前，蒙！在法官面前，乖！在人民群众面前，装！做交易不能讲人情，讲人情不能做交易;宁可得罪亲爹，绝不得罪法官。混够年头，有足够案源，就可以当老板，否则要么当学徒，拿微薄薪水，要么当个体户，忍气吞声受老板剥削。律师以维护当事人权益为天职，其实自己的权益也没有保障。其实法官也挺可怜，专业跟律师一样，干活比律师还多，收入最多只有律师的十分之一。所以律师和法官是一对天生矛盾，谁也瞧不上谁，谁也离不开谁。这是个残酷的职业，一小撮坏人赚走了绝大多数的钱，剩下的人只能勒腰扎脖硬挨。坏事做绝，功成名就，只要尚有一丝天良，那就永无出头之日。所谓律师讼棍，实是人面豺狼。 出版时间 2008-10-01 00:00:00 ISBN： 9787545300932 分类： 文学-经典作品 出版社： 珠海出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>参考</title><link>https://clickear.github.io/%E7%BC%93%E5%AD%98%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%BC%93%E5%AD%98%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7/</guid><description>缓存的作用 [!TIP] 缓存的作用💡
引用缓存，是为了提供查询性能。在redis和数据库中，就会存在不一致的场景。
由于并发问题，2个线程可能对同一条数据进行并发修改。即 写缓存的操作不可行。 演进过程 首先，先不考虑执行失败的场景。 由于并发问题，2个线程可能对同一条数据进行并发修改。即 写缓存的操作不可行。只能改用删除缓存的方式。即AB线程的更新缓存顺序不一定一致。 删除缓存 先删除缓存，在更新数据库
当发生「读+写」并发时，还是存在数据不一致的情况。 先更新数据库，在删除缓存（基本能认为数据一致）但是有个主从同步问题。 依旧是 2 个线程并发「读写」数据：</description></item><item><title>参考文献</title><link>https://clickear.github.io/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid><description>[[§ 算法目录#排序算法]]
常青笔记 如何突破O(N2)?核心思想，其实就是必须执行一些比较, 交换相隔比较远的元素, 使得一次交换能消除一个以上的逆序, 希尔, 快排, 堆排等等算法都是交换比较远的元素。 插入排序: 插入排序(每次插入到排好序的位置) &amp;ndash;&amp;gt; 希尔排序(改进版的插入排序，先进行相隔较远的元素进行排序，一次比较消除多次逆序) 选择排序: 直接选择排序(每次选择最小的，稳定的N2) &amp;ndash;&amp;gt; 堆排序 交换排序: 冒泡排序 &amp;ndash;&amp;gt; 快速排序 归并排序 基数排序、桶排序</description></item><item><title>参考资料</title><link>https://clickear.github.io/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F/</guid><description>::我的理解 [!NOTE] 笔记
类加载子系统，主要的作用就是将class文件，加载到内存中。解析、初始化数据，相应放到方法区，常量区。最终生成虚拟机可以使用的JVA类型。方便后续配合程序计数器执行。这里的描述，简化了一些细节，比如校验，初始化等步骤。
准确概述 Java虚拟机把描述类的数据从Class文件加载到内存，并对数据进行校验、准备、转换解析和初始化，最终形成可以被虚拟机直接使用的Java类型，这就是虚拟机的加载机制。Class文件由类装载器装载后，在JVM中将形成一份描述Class结构的元信息对象，通过该元信息对象可以获知Class的结构信息：如构造函数，属性和方法等，Java允许用户借由这个Class相关的元信息对象间接调用Class对象的功能,这里就是我们经常能见到的Class类。
[[类的生命周期]]
类的加载过程 详细版本:
[[加载]]
将class文件加载到内存 将静态数据结构转化成方法区中运行时的数据结构 在堆中生成一个代表这个类的 java.</description></item><item><title>双亲委派机制</title><link>https://clickear.github.io/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%9C%BA%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%9C%BA%E5%88%B6/</guid><description>::我的理解 本质上，就是对类的加载顺序的问题。好处在于
避免类的重复加载。 [!NOTE] 笔记
避免类的重复加载，JVM中区分不同类，不仅仅是根据类名，相同的class文件被不同的ClassLoader加载就属于两个不同的类（比如，Java中的Object类，无论哪一个类加载器要加载这个类，最终都是委派给处于模型最顶端的启动类加载器进行加载，如果不采用双亲委派模型，由各个类加载器自己去加载的话，系统中会存在多种不同的Object类）
保护程序安全，防止核心API被随意篡改 [!NOTE] 笔记
保护程序安全，防止核心API被随意篡改，避免用户自己编写的类动态替换 Java的一些核心类，比如我们自定义类：java.lang.String</description></item><item><title>反向链接可以用来隐式定义知识管理系统中的节点</title><link>https://clickear.github.io/%E5%8F%8D%E5%90%91%E9%93%BE%E6%8E%A5%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E9%9A%90%E5%BC%8F%E5%AE%9A%E4%B9%89%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%8D%E5%90%91%E9%93%BE%E6%8E%A5%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E9%9A%90%E5%BC%8F%E5%AE%9A%E4%B9%89%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid><description>%%我的理解:: 卧槽，这不就是我在[[obsidian 是可以用一辈子不换的笔记软件吗]]提到的，用双链不断挖坑，并随着时间推移，有用的坑会自然而然被填上的神奇效果嘛。以及另一个效果就是把双向链接当标签使用：点开这个链接的时候，没有内容，但是可以从反向链接面板中看到引用了这个链接的所有页面。%%
显示节点反向链接的系统，使得一种新式行为成为可能：为定义新节点，也可以从其外延（extensionally）（而非其内涵（intensionally））出发，在其他节点建立指向这个节点的链接——这个节点甚至可以没有任何内容。（外延，一个想法或（语言）表达的外延由它所适用于的事物构成；）
在 Conor White-Sullivan 使用 Roam Research 时的行为中，我第一次注意到这一点。他在整个系统中的几个笔记里都提及了我们的对话（临时性的每日日志、功能列表等）。他每次都把某些名词短语（例如我的名字）写成了链接。这些节点本身没有内容，但随着他在几天内都这样行事，这些节点开始在他的系统中形成了以反向链接为载体的隐式定义。
实现这种效果需要[[上下文反向链接]]：单纯的反向链接列表对于隐式定义节点不够有效。能查看反向链接的上下文是有必要的，因为需要理解暗指的内容。
我发现这种隐式定义对艺术术语和各种专有名词特别有用。
我也在我的烹饪笔记中试验这种技术；例如 卷心菜这则笔记（但不幸的是，这则笔记在我的公共笔记中不会显示反向链接，因为它们来自我的私人周记）。</description></item><item><title>反脆弱：从不确定性中获益-纳西姆·尼古拉斯·塔勒布</title><link>https://clickear.github.io/%E5%8F%8D%E8%84%86%E5%BC%B1%E4%BB%8E%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E4%B8%AD%E8%8E%B7%E7%9B%8A-%E7%BA%B3%E8%A5%BF%E5%A7%86%E5%B0%BC%E5%8F%A4%E6%8B%89%E6%96%AF%E5%A1%94%E5%8B%92%E5%B8%83/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%8D%E8%84%86%E5%BC%B1%E4%BB%8E%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E4%B8%AD%E8%8E%B7%E7%9B%8A-%E7%BA%B3%E8%A5%BF%E5%A7%86%E5%B0%BC%E5%8F%A4%E6%8B%89%E6%96%AF%E5%A1%94%E5%8B%92%E5%B8%83/</guid><description>元数据 [!abstract] 反脆弱：从不确定性中获益
书名： 反脆弱：从不确定性中获益 作者： 纳西姆·尼古拉斯·塔勒布 简介： 丹尼尔·卡尼曼、赵汀阳、姜奇平、叶檀、胡泳、涂子沛、罗振宇、秦朔、刘建位盛赞推荐，“这本书应该出现在每一个有思想的人的书架上！”畅销书《黑天鹅》作者、当代最杰出思想家塔勒布将《反脆弱》一书视为毕生杰作，继“黑天鹅”之后，塔勒布大胆提出并定义了“反脆弱”一词，正在掀起一场社会思想的重大革命，他主张：脆弱的反义词不是坚强，而是“反脆弱”。既然黑天鹅事件无法避免，那就想办法从中获取最大利益！ 出版时间 2013-12-13 00:00:00 ISBN： 9787508643335 分类： 个人成长-人生哲学 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>反野、开龙与逼团</title><link>https://clickear.github.io/%E5%8F%8D%E9%87%8E%E5%BC%80%E9%BE%99%E4%B8%8E%E9%80%BC%E5%9B%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%8D%E9%87%8E%E5%BC%80%E9%BE%99%E4%B8%8E%E9%80%BC%E5%9B%A2/</guid><description>就算双方实力均衡。为什么说占据了龙坑视野的一方，也可以开龙？提前占据到的视野，有什么实际上的优势。[[打团先手与后手]]</description></item><item><title>发育路</title><link>https://clickear.github.io/%E5%8F%91%E8%82%B2%E8%B7%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%91%E8%82%B2%E8%B7%AF/</guid><description/></item><item><title>变形记-卡夫卡</title><link>https://clickear.github.io/%E5%8F%98%E5%BD%A2%E8%AE%B0-%E5%8D%A1%E5%A4%AB%E5%8D%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%98%E5%BD%A2%E8%AE%B0-%E5%8D%A1%E5%A4%AB%E5%8D%A1/</guid><description>元数据 [!abstract] 变形记
书名： 变形记 作者： 卡夫卡 简介： “早上醒来，我发现自己变成了一只甲虫。震惊、挣扎、自责、悔恨，却没人在乎。”格里高尔原本是家中的财务支柱，照顾父母和妹妹。而这一天早上发生的事却改变了一切：他身为甲虫的模样吓走了来催他去工作的上级。失去了工作能力和人的形象后，家人的态度也大为转变。他无法与人沟通，却保留了人类的情感，在巨大的孤独中，他默默地审视这个世界……他的世界的确全变了，而世界本身似乎就是如此。《变形记》用一则荒诞的寓言，关照着人在现代社会中的异化。 出版时间 2020-11-13 00:00:00 ISBN： 9787213097553 分类： 文学-外国文学 出版社： 浙江人民出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>古龙作品大全集（72册）-古龙</title><link>https://clickear.github.io/%E5%8F%A4%E9%BE%99%E4%BD%9C%E5%93%81%E5%A4%A7%E5%85%A8%E9%9B%8672%E5%86%8C-%E5%8F%A4%E9%BE%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%A4%E9%BE%99%E4%BD%9C%E5%93%81%E5%A4%A7%E5%85%A8%E9%9B%8672%E5%86%8C-%E5%8F%A4%E9%BE%99/</guid><description>元数据 [!abstract] 古龙作品大全集（72册）
书名： 古龙作品大全集（72册） 作者： 古龙 简介： 史上值得收藏的古龙文集，大陆合法授权华丽新版。囊括《小李飞刀》系列、《楚留香新传》四部曲、《陆小凤传奇》七部曲、《七种武器》四部曲，以及《萧十一郎》《火并萧十一郎》！作为当代华语文坛罕有的大师，古龙的作品是真正深入街头巷尾的文学经典。古龙的小说创造性地将戏剧、推理、诗歌等元素带入传统武侠，又将自己独特的人生哲学融入其中，阐述其对中国社会的独特洞见，将武侠小说引入了经典文学的殿堂。小李飞刀、陆小凤、楚留香等众多形象，早已成为当代中国人精神生活的重要角色。一句“人在江湖，身不由己”，流传之广，几乎成为中国人常见的口头禅，对当代中国人的价值观产生了深远的影响。 出版时间 2013-04-01 00:00:00 ISBN： 9787807657613 分类： 精品小说-武侠经典 出版社： 河南文艺出版社 高亮划线 彩环曲(47) 📌 柳鹤亭沉声道：“但我们相逢甚是偶然，直到今日……唉！”头也不抬，缓缓将这一段离奇的邂逅，痛苦地说了出来。 ^1897-0-52 ⏱ [[2022-06-09]] 17:54 读书笔记 本书评论</description></item><item><title>只有男科医生知道-@成都下水道</title><link>https://clickear.github.io/%E5%8F%AA%E6%9C%89%E7%94%B7%E7%A7%91%E5%8C%BB%E7%94%9F%E7%9F%A5%E9%81%93-%E6%88%90%E9%83%BD%E4%B8%8B%E6%B0%B4%E9%81%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%AA%E6%9C%89%E7%94%B7%E7%A7%91%E5%8C%BB%E7%94%9F%E7%9F%A5%E9%81%93-%E6%88%90%E9%83%BD%E4%B8%8B%E6%B0%B4%E9%81%93/</guid><description>author: @成都下水道 category: 医学健康-健康 cover: https://wfqqreader-1252317822.image.myqcloud.com/cover/217/23691217/t7_23691217.jpg isbn: lastReadDate: 2022-08-17 publisher: 北京凤凰联动图书发行有限公司 tags: weread 元数据 [!abstract] 只有男科医生知道
书名： 只有男科医生知道 作者： @成都下水道 简介： 本文作者网络大V、著名的段子手、逗逼、资深网红医生@成都下水道 二十多年的从医临床经验，使得他比男人更了解男人，被誉为“中国最有影响力的男科医生”，他用手术刀治疗的是男人肉体的疾病，用文字之刀剔除的男人灵魂的瑕疵！这次他在嬉笑怒骂，以幽默风趣的文笔解剖男人遇到的各种“敏感”问题，如：阳痿早泄、包皮、手瘾、提高性高潮、前列腺等等。本来严肃、枯燥的医疗问题，在作者的笔下变得通俗易懂，有趣好玩，可读性更强。使得男士必想拥有，女士想窥视其内容的经典作品。 出版时间 2018-12-01 00:00:00 ISBN： 分类： 医学健康-健康 出版社： 北京凤凰联动图书发行有限公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>可执行的写作策略</title><link>https://clickear.github.io/%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%9A%84%E5%86%99%E4%BD%9C%E7%AD%96%E7%95%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%9A%84%E5%86%99%E4%BD%9C%E7%AD%96%E7%95%A5/</guid><description>%%我的理解:: [[自下而上]]进行创作。再也不想回到当初没有一类，几乎从0开始写硕士毕业论文的时候了。以后要写长文，至少要保证一大半内容都能从自己的知识库里，找到类似的卡片笔记。无痛且快乐的写作，就是将平时的积累，串起来，就像和好朋友聊天一样轻松且自然。%%
Thoughts Memo 汉化组译制
原文： Executable strategy for writing (andymatuschak.org)
年轻的作者，会从全新的白纸开始他们的写作，脑海里只有一个粗略轮廓。这样的开端，需要大量的能量激活大脑，付出大量的努力在认知上：没有任何外在之物可怙可峙，你必须在自己的脑海里摆弄所有文章片段的雏形。
相比之下，如果你已经围绕一个主题写了很多面向概念的[[常青笔记]]，借此创作，过程会更像「编辑」，而不是「写作」。你可以对笔记标题洗牌，得到一个大纲，再为缺失部分找来材料写笔记，并将它们编辑组合为一个完整的叙事。事实上，因为你可以[[在写作时创建推测性大纲]]，你可能会发现第一步的大纲也已经完成了。而且每篇笔记本身写起来并不难：[[常青笔记实现顺畅而渐进的写作（「渐进写作」）]]。
你的任务不再是「给第一章写一份大纲」，而是类似「找到和主题可能相关的笔记」。每一步做起来都容易，这是可执行的策略（见[[可执行的策略]]）。但要注意——不要让这个策略「毒害」第一步的笔记写作过程：[[默认面对自己写笔记，不要考虑有读者]]。
我在此描述两种方法：一种是非定向版本 —— 你写作的项目从日常工作中有机地涌现；另一种是定向版本，即你有具体的写作目标。</description></item><item><title>可重复读</title><link>https://clickear.github.io/%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB/</guid><description>不可重复读/脏读不可能，幻读可能。[[innodb]]是通过[[间隙锁]]来解决的。
[!TIP] 如何实现？💡
通过[[MVCC]],同一个事务中的第一个快照读才会创建[[readview]], 之后的快照读获取的都是同一个Read View
可重复读的隔离级别下使用了MVCC机制，select操作不会更新版本号，是快照读（历史版本）
insert、update和delete会更新版本号，是当前读（当前版本）
要避免幻读可以用[[间隙锁]]在Session 下面执行update acc ount se t name =&amp;lsquo;zhuge&amp;rsquo;
where i d&amp;gt; 10and id&amp;lt;= 20;，则其他Session没法插入这个范围内的数据</description></item><item><title>史蒂夫·乔布斯传-沃尔特·艾萨克森</title><link>https://clickear.github.io/%E5%8F%B2%E8%92%82%E5%A4%AB%E4%B9%94%E5%B8%83%E6%96%AF%E4%BC%A0-%E6%B2%83%E5%B0%94%E7%89%B9%E8%89%BE%E8%90%A8%E5%85%8B%E6%A3%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%B2%E8%92%82%E5%A4%AB%E4%B9%94%E5%B8%83%E6%96%AF%E4%BC%A0-%E6%B2%83%E5%B0%94%E7%89%B9%E8%89%BE%E8%90%A8%E5%85%8B%E6%A3%AE/</guid><description>元数据 [!abstract] 史蒂夫·乔布斯传
书名： 史蒂夫·乔布斯传 作者： 沃尔特·艾萨克森 简介： 史蒂夫·乔布斯是一位极具创造力的企业家，史蒂夫·乔布斯有如过山车般精彩的人生和犀利激越的性格，充满追求完美和誓不罢休的激情，史蒂夫·乔布斯创造出个人电脑、动画电影、音乐、手机、平板电脑以及数字出版等6大产业的颠覆性变革。史蒂夫·乔布斯的个性经常让周围的人愤怒和绝望，但其所创造出的产品也与这种个性息息相关，全然不可分割的，正如苹果的硬件和软件一样。两年多的时间，与史蒂夫·乔布斯40多次的面对面倾谈…… 出版时间 2011-10-01 00:00:00 ISBN： 9787508630069 分类： 人物传记-财经人物 出版社： 中信出版社 高亮划线 读书笔记 第三十七章 iPad 划线评论 📌 在最后一张幻灯片中，一个路牌上标识着“科技”与“人文”两条街的交汇口。乔布斯着重阐述了其人生的一个理念，这一理念也在iPad身上得到了体现。“苹果之所以能够创造出iPad这样的产品，是因为我们一直努力融合科技和人文艺术。”他总结道。iPad是《全球概览》的电子化身，在这里，创意与实用工具相遇 ^10500316-7zVDWXgRC 💭 站在科技与人文的十字路口的出处。 ⏱ [[2022-06-11]] 09:37 本书评论</description></item><item><title>史蒂夫·乔布斯传（2014修订版）-沃尔特·艾萨克森</title><link>https://clickear.github.io/%E5%8F%B2%E8%92%82%E5%A4%AB%E4%B9%94%E5%B8%83%E6%96%AF%E4%BC%A02014%E4%BF%AE%E8%AE%A2%E7%89%88-%E6%B2%83%E5%B0%94%E7%89%B9%E8%89%BE%E8%90%A8%E5%85%8B%E6%A3%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%B2%E8%92%82%E5%A4%AB%E4%B9%94%E5%B8%83%E6%96%AF%E4%BC%A02014%E4%BF%AE%E8%AE%A2%E7%89%88-%E6%B2%83%E5%B0%94%E7%89%B9%E8%89%BE%E8%90%A8%E5%85%8B%E6%A3%AE/</guid><description>元数据 [!abstract] 史蒂夫·乔布斯传（2014修订版）
书名： 史蒂夫·乔布斯传（2014修订版） 作者： 沃尔特·艾萨克森 简介： 史蒂夫·乔布斯有如过山车般精彩的人生和炽热激越的性格成就了一个传奇，一个极具创造力的企业领袖，他追求完美和誓不罢休的激情使个人电脑、动画电影、音乐、手机、平板电脑以及数字出版等六大产业发生了颠覆性变革。2011年，《史蒂夫·乔布斯传》出版；在两年后的今天，我们又推出了修订版。在原有《乔布斯传》的基础上，修订了全部译文，采纳了读者对翻译的众多建议，使得整体译文更加完善，更加精良。此外，修订版一大亮点是新增补作者亲自撰写的后记，描述了乔布斯去世后的相关过程，包括葬礼等，对读者有新的吸引点，也更完美了此部经典著作。 出版时间 2014-03-01 00:00:00 ISBN： 9787508643298 分类： 人物传记-财经人物 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>同名同姓受害者协会-下村敦史</title><link>https://clickear.github.io/%E5%90%8C%E5%90%8D%E5%90%8C%E5%A7%93%E5%8F%97%E5%AE%B3%E8%80%85%E5%8D%8F%E4%BC%9A-%E4%B8%8B%E6%9D%91%E6%95%A6%E5%8F%B2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%90%8C%E5%90%8D%E5%90%8C%E5%A7%93%E5%8F%97%E5%AE%B3%E8%80%85%E5%8D%8F%E4%BC%9A-%E4%B8%8B%E6%9D%91%E6%95%A6%E5%8F%B2/</guid><description>元数据 [!abstract] 同名同姓受害者协会
书名： 同名同姓受害者协会 作者： 下村敦史 简介： 你有没有在网上搜索过自己的名字？你有没有想过，自己会因为名字，成为全网追杀的猎物？一起震惊全国的惨案，幼女被连捅二十八刀。凶手的身份保密，名字却遭到泄露——大山正纪。一夜之间，只要与大山正纪同名同姓，就被怀疑为凶手，甚至沦为肆意泄愤的对象。从社交网络到现实世界，他们被逼入绝境，无处可逃。 便利店店员、足球界希望之星、萌图绘画爱好者……为了夺回正常的人生，十位“大山正纪”秘密结盟，发誓要查明凶手的真身。他们渐渐发现，每一位看似普通的“大山正纪”，都怀揣着不可告人的秘密。而那桩看似水落石出的惨案，实则另有隐情。 出版时间 2022-03-30 00:00:00 ISBN： 9787549637270 分类： 精品小说-悬疑推理 出版社： 上海文汇出版社 高亮划线 33 📌 “是啊，你说得对。可一味怨恨名字，总拿自己当受害者，就免不了看什么都往坏处想。这才是偏见吧？比如表白被拒绝了，不管对方怎么解释，都怀疑是因为名字。要是被朋友冷落了，就算朋友说是太忙了，还是怀疑是因为名字。试镜没选上呢，也不觉得是自己能力不够，一样怀疑是因为名字。升不了职，评价不如别人好，这不就是什么事都赖名字吗？” ^37-5096-5254 ⏱ [[2022-05-06]] 21:48 读书笔记 6 划线评论 📌 “你知道无罪推定原则吗？那个人目前只是被捕，就还是无罪。媒体却咬定被捕就等于是凶手，民众也跟着相信，跟着骂人。他要是被冤枉的，可就没得挽回了。就算查明他是无辜的——”他用食指和拇指比了个小缝，“媒体也只会拿出这么丁点儿大的地方，登篇报道，订正，道歉，了事了。” ^10500316-7z3vmMhcD 💭 的确不能提前就公布，这也不符合程序正义。哪怕只有1%的误伤可能性，从法律和传播角度看，对最后被冤枉的嫌疑人，都会带来无法挽回的终身伤害。 ⏱ [[2022-05-06]] 19:26 10 划线评论 📌 即使简历过关，接到面试，他也担心面试官会谈起“大山正纪的罪行”，时刻戒备，说话前言不搭后语。不予录用，不予录用，不予录用……每次被公司拒绝，他都会被自卑感折磨，好像他的人格也被彻底否定了。讽刺的是，如今想来，他能支撑下来也是名字的功劳。把问题都推到晦气的名字上，就可以忘记自己能力不足的事了。 ^10500316-7z3xb5gZA 💭 失败且深感无助时，有一个非人的事物可以怪罪，成为情绪的宣泄出口，也未尝不可。但是一定要有清醒的时刻，能深思并判断出这个事物，其实并非造成自己失败的原因，不然只会让自己变成一个疯狂找借口，从来不直面磨难的loser。 ⏱ [[2022-05-06]] 19:54 12 划线评论 📌 “我给女儿起了个我觉得挺可爱的名字，后来发现和AV女演员同名同姓，绝望了。我起名前怎么就没搜搜。” ^10500316-7z3xPHdSX 💭 啊这。在中国的话，这个情况就变得很有意思了，因为明面上，没有人会表现出认识这个名字。哈哈哈。 ⏱ [[2022-05-06]] 20:04 14 划线评论 📌 做研究的大山正纪语气冷静地说：“因为心灵受伤别人是看不到的。有时候除了明确的恶意，关心也会伤人，善意也会伤人，正义也会造成不自觉的伤害。这些大家是不会去想的。” ^10500316-7z3zEC38h 💭 虽然我们可能会无意识地，以关心的名义，不小心伤害到了朋友。但是这并不意味这我们就应该一直沉默寡言。如果人人都因为潜在的风险而不去表达，那最后社会就变成冷漠无情，处处提防，人人自危的社会了。 ⏱ [[2022-05-06]] 20:31 19 划线评论 📌 “我们这是正义的怒火！对吧？”眯缝眼的大山正纪问赞同者。那几个人毫不犹豫地点了头。做研究的大山正纪面露困惑之色：“怒火正义与否，由谁照什么标准来决定？我们沦落成今天这样，不就是被公众所谓的‘正义的怒火’逼的吗？”“这是两码事。”“所有人都觉得自己的怒火是正义之怒，合乎道义。这种想法很危险。”“你这意思是，我们错了？”蒜头鼻的大山正纪用刚学会的理论反驳，“别打压我们，说得好像因为无辜受牵连而发怒是什么愚昧的丑事似的。”“你这是曲解我的话。我没有打压你们。”“你不就在打压吗？”“你这样把我的话往坏处想，就说明你已经被负面情绪冲昏头脑，不够冷静了。”“什么负面情绪？这是他刚才说的正义的怒火吧。”“……本来，愤怒和仇恨是伴随罪恶感的。正因如此，人们泄愤时都想将其正当化。发完火，我们会忍不住找些理论或道德依据来正当化自己的行为，所以容易看不清本质。” ^10500316-7z3BDV0K6 💭 这段描写精彩啊。活生生的网络骂战重演。这里虽然发生在线下，但当今，这种现象，在网络论坛到处可见。其实如果缺少国家清朗运动等政策的舆论管控，我感觉现在看到的骂战帖子，应该会多十倍。 ⏱ [[2022-05-06]] 21:02 33 划线评论 📌 “一遇到不如意的事，就怪别人。‘就是因为我的名字吧’‘你对我有偏见吧’‘你歧视我吧’。会有人愿意和这种人来往吗？等对方疲于应付，疏远之后，再告诉自己‘他果然因为名字歧视我了’，去恨对方。就这么循环个没完。” ^10500316-7z3EHDLnz 💭 陷入永无止境的恶性循环 ⏱ [[2022-05-06]] 21:49 本书评论</description></item><item><title>后羿</title><link>https://clickear.github.io/%E5%90%8E%E7%BE%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%90%8E%E7%BE%BF/</guid><description/></item><item><title>周鸿祎自述：我的互联网方法论-周鸿祎</title><link>https://clickear.github.io/%E5%91%A8%E9%B8%BF%E7%A5%8E%E8%87%AA%E8%BF%B0%E6%88%91%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91%E6%96%B9%E6%B3%95%E8%AE%BA-%E5%91%A8%E9%B8%BF%E7%A5%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%91%A8%E9%B8%BF%E7%A5%8E%E8%87%AA%E8%BF%B0%E6%88%91%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91%E6%96%B9%E6%B3%95%E8%AE%BA-%E5%91%A8%E9%B8%BF%E7%A5%8E/</guid><description>元数据 [!abstract] 周鸿祎自述：我的互联网方法论
书名： 周鸿祎自述：我的互联网方法论 作者： 周鸿祎 简介： 360老总周鸿祎内心独白！在本书中，周鸿祎首次讲述了自己的互联网观、产品观和管理思想，厘清了互联网产品的本质特征和互联网时代的新趋势，列举了颠覆式创新在现实中的实践和应用。本书首次解密360的产品秘籍和盈利模式，同时，针对目前传统企业的互联网转型焦虑，也提出了一套系统解决方案。 出版时间 2014-07-01 00:00:00 ISBN： 9787508646626 分类： 经济理财-商业 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>囚徒健身：用失传的技艺练就强大的生存实力-保罗·威德</title><link>https://clickear.github.io/%E5%9B%9A%E5%BE%92%E5%81%A5%E8%BA%AB%E7%94%A8%E5%A4%B1%E4%BC%A0%E7%9A%84%E6%8A%80%E8%89%BA%E7%BB%83%E5%B0%B1%E5%BC%BA%E5%A4%A7%E7%9A%84%E7%94%9F%E5%AD%98%E5%AE%9E%E5%8A%9B-%E4%BF%9D%E7%BD%97%E5%A8%81%E5%BE%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9B%9A%E5%BE%92%E5%81%A5%E8%BA%AB%E7%94%A8%E5%A4%B1%E4%BC%A0%E7%9A%84%E6%8A%80%E8%89%BA%E7%BB%83%E5%B0%B1%E5%BC%BA%E5%A4%A7%E7%9A%84%E7%94%9F%E5%AD%98%E5%AE%9E%E5%8A%9B-%E4%BF%9D%E7%BD%97%E5%A8%81%E5%BE%B7/</guid><description>元数据 [!abstract] 囚徒健身：用失传的技艺练就强大的生存实力
书名： 囚徒健身：用失传的技艺练就强大的生存实力 作者： 保罗·威德 简介： 这不是一本教你练出“可爱肌肉”的书，而是一本教你练出能用的力量、极限的力量、生存的力量的书。作者保罗?威德在美国最严酷的监狱中度过了19年，在其中逐渐挖掘出了一套最古老的健身法，在商业社会中早已失传的力量哲学，并凭此成为了地球上最强壮的人之一——这让他得以有尊严地生存下来。出狱之后，他把这套失传的技艺整理并公之于世——这是他带给我们的最珍贵礼物 出版时间 2013-10-01 00:00:00 ISBN： 9787530467558 分类： 生活百科-体育 出版社： 北京科学技术出版社有限公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>回表</title><link>https://clickear.github.io/%E5%9B%9E%E8%A1%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9B%9E%E8%A1%A8/</guid><description>普通索引，叶子节点存储的是主键值。如果要查询出数据，需要根据主键索引在查询一次，称为回表</description></item><item><title>团队管理</title><link>https://clickear.github.io/%E5%9B%A2%E9%98%9F%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9B%A2%E9%98%9F%E7%AE%A1%E7%90%86/</guid><description>团队 团队建设:
管理规划(看方向)、团队建设(带人)、任务管理(做事)
管理规划(看方向) 团队的目标是什么?需要系统的可扩展性、维护性？ 团队资源协调。向上沟通 带人（团队建设） 周会: 技术分享 + 每周问题反馈。review下周todolist。 团队的目标、规划等信息同步
复盘:。
case-study
能力模型:
技术业务 团队管理 沟通协作 人才培养 规划推进 团队的建设，依赖个人和团队。</description></item><item><title>围城-钱钟书</title><link>https://clickear.github.io/%E5%9B%B4%E5%9F%8E-%E9%92%B1%E9%92%9F%E4%B9%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9B%B4%E5%9F%8E-%E9%92%B1%E9%92%9F%E4%B9%A6/</guid><description>元数据 [!abstract] 围城
书名： 围城 作者： 钱钟书 简介： 《围城》，一部借婚恋故事做表皮，展现特定时期知识界病疮的社会讽刺小说。内容有趣，语言机智，笔锋犀利，意味深长，被誉为新《儒林外史》，其实，比之《儒林外史》，《围城》含纳的认识更明确，也更深刻，因此也更辛辣，更有现实意义。 出版时间 2018-04-18 00:00:00 ISBN： 9787020137374 分类： 文学-世界名著 出版社： 人民文学出版社 高亮划线 围城 📌 有人叫她“熟食铺子”（charcuterie），因为只有熟食店会把那许多颜色暖热的肉公开陈列；又有人叫她“真理”，因为据说“真理是赤裸裸的”。鲍小姐并未一丝不挂，所以他们修正为“局部的真理” ^10-3188-3283 ⏱ [[2022-06-11]] 09:42 读书笔记 本书评论</description></item><item><title>围城-钱锺书-22946457</title><link>https://clickear.github.io/%E5%9B%B4%E5%9F%8E-%E9%92%B1%E9%94%BA%E4%B9%A6-22946457/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9B%B4%E5%9F%8E-%E9%92%B1%E9%94%BA%E4%B9%A6-22946457/</guid><description>元数据 [!abstract] 围城
书名： 围城 作者： 钱锺书 简介： 钱钟书先生最经典的作品，也是仅有的一部长篇小说，堪称中国现代文学史上风格独特的讽刺经典，被誉为“新儒林外史”，自上世纪八十年代以来一直横贯常销、畅销小说之首。小说塑造了抗战初期以方鸿渐为主的一类知识分子群像，记叙了他们所面临的教育、婚姻和事业困境。虽然有具体的历史背景，但这部小说揭示的人群的弱点，在今天依然能引起人们的共鸣。著名文学评论家夏志清先生在《中国现代小说史》中认为，“《围城》比任何中国古典讽刺小说优秀”，称之为“中国现代文学史中写得最有趣、最细腻的小说，或许是最伟大的小说。” 出版时间 2017-07-01 00:00:00 ISBN： 9787020127894 分类： 文学-经典作品 出版社： 人民文学出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>在写作时创建推测性大纲</title><link>https://clickear.github.io/%E5%9C%A8%E5%86%99%E4%BD%9C%E6%97%B6%E5%88%9B%E5%BB%BA%E6%8E%A8%E6%B5%8B%E6%80%A7%E5%A4%A7%E7%BA%B2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9C%A8%E5%86%99%E4%BD%9C%E6%97%B6%E5%88%9B%E5%BB%BA%E6%8E%A8%E6%B5%8B%E6%80%A7%E5%A4%A7%E7%BA%B2/</guid><description>%%我的理解:: 大纲在此处类似于MOC。让[[MOC]]和[[TOC]]跟随自己笔记的成长而成长，不必在乎完备性，常青笔记本身就是不断发展的。而这些渐进式成长的MOC，就是将来某一时刻，成为某个主题写作时候的最好大纲参考。%%
Thoughts Memo 汉化组译制
原文： Create speculative outlines while you write (andymatuschak.org)
每写一条新笔记时，把它添加到你正在维护的一个或多个大纲中，有必要的话也可以创建新的大纲。非常完整的写作项目会自然从中涌现。
通常情况下，当我们开启一个写作项目时，我们会先列大纲。这迫使我们从一张空白页开始。相比之下，如果我们每天都写新的笔记，并留意它们之间的联系，这些笔记可以积累成潜在的写作项目。当感觉大纲「成熟 」时，我们就可以收获，把它变成手稿，这个过程不像从空白页开始写作那样需要付出巨大的努力才能启动。
将已经写好的笔记加入到大纲中是相对容易的：只要比对一下笔记，然后问自己：哪一个在前面？(Pirsig)</description></item><item><title>在细雨中呼喊（第3版）-余华</title><link>https://clickear.github.io/%E5%9C%A8%E7%BB%86%E9%9B%A8%E4%B8%AD%E5%91%BC%E5%96%8A%E7%AC%AC3%E7%89%88-%E4%BD%99%E5%8D%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9C%A8%E7%BB%86%E9%9B%A8%E4%B8%AD%E5%91%BC%E5%96%8A%E7%AC%AC3%E7%89%88-%E4%BD%99%E5%8D%8E/</guid><description>元数据 [!abstract] 在细雨中呼喊（第3版）
书名： 在细雨中呼喊（第3版） 作者： 余华 简介： 《在细雨中呼喊》是二十世纪九十年代的经典文本，是余华的第一部长篇力作。小说描述了一位江南少年的成长经历和心灵历程。《在细雨中呼喊》的结构来自于对时间的感受，确切地说是对记忆中的时间的感受，叙述者天马行空地在过去、现在和将来这三个时间维度里自由穿行，将忆记的碎片穿插、结集、拼嵌完整。 出版时间 2012-09-01 00:00:00 ISBN： 9787506365604 分类： 文学-经典作品 出版社： 作家出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>坏小孩（秦昊、王景春《隐秘的角落》原著）-紫金陈</title><link>https://clickear.github.io/%E5%9D%8F%E5%B0%8F%E5%AD%A9%E7%A7%A6%E6%98%8A%E7%8E%8B%E6%99%AF%E6%98%A5%E9%9A%90%E7%A7%98%E7%9A%84%E8%A7%92%E8%90%BD%E5%8E%9F%E8%91%97-%E7%B4%AB%E9%87%91%E9%99%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9D%8F%E5%B0%8F%E5%AD%A9%E7%A7%A6%E6%98%8A%E7%8E%8B%E6%99%AF%E6%98%A5%E9%9A%90%E7%A7%98%E7%9A%84%E8%A7%92%E8%90%BD%E5%8E%9F%E8%91%97-%E7%B4%AB%E9%87%91%E9%99%88/</guid><description>元数据 [!abstract] 坏小孩（秦昊、王景春《隐秘的角落》原著）
书名： 坏小孩（秦昊、王景春《隐秘的角落》原著） 作者： 紫金陈 简介： 秦昊、王景春主演网剧《隐秘的角落》原著， 多重伏笔，结局神逆转！“推理之王”紫金陈第2部！鹦鹉史航、马伯庸墙裂推荐！上门女婿隐忍数年，出轨人妻不幸全家丧命。这场精心谋划的连环杀人案，却被几个在远处玩耍的小孩无意中拍下。更让凶手没想到的是，这几个孩子却把他给设计了。自小父母离异，一直品学兼优，可父亲的新家庭却容不下他。面对亲人的遗弃，仇恨的种子在心中渐渐发芽……一连串停不下来的杀人计划，一场步步为营的惊人骗局，一个十四岁的孩子，如何拥有颠倒黑白的大逆转能力？又如何将友谊、亲情与爱情狠狠踩在脚下？超乎常人想象的“演技”和精心设计的完美诡计，他做了这么多，却只想拥有一个可以重新开始的明天。却没料到，忽略了一个人…… 出版时间 2018-07-01 00:00:00 ISBN： 9787540468422 分类： 精品小说-悬疑推理 出版社： 湖南文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>垃圾回收</title><link>https://clickear.github.io/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid><description>[!INFO] 提示
1.自动进行垃圾回收，这里的垃圾，是指内存中不在使用，进行自动释放的过程
2.垃圾回收，主要针对的是java中的堆。因为[[虚拟机栈]]，是进行出栈，入栈操作。一般直接就释放了。 [[程序计数器]]就一个指针，无需释放。[[本地方法栈]]，需要人工释放(我的理解，不确定)？ [[元数据区]]，是需要进行垃圾回收的。方法区主要回收废弃变量和废弃类。
3. [[垃圾收集器]] 和 [[垃圾回收算法]]
:: 我的理解 针对垃圾回收，最主要的就是定义什么是垃圾？
如果判断是垃圾？[[引用计数法]]和[[可达性分析]].不管是引用还是引用链，都和[[引用]] 有关，根据可收回的程度，来区分引用类型。
在判断了垃圾之后，就涉及到如果进行回收的问题。主要的步骤可以想到是，标记哪些是垃圾，然后进行清除。这就涉及到了[[垃圾回收算法]]。
垃圾回收，还有个finalize方法，这里不做引申。可能在finalize方法内复活等奇怪操作。
[引用计数法] 优点: 简单，效率高，回收延迟低</description></item><item><title>垃圾回收器性能指标</title><link>https://clickear.github.io/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/</guid><description>吞吐量: 用户代码时间/(用户代码执行时间 + 垃圾回收时间) 响应时间: STW越短，响应时间越好 所谓调优，首先确定，追求啥？吞吐量优先还是响应时间优先？
问题:
科学计算，吞吐量， 数据挖掘， thrput. 吞吐量优先的一般( PS + PO)
响应时间: 网站 GUI API (1.</description></item><item><title>垃圾回收算法</title><link>https://clickear.github.io/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95/</guid><description>::我的理解 要回收垃圾，可以想象。在一块内存区域中，首先进行标记，然后进行清除。
最简单的是，标记哪块是垃圾后，在清除阶段，直接标记回收掉。即[[标记清除法]]。内存不连续 标记后，进行复制。把有用的内存块，复制保存起来。即[[标记复制法]]，内存连续，但是需要复制操作，而且需要额外开辟一半内存空间进行保存。适用于 [[新生代]]，大部分对象，都是招生熄灭的场景。 标记后，不直接进行回收，而且将存活的对象进行整理到一边，然后回收对象在一起，进行回收。即[[标记整理法]] [!NOTE] 分代收集算法
当前虚拟机的垃圾收集都采用[[分代收集算法]]，这种算法没有什么新的思想，只是根据对象存活周期的不同将内存分为几块。一般将 java 堆分为新生代和老年代，这样我们就可以根据各个年代的特点选择合适的垃圾收集算法
[[分代收集算法]]：
[[新生代]]（招生熄灭）用[[标记复制法]]，把少量存活对下复现出来 [老年代]， 用[[标记整理法]]或者[[标记清除法]] [[增量收集算法]]， 待研究。是不是就是常用的垃圾收集器的实现？？待确认</description></item><item><title>垃圾收集器</title><link>https://clickear.github.io/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/</guid><description>::一图胜千言 ::我的理解 [!TIP] 技巧💡
[[新生代]]用[[标记复制法]]，老年代用[[标记整理法]]。
CMS 在小内存应用上的表现要优于 G1，而大内存应用上 G1 更有优势，大小内存的界限是6GB到8GB
[[Serial]](串行回收, 一条线程回收线程进行垃圾清理，清理需要暂停用户线程(即STW),
[Parallel]
[[ParallelNew]]（和Parallel基本一致，但是能和CMS配合使用）
[[CMS垃圾收集器]],老年代，(承上启下，低延迟，写屏障 + 增量更新)，第一次让垃圾收集线程和用户线程(基本上)同时工作，使用的是[[标记清除法]]</description></item><item><title>堆</title><link>https://clickear.github.io/%E5%A0%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A0%86/</guid><description>[!TIP] 技巧💡
堆，主要实例的数据，字符池常量(JDK1.6后，迁移到堆中。数据量大，不适合放在永久代)，也是[[垃圾回收]]的重点。
堆内存模型 几乎所有的Java对象都是在Eden区被new出来的。放不下的，放老年区。 Java 堆区可以划分为[[新生代]]和[[老年代]], 新生代又可以进一步划分为 Eden 区, Survivor 1 区, Survivor 2 区 对象分配策略 如果对象再Eden出生并经过第一次MinorGC后仍然存活，并且能被Survivor区容纳，则被移动到Survivor空间中，并将对象年龄设置为1，对象再Survivor区每熬过一次MinorGC，年龄就+1，当年龄增加到一定程度（默认为15，不同Jvm，GC都所有不同,对应虚拟机参数XX:+MaxTenuringThreshold）时，就会被晋升到老年代中。 优先分配到Eden，每个线程可以向 Java 虚拟机申请一段连续的内存，比如 2048 字节，作为线程私有的 TLAB（类比&amp;quot;私人车库&amp;quot;） 大对象直接分配到老年代（尽量避免程序中出现过多的大对象） 长期存活的对象分配到老年代 如果Survivor区中相同年龄的所有对象大小的总和大于Survivor空间的一半，年龄大于或等于该年龄的对象可以直接进入老年代，无需等到MaxTenuringThreshold中要求的年龄 GC分类 Minor GC/Young GC: 针对新生代的垃圾收集;</description></item><item><title>增量收集算法</title><link>https://clickear.github.io/%E5%A2%9E%E9%87%8F%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A2%9E%E9%87%8F%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95/</guid><description> [!TIP] 技巧💡
可以和[[分代收集算法]]进行比较。
每次垃圾收集线程只收集一小片区域的内存空间，接着切换到应用程序线程，依次反复，直到垃圾收集完成 通过对线程间冲突的妥善管理，允许垃圾收集线程以分阶段的方式完成标记、清理或复制工作 缺点: 线程和上下文切换导致系统吞吐量的下降</description></item><item><title>墨菲定律</title><link>https://clickear.github.io/%E5%A2%A8%E8%8F%B2%E5%AE%9A%E5%BE%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A2%A8%E8%8F%B2%E5%AE%9A%E5%BE%8B/</guid><description>个人理解 我的人体工学椅寄存在别人那，别人口头说可以帮忙看，但不承担责任。我担心丢了，结果1个月过去，果然丢了😭。
小概率事件，一段时间内。但多给点时间，小概率通过时间，累加成大概率。有点卷积的感觉，随着时间推进，不仅仅每时每刻都有发生的可能，而且概率也许越来越大。
指凡是可能出错的事有很大几率会出错，即任何一件事情，只要其发生的概率大于零，该事情总会（迟早）在某一时刻发生。启示人们做事情一方面要对错误保持平常心，一方面也要防微杜渐，不存侥幸。[最早源自 1949 年，美国空军上尉工程师 Edward A. Murphy 的对他的某位运气不太好的同事随口开的玩笑：“如果一件事有可能被做坏，让他去做就一定会更坏。”1992 年，由 Edward A. Murphy 正式提出。]
案例 1：嘟嘟觉得从下地铁到上高铁只需要 5 分钟，结果地铁安检排队花了 20 分钟，上楼候车大厅的上行电梯竟然也坏了（颇有屋漏偏逢连夜雨的感觉）。</description></item><item><title>外出时方便抓住灵感的口袋便笺</title><link>https://clickear.github.io/%E5%A4%96%E5%87%BA%E6%97%B6%E6%96%B9%E4%BE%BF%E6%8A%93%E4%BD%8F%E7%81%B5%E6%84%9F%E7%9A%84%E5%8F%A3%E8%A2%8B%E4%BE%BF%E7%AC%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%96%E5%87%BA%E6%97%B6%E6%96%B9%E4%BE%BF%E6%8A%93%E4%BD%8F%E7%81%B5%E6%84%9F%E7%9A%84%E5%8F%A3%E8%A2%8B%E4%BE%BF%E7%AC%BA/</guid><description>我用一个带孔的 A7 便笺（Maruman Mnemosyne N193A）来记录我外出时的临时笔记。谈话中获得的灵感、行走时的想法等等，都会记录于此处。我通常会附上一些背景，以帮助我以后确定方向：一个日期、一个地点、一个人，等等。
便笺并不是这些笔记的最终归宿：它实际上是一个收件箱，把信息提供给[[为临时性的和不完整的笔记设置写作收件箱]]。在[[我的晨间写作]]中，我断断续续地处理便笺上的笔记，把它们发展成[[常青笔记]]，把它们转移到我的写作收件箱中，或者把它们丢弃。
我在转移时会一边处理一边撕下纸张，所以我总是知道笔记本的状态：任何还保留在笔记本上的非空白的页面都是需要处理的。
每个想法都有自己的页面。这有助于我处理它们（[[常青笔记应该是原子化的]]）：一个好的谈话可能会产生半打便笺页，但每一个可能都需要非常不同的心理背景来处理。
我使用这本便笺来帮助我[[写你所读，以求内化]]。在阅读一本书时，我会把我发现的有趣的东西记录在便笺上。和以前一样，每个想法都写上一页，我还会标注页码和日期。
便笺很容易放在我的口袋里，塑料封面相当耐用，所以我一直都带着一个，还有一支笔。
采购 https://www.amazon.com/gp/product/B00T9CHYZO/ref=ppx_yo_dt_b_asin_title_o01_s00?ie=UTF8&amp;amp;psc=1（22.99 美元 / 10 个，使用 Prime 免运费）</description></item><item><title>多数人的阅读成效不大</title><link>https://clickear.github.io/%E5%A4%9A%E6%95%B0%E4%BA%BA%E7%9A%84%E9%98%85%E8%AF%BB%E6%88%90%E6%95%88%E4%B8%8D%E5%A4%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%9A%E6%95%B0%E4%BA%BA%E7%9A%84%E9%98%85%E8%AF%BB%E6%88%90%E6%95%88%E4%B8%8D%E5%A4%A7/</guid><description>%%我的理解:: 每每回想自己读书时期草草看过几百本书，却鲜有收获，就为自己那段耗费的时光痛心疾首，有那浪费的时间，多谈2个恋爱不香么。%%
Thoughts Memo 汉化组译制
原文： Most people read ineffectively (andymatuschak.org)
[[知识工作应能聚沙成塔]]，但阅读的时候，绝大多数成果都不能积累下来 [[人们似乎忘记了他们所读的大部分内容，而且他们大多没有注意到这一点]] [[常青笔记有助于积累阅读成果]]，但大多数人没有做常青笔记的习惯 即使对于做常青笔记的人来说，[[笔记写作实践大多是无效的]] 然而！[[我所认识的高效阅读者和思想家在阅读时不做笔记]] [[熟练的阅读一般都是非线性的]]，但大多数人的阅读过程是线性的 参考文献 Matuschak, A.</description></item><item><title>大多数人只写临时的笔记</title><link>https://clickear.github.io/%E5%A4%A7%E5%A4%9A%E6%95%B0%E4%BA%BA%E5%8F%AA%E5%86%99%E4%B8%B4%E6%97%B6%E7%9A%84%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%A7%E5%A4%9A%E6%95%B0%E4%BA%BA%E5%8F%AA%E5%86%99%E4%B8%B4%E6%97%B6%E7%9A%84%E7%AC%94%E8%AE%B0/</guid><description>%%我的理解:: 知识创作，要写常青笔记，不写临时笔记。平时场景，可能要写一些工作日志，充当工作台或暂时帮助记忆用的而已。%%
Thoughts Memo 汉化组译制
原文： Most people take only transient notes (andymatuschak.org)
与[[常青笔记]]相比，[[大多数人把笔记当作贮藏容器或思想草稿]]。这类笔记写起来很方便，但写了一年之后，他们只会有一堆杂乱无章的笔记。这些笔记不能聚沙成塔：更像是燃料，写完就丢，只为帮助作者处理他们当时的情形。
临时笔记是有价值的便笺纸，可以暂时支持工作记忆，但是[[知识工作应能聚沙成塔]]，所以我们应该把它们看作是「无序思考」的输入，以获得它们将产生的「有序思考」的笔记（Khoe）。
这就是[[笔记写作实践大多是无效的]]的原因之一。
参考文献 Khoe, M.</description></item><item><title>大多数人把笔记当作贮藏容器或思想草稿</title><link>https://clickear.github.io/%E5%A4%A7%E5%A4%9A%E6%95%B0%E4%BA%BA%E6%8A%8A%E7%AC%94%E8%AE%B0%E5%BD%93%E4%BD%9C%E8%B4%AE%E8%97%8F%E5%AE%B9%E5%99%A8%E6%88%96%E6%80%9D%E6%83%B3%E8%8D%89%E7%A8%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%A7%E5%A4%9A%E6%95%B0%E4%BA%BA%E6%8A%8A%E7%AC%94%E8%AE%B0%E5%BD%93%E4%BD%9C%E8%B4%AE%E8%97%8F%E5%AE%B9%E5%99%A8%E6%88%96%E6%80%9D%E6%83%B3%E8%8D%89%E7%A8%BF/</guid><description>%%我的理解:: 我以前的笔记就是如此，为了[[闭合开环]]，为了完成任务，为了当前。而不是[[增援未来]]。这不对。%%
Thoughts Memo 汉化组译制
原文： Most people use notes as a bucket for storage or scratch thoughts (andymatuschak.</description></item><item><title>大话数据结构-程杰</title><link>https://clickear.github.io/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%A8%8B%E6%9D%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%A8%8B%E6%9D%B0/</guid><description>元数据 [!abstract] 大话数据结构
书名： 大话数据结构 作者： 程杰 简介： 大话数据结构》为超级畅销书《大话设计模式》作者程杰潜心三年推出的扛鼎之作！以一个计算机教师教学为场景，讲解数据结构和相关算法的知识。通篇以一种趣味方式来叙述，大量引用了各种各样的生活知识来类比，并充分运用图形语言来体现抽象内容，对数据结构所涉及到的一些经典算法做到逐行分析、多算法比较。与市场上的同类数据结构图书相比，本书内容趣味易读，算法讲解细致深刻，是一本非常适合自学的读物。 出版时间 2011-06-01 00:00:00 ISBN： 9787302255659 分类： 计算机-编程设计 出版社： 清华大学出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>大败局（修订版）（套装共2册）-吴晓波</title><link>https://clickear.github.io/%E5%A4%A7%E8%B4%A5%E5%B1%80%E4%BF%AE%E8%AE%A2%E7%89%88%E5%A5%97%E8%A3%85%E5%85%B12%E5%86%8C-%E5%90%B4%E6%99%93%E6%B3%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%A7%E8%B4%A5%E5%B1%80%E4%BF%AE%E8%AE%A2%E7%89%88%E5%A5%97%E8%A3%85%E5%85%B12%E5%86%8C-%E5%90%B4%E6%99%93%E6%B3%A2/</guid><description>元数据 [!abstract] 大败局（修订版）（套装共2册）
书名： 大败局（修订版）（套装共2册） 作者： 吴晓波 简介： 一个个国内曾经最为著名的企业，突然在它们“花样年华”的日子里灰飞烟灭，轰然倒下，这背后，是怎样的故事？又是怎样的成败教训？两册《大败局》，记录了过去20年间发生在中国企业界的、最著名的19起失败案例，记录了一个时代所有的光荣、梦想与悲哀，并旨在探寻“中国式企业失败”的基因。《大败局Ⅰ》、《大败局Ⅱ》曾分别于2001年、2007年出版，以令人耳目一新的写作模式，开创了公司案例写作的新时代，在国内引起强烈反响，被评为“影响中国商业界的二十本图书”之一，被北大、中欧、复旦、浙大等多家国内知名的MBA教学机构选为学员必读的图书，被誉为“关于中国企业失败的MBA式教案”，畅销十年，国内累计销量突破百万，并输出了中文繁体字版、日文版、韩文版等多个语种版本。《大败局》（十周年纪念版）则新增了原书涉及企业和企业家的最新后续故事。十年过后，我们在往前冲的时候，也许该回头看看曾经的失败，因为，“所有商业上的兴衰都如出一辙”。曾经的这些有尊严的失败者，他们以自己的失败为代价，为我们留下了值得深思与珍藏的经验。 出版时间 2017-10-01 00:00:00 ISBN： 9787106078553 分类： 经济理财-管理 出版社： 浙江大学出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>天堂向左，深圳往右-慕容雪村</title><link>https://clickear.github.io/%E5%A4%A9%E5%A0%82%E5%90%91%E5%B7%A6%E6%B7%B1%E5%9C%B3%E5%BE%80%E5%8F%B3-%E6%85%95%E5%AE%B9%E9%9B%AA%E6%9D%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%A9%E5%A0%82%E5%90%91%E5%B7%A6%E6%B7%B1%E5%9C%B3%E5%BE%80%E5%8F%B3-%E6%85%95%E5%AE%B9%E9%9B%AA%E6%9D%91/</guid><description>元数据 [!abstract] 天堂向左，深圳往右
书名： 天堂向左，深圳往右 作者： 慕容雪村 简介： 亿万富豪横尸街头，浪荡公子遁入空门，老实人空守着一去不回的惊艳岁月。这是最好的时代，这是最坏的时代。诸神俱死，英雄凋谢，然而凡俗的生活依然有着最刻骨铭心的力量。这是一本虚妄之书。功业与理想，青春和爱情，最终都化为内心的虚无。所以寻找是最终的主题，天堂向左，深圳往右，你在中间。 出版时间 2009-01-01 00:00:00 ISBN： 9787807593782 分类： 精品小说-情感小说 出版社： 万卷出版公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>天谕手游</title><link>https://clickear.github.io/%E5%A4%A9%E8%B0%95%E6%89%8B%E6%B8%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%A9%E8%B0%95%E6%89%8B%E6%B8%B8/</guid><description>[[MMORPG]]</description></item><item><title>太乙真人</title><link>https://clickear.github.io/%E5%A4%AA%E4%B9%99%E7%9C%9F%E4%BA%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%AA%E4%B9%99%E7%9C%9F%E4%BA%BA/</guid><description/></item><item><title>失乐园-渡边淳一</title><link>https://clickear.github.io/%E5%A4%B1%E4%B9%90%E5%9B%AD-%E6%B8%A1%E8%BE%B9%E6%B7%B3%E4%B8%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%B1%E4%B9%90%E5%9B%AD-%E6%B8%A1%E8%BE%B9%E6%B7%B3%E4%B8%80/</guid><description>元数据 [!abstract] 失乐园
书名： 失乐园 作者： 渡边淳一 简介： 本书为渡边淳一情爱小说代表作，超级畅销书。本书讲述的是一场悲剧性的婚外恋，从一个侧面反映了都市生活和当代日本人的种种心态。作品情节生动曲折，真切感人，文字优美。本书在日本出版后曾长期雄踞畅销书排行榜榜首，改编成同名电影和电视剧上演后家喻户晓。 出版时间 2017-11-01 00:00:00 ISBN： 9787555257035 分类： 文学-经典作品 出版社： 青岛出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>失控-凯文·凯利</title><link>https://clickear.github.io/%E5%A4%B1%E6%8E%A7-%E5%87%AF%E6%96%87%E5%87%AF%E5%88%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%B1%E6%8E%A7-%E5%87%AF%E6%96%87%E5%87%AF%E5%88%A9/</guid><description>元数据 [!abstract] 失控
书名： 失控 作者： 凯文·凯利 简介： 凯文·凯利（1952~），绰号KK，世界著名科技杂志《连线》创始主编，“网络文化”（Cyberculture）的发言人和观察者，第一届世界黑客大会发起者。1994年，其预言未来科技发展的传奇著作《失控》横空出世，十几年后，文中所指相继出现，2010年，《失控》中文版问世，即在中国互联网界和科技媒体引起轰动，从此，KK 的一言一行都成为互联网发展的“风向标”。在互联网创业大潮席卷各个领域的今天，当媒体聚焦在路演、IPO 以及科技公司市值时，KK 依旧冷静地游走在最新科技产品与人迹罕至的原始部落中，思考科技该如何发展以及人类将怎样依靠科技，从而更加幸福地生活。也许只有这样，才可以预见到那些能够真正改变我们生活的伟大发明。KK 让我们相信，科技带给我们的未来，终将是一个充满温暖、人性与自由的“进托邦（Protolia）”。 出版时间 2015-01-01 00:00:00 ISBN： 9787915001414 分类： 社会文化-社科 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>头脑风暴往往可以替代缺位的见解积累系统</title><link>https://clickear.github.io/%E5%A4%B4%E8%84%91%E9%A3%8E%E6%9A%B4%E5%BE%80%E5%BE%80%E5%8F%AF%E4%BB%A5%E6%9B%BF%E4%BB%A3%E7%BC%BA%E4%BD%8D%E7%9A%84%E8%A7%81%E8%A7%A3%E7%A7%AF%E7%B4%AF%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%B4%E8%84%91%E9%A3%8E%E6%9A%B4%E5%BE%80%E5%BE%80%E5%8F%AF%E4%BB%A5%E6%9B%BF%E4%BB%A3%E7%BC%BA%E4%BD%8D%E7%9A%84%E8%A7%81%E8%A7%A3%E7%A7%AF%E7%B4%AF%E7%B3%BB%E7%BB%9F/</guid><description>注： 感觉这篇标题翻译有点问题，insight accretion 被翻译成了见解积累，而accret在之前一直被翻译成积塔成沙，从而会让人摸不到头脑。并且标题表达的意思和文中是截然相反的。应该的翻译是：头脑风暴往往被用来替代缺位的见解聚沙成塔系统。而言下之意其实是：不应该这么做，更应该有一个自己的见解积聚沙成塔系统。
Thoughts Memo 汉化组译制
原文： Brainstorming may often substitute for missing insight accretion systems (andymatuschak.</description></item><item><title>好好说话：新鲜有趣的话术精进技巧-马东出品 马薇薇 黄执中 周玄毅等</title><link>https://clickear.github.io/%E5%A5%BD%E5%A5%BD%E8%AF%B4%E8%AF%9D%E6%96%B0%E9%B2%9C%E6%9C%89%E8%B6%A3%E7%9A%84%E8%AF%9D%E6%9C%AF%E7%B2%BE%E8%BF%9B%E6%8A%80%E5%B7%A7-%E9%A9%AC%E4%B8%9C%E5%87%BA%E5%93%81-%E9%A9%AC%E8%96%87%E8%96%87-%E9%BB%84%E6%89%A7%E4%B8%AD-%E5%91%A8%E7%8E%84%E6%AF%85%E7%AD%89/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A5%BD%E5%A5%BD%E8%AF%B4%E8%AF%9D%E6%96%B0%E9%B2%9C%E6%9C%89%E8%B6%A3%E7%9A%84%E8%AF%9D%E6%9C%AF%E7%B2%BE%E8%BF%9B%E6%8A%80%E5%B7%A7-%E9%A9%AC%E4%B8%9C%E5%87%BA%E5%93%81-%E9%A9%AC%E8%96%87%E8%96%87-%E9%BB%84%E6%89%A7%E4%B8%AD-%E5%91%A8%E7%8E%84%E6%AF%85%E7%AD%89/</guid><description>元数据 [!abstract] 好好说话：新鲜有趣的话术精进技巧
书名： 好好说话：新鲜有趣的话术精进技巧 作者： 马东出品 马薇薇 黄执中 周玄毅等 简介： 一直以来，我们以“听话”的方式被教育，却又以“说话”的方式被考核，这很尴尬。我们所学的东西无不以“表达”为指向，他人对我们的看法也几乎都以“表达”为依据，可是作为最直接表达方式的“说话”，却始终处于极其边缘的地位，这也很尴尬。 尴尬之所在，正是机会所在。况且，在成功所需要的一切因素里，相较于出身、机遇、精力、智力、意志品质，我们能控制的，其实就是“说话”这件小事。现代社会高度竞争的复杂人际关系，快节奏的学习和工作环境，要求我们有更加智慧、更有锐气、更强调科学性与可操作性的“好好说话”之道。 所以，《好好说话：新鲜有趣的话术精进技巧》抛开常见的教授套路，通过新鲜、有趣的说话技巧，达到修正读者三观、激发读者思维、传输使用技巧的目的，从而综合提升说话之道。 出版时间 2017-02-01 00:00:00 ISBN： 9787508671505 分类： 个人成长-沟通表达 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>如何100%保证完成自己的制定计划</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95100%E4%BF%9D%E8%AF%81%E5%AE%8C%E6%88%90%E8%87%AA%E5%B7%B1%E7%9A%84%E5%88%B6%E5%AE%9A%E8%AE%A1%E5%88%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95100%E4%BF%9D%E8%AF%81%E5%AE%8C%E6%88%90%E8%87%AA%E5%B7%B1%E7%9A%84%E5%88%B6%E5%AE%9A%E8%AE%A1%E5%88%92/</guid><description>计划中的预估时间和实际执行时间是严重不对等的 “事情该花多少时间，就应该花多少时间。而不应该是，我想让它花多少时间，它就只能花 多少时间。这么一个简单的常识，却是我们在制订以及执行计划时，从来不会想起的。” ( pdf)
所以要切换思维。就像软件工程中，会有工作量评估，只是一个大致人月时间，其实往往会超出预估时长，这个故意的评估更短的时长，其实也有自信以及人为制造紧迫感，以促进高效的目的在里面。
计划就只是计划，甚至可以理解为备忘录，千万不要当成目的本身。没有必要去严丝合缝地执行。我们做计划，完成计划，本质的目的无非是更好地工作与生活。
列清单 - 轻重缓急 - 记录完成时长 记录任务的开始和完成时间这一点，我之前一直做不到，因为总感觉忙起来的时候，压根儿是一种沉浸状态或毫无空余时间的状态，是没办法抽出时间搞七搞八节外生枝的。再考虑实践看看。这和[[间歇式日记]]也是有点相像了。 #todo/某天</description></item><item><title>如何codereview</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95codereview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95codereview/</guid><description>哪些要点是只能由人工进行审查而不能依靠工具的呢？
回答是有惊人数量的点只能由人工进行审查。在本文剩下的部分，我们会覆盖一系列广泛的特性，并深入其中的两点具体的区域：性能和安全。
设计
如何让新代码与全局的架构保持一致？
代码是否遵循SOLID原则，是否遵循团队使用的设计规范，如领域驱动开发等？
新代码使用了什么设计模式？这样使用是否合适？
基础代码是否有结合使用了一些标准或设计样式，新的代码是否遵循当前的规范？代码是否正确迁移，或参照了因不规范而淘汰的旧代码？
代码的位置是否正确？比如涉及订单的新代码是否在订单服务相关的位置？
新代码是否重用了现存的代码？新代码是否可以被现有代码重用？新代码是否有重复代码？如果是的话，是否应该重构成一个更可被重用的模式，还是当前还可以接受？</description></item><item><title>如何做到每天高效学习12个小时</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E6%AF%8F%E5%A4%A9%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A012%E4%B8%AA%E5%B0%8F%E6%97%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E6%AF%8F%E5%A4%A9%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A012%E4%B8%AA%E5%B0%8F%E6%97%B6/</guid><description>长时间高效学习，不是意味着连轴转12个小时。 而是比如15个小时学习时长，需要将3个小时的总休息时长，合理地分布到15个小时中，达到『干活-休息-干活-休息』的最优循环。
已经有非常多的大道理，比如什么马拉松冠军之类的，表达过类似观点，把一段马拉松拆分成若干段合理地短跑，短跑的时候发挥好。
休息间隙的3个小时如何分配 冥想 做不同的事 “哈佛大学教授 Tal 说：问题不在于压力，不是生理上的问题，也不是心理上的问题，问题在于缺少恢复。那些既成功又快乐幸福的人，也是会感受到压力的，然而他们很注重恢复。 放到更长的周期来看，比如一周，我们必须按照学习和工作 5 天，休息 2 天的节奏（或者 做六休一），来进行恢复。如果是考研，时间很紧，至少也要给自己每周半天的休息时间。 怎样才算有效休息？可以粗略概括为：让身体活动起来，让精神沉静下来。脑袋不去想任何与学习、工作有关的事情，可以和朋友一起去电影院，或者聚餐聊天，可以去爬山，也 可以给家里做大扫除。” ( pdf)
受阻时，去休息 “这一点在[[学习之道-芭芭拉·奥克利]]中也有着重提及，她把学习时候的状态分为专注模式和发散模式，前者是指专心死磕没有解决的问题；而发散模式是指，遇到难题，实在想不出思路时，可以试着散步或运动，让大脑得到放松，任由思维漫步。松弛状态可以让大脑的不同区域得到相互联络的机会，并反馈给我们宝贵的灵感。 当然，这个“顿悟”的过程，是需要专注模式做基础的，也就是芭芭拉说的，学会在专注模式和发散模式之间切换。” ( pdf)</description></item><item><title>如何做年度计划</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%81%9A%E5%B9%B4%E5%BA%A6%E8%AE%A1%E5%88%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%81%9A%E5%B9%B4%E5%BA%A6%E8%AE%A1%E5%88%92/</guid><description>年度计划是大方向，每日计划是具体实施。 聚焦每日计划的执行情况。任务的检查，只在指定节点，进行复核，评估。每周、每月进行下个周期的计划和回顾进度。 目标要符合[[SMART]]原则 [[2023年度计划]]</description></item><item><title>如何做技术评审</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%81%9A%E6%8A%80%E6%9C%AF%E8%AF%84%E5%AE%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%81%9A%E6%8A%80%E6%9C%AF%E8%AF%84%E5%AE%A1/</guid><description>一、掌握需求 接到一个业务需求之后，先别急着下手，开工之前把业务梳理清楚，先吾日「三省」吾身：
「昨天」之前业务逻辑是怎样的 「今天」当前需求修改的背景是什么，目的是什么，带来的收益是什么 「明天」需求修改后对当前系统业务扩展性和维护成本有哪些影响 二、需求等级划分 【作为参考】我们将需求按照「影响范围&amp;amp;开发成本」为三个等级：L（Light-load）级别、M（Medium-load）级别、H（Heavy-load）级别，判定规则如下：
三、技术评审包含内容 其中，M和H级别需求必须要进行技术评审，M级别可以相关内容维护人员一起参加，H级别建议各个模块都知会到。
一 前期准备: 1.数据库ER图
2.uml类图
3.业务流程图
4.系统时序图
5.系统个业务边界
6.待讨论问题汇总</description></item><item><title>如何克服拖延症</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%85%8B%E6%9C%8D%E6%8B%96%E5%BB%B6%E7%97%87/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%85%8B%E6%9C%8D%E6%8B%96%E5%BB%B6%E7%97%87/</guid><description>5 分钟起步法 [[飞轮效应|万事开头难]]。真正让人觉得累的，其实是我们想一件事情的时间，比我们真正做这件事儿的时间多得多。比如[[🤖obsidian]] 怎么使用，一开始大家都是想着装插件搞配置学方法论，结果几天过去了，发现笔记连 10 条都没有。不是说前者不重要，而是要在使用软件的一开始就动手实操，不断地先把笔记写起来，再边写边探索插件和方法论这些东西。
5 分钟起步法，其实和 [[微习惯：简单到不可能失败的自我管理法则-斯蒂芬·盖斯]] 的理念相通：
开始做一件事儿的时候，先给自己 5 分钟的起步时间。比如先读一本书的第一页，先背 10 个单词，不去计较效率。 将这个想法时刻在心中默念，现在不想做没关系，只要熬过这 5 分钟就柳暗花明了。听起来简单，但在很多不想开始，或不想坚持的场景，很有用。 让自己稍微走在计划前面，而不是永远赶 deadline 稍微走在计划前面一丢丢，会激发出立刻行动的执行力。反倒是如果人经常被 deadline 折磨，短期可能有效，但是长此以往，会可能崩溃，从而陷入摆烂，造成更严重的拖延。</description></item><item><title>如何全面提升专注力，学习不走神</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%85%A8%E9%9D%A2%E6%8F%90%E5%8D%87%E4%B8%93%E6%B3%A8%E5%8A%9B%E5%AD%A6%E4%B9%A0%E4%B8%8D%E8%B5%B0%E7%A5%9E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%85%A8%E9%9D%A2%E6%8F%90%E5%8D%87%E4%B8%93%E6%B3%A8%E5%8A%9B%E5%AD%A6%E4%B9%A0%E4%B8%8D%E8%B5%B0%E7%A5%9E/</guid><description>积极心理学家米哈里·契克森米哈赖，把完全投入、十分专注于眼前行为时的心理状态，称 为“[[心流]]”，并认为这是我们获得幸福的一种途径。“心流”会让我们从忧虑感和压力中 解脱出来。
越频繁地进入心流状态，证明专注力越强。3 个关键词就是:
互动 提问 默念 学习过程中，和学习对象频繁互动 看书看不下去的一个小窍门：把自动朗读打开，耳朵眼睛并用。
绝不要只是听和看，一直听一直看，那会造成我们以为的专注幻觉，其实可能老早思维就飘到填上去了。想要持续专注，和学习对象频繁互动，学习对象可以是老师讲的课，或者自己在记忆的知识点，或者在看的书。
比如，边听边默默重复老师说的某个关键词，用自己的话转写成笔记记录下来。记忆的时候，搞一搞编码。看书的时候，对 20% 左右的内容划线，有条件的写想法和评论或标注。
一句话，和所有学习对象保持紧密的互动，成为参与者，能有效避免走神。
互动的最强妙招就是: 不断提问 比如在学这篇文章的时候，就不断地提问: 学习对象在作者这里的定义范畴是什么，和学习对象互动是要开口说话吗，最有效的提问方式是什么。</description></item><item><title>如何减少对学习的排斥和厌恶心理</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%87%8F%E5%B0%91%E5%AF%B9%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%92%E6%96%A5%E5%92%8C%E5%8E%8C%E6%81%B6%E5%BF%83%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%87%8F%E5%B0%91%E5%AF%B9%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%92%E6%96%A5%E5%92%8C%E5%8E%8C%E6%81%B6%E5%BF%83%E7%90%86/</guid><description>利用峰值和终值理论，提升学习愉悦感 人们对一切人事物的感受，由 [[峰值和终值]]起到决定性作用。[[∑ 心理学]]上也有叫[[首因效应和近因效应]]，都是类似的。
应用在学习上，就是将自己擅长且喜欢的事儿，安排穿插在其他学习任务中间。比如我讨厌学习英语，喜欢数学解题带来的成就感，那么学 30 分钟英语，搞 20 分钟数学，这 1 个小时我的体验都是快乐的。。讨厌的程度越深，需要掺入的喜欢的事儿的比例就要越高。
让终值的出现不是负向，而是正向 大脑遗忘很快，当我在学习过程中，能输出东西，比如文字，语音，就能看到明晰明确的正反馈，很容易得到正向的终值体验。
写代码的时候，积累出的一个个 commit，就非常能带来满足感。或者放松式学习的时候，看看最后得到的文字笔记，即使以后不会再看，在当下，至少是得到满足感的。对绝大多数人来说，先解决满足感的事儿，再考虑如何高效做笔记。
让一天的学习任务不要太细太多 同样学习 10 个小时，如果给自己安排很多类型的任务，或者拆分的很细，最后心里压力会无形中带来。当开始用任务清单方式，给自己规划每日学习计划的时候，一开始先少安排，当感觉对于自己来说安排的颗粒度不够，强度不够的时候，再慢慢调。而不是一上来就整齐划一，大气磅礴地一口吃成一个胖子，最终带来的结果可能是，既对任务清单的方式感到麻烦，也对每天的学习任务感觉烦躁。
工作讲成就目标，生活讲掌握目标，学习居中 20 世纪 80 年 代，心理学家尼科尔斯、德韦克等人，提出了“成就目标”这个概念。“成就目标”包 括“掌握目标”和“成绩目标”两种类型，前者是指“掌握知识和提高能力”，后者是 指“好名次和好成绩”。 一个定位于过程中的成长，一个定位于结果的优异。</description></item><item><title>如何合理地制定计划</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%90%88%E7%90%86%E5%9C%B0%E5%88%B6%E5%AE%9A%E8%AE%A1%E5%88%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%90%88%E7%90%86%E5%9C%B0%E5%88%B6%E5%AE%9A%E8%AE%A1%E5%88%92/</guid><description>[[SMART]]法则定计划 绩效目标和个人定计划，底层逻辑通用。具体、可衡量、可达成、目标相互关连、日期明确
提高计划的个人执行力，专注每天计划，长远计划只需要大致方向 “也建议大家，从“我要从某天起开始怎样怎样”“我要努力多久”的“倒数日”思维中， 挣脱出来，只去想“今天要做什么”，并且尽力完成。” ( pdf)
倒数日思维和[[打卡]]思维也有点像，坚持不住的时候，就会变质打卡，最后骗人骗己，得不偿失。我的想法跟作者几乎很类似。</description></item><item><title>如何告别伪学霸和学酥状态</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%91%8A%E5%88%AB%E4%BC%AA%E5%AD%A6%E9%9C%B8%E5%92%8C%E5%AD%A6%E9%85%A5%E7%8A%B6%E6%80%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%91%8A%E5%88%AB%E4%BC%AA%E5%AD%A6%E9%9C%B8%E5%92%8C%E5%AD%A6%E9%85%A5%E7%8A%B6%E6%80%81/</guid><description>在舒适区中，花大量时间做简单事情 就像跑步永远用 6km/h 的配速，健身永远练轻而易举一组做 20 多次动作的重量，都是停留在舒适区里面，进行简单的不断重复。只有去做那些需要思考，需要克服某些困难的任务，才能是真的勤奋。
当然也不能矫枉过正，不能逃离舒适圈以后，又给自己选择一个地狱模式。明显过高的目标，又会带来挫败感。所谓中庸为道，当你已经入门，就不选入门模式，也别轻易挑战地狱模式，困难模式或专家模式，可能是个好选择。
从不去检测自己的掌握程度 我有段时间，经常从早忙到晚，但是其实整天都是一无所获的，因为我一直在逃避，没有去检测自己的学习成功工作成果。而高中时期，知道在利用老师反复重复的那段时间，自己额外刷题来检测学习成功的那些人，都是尖子生。
对于真正的勤奋来说，再功利主义也不为过。你要看到反馈，立刻看到反馈。一切不以检测和输出为目的的努力，就是耍流氓。
从不去总结规律，只是埋头苦学 单词从 a 背到 z，反反复复，真正做阅读理解的时候，还是一脸蒙逼。就是缺少其他例如动词名词，前缀后缀的规律的掌握。学习知识是一方面，学会如何学习，更是重要，这点更是需要自己学会复盘，学会总结规律。这就是元认知。
[[道德许可效应]] 让你沉迷于已经努力的幻觉中 [[道德许可效应]]（moral licensing）是指，当你对某事有一个明确的道德标准之后，在做出相关 的行为和判断时，反而更倾向于违背这个标准。通俗来说就是，当我们做了一些好的、上 进的事情之后，就倾向于做一些坏的、堕落的事情，来破坏自己之前的努力。</description></item><item><title>如何在考场上超常发挥</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%9C%A8%E8%80%83%E5%9C%BA%E4%B8%8A%E8%B6%85%E5%B8%B8%E5%8F%91%E6%8C%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%9C%A8%E8%80%83%E5%9C%BA%E4%B8%8A%E8%B6%85%E5%B8%B8%E5%8F%91%E6%8C%A5/</guid><description>其实只要不失常发挥，就是超常发挥。因为其他人会有非常多的人，都失常发挥，从而相比之下我们的排名就上升了。
如何不失常发挥？
抛开得失心，摒弃焦虑 考试分为过关型考试和选拔性考试。比如驾照，英语四级这些，我们目标只需要过关就行，而且有多次重来的机会，所以大部分人不至于有很强的得失心，害怕自己不够好，过度担心失败后可能带来的后果。
抛开考试外的一切，扩增考试运行内存 我们在解决问题的时候，有一个用于暂时存放信息和加工信息的记忆系统，叫做“工作记忆”。它相当于一个中间站，容量有限，而且不可扩充。我们把所需的信息，从长期记忆 中提取出来，在工作记忆中进行存储、加工，处理完毕后，得到当下问题的答案。 工作记忆能够存储和处理的信息容量越多，意味着你解决问题的能力就越强。但如果我们 在考试时，过于担忧考试的结果，并且不时地审视自己做得怎么样，纠结自己是不是做错 了，那么，会有相当一部分“工作记忆”的容量，被这些焦虑占用。如此一来，我们能用 于答题的记忆容量，就很有限了。
还有种正向使用这种运行内存的方法，就是先看作文题，暂时没思路没关系，但大脑此时已经划分的一块儿内存给他，并且以极小的 cpu 损耗挂在后台持续思考，在做完前面的题目后，没准儿到作文这，就文思泉涌了。
做事情的时候，不要想；做完了，再去想。珍惜你的工作记忆，把它们全部用于做 题本身。
专注的时候专注，复盘的时候复盘 做完一题立马让他闭环忘记他，focus 下一题。
平时学习过程中也类似，专注的时候专注，至于规律总结，方法改进等等，先把专注的这 1 个小时专注完再说。如果怕忘记复盘，可以简单做个记号，提醒自己。</description></item><item><title>如何在阅读时整理所得</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%98%85%E8%AF%BB%E6%97%B6%E6%95%B4%E7%90%86%E6%89%80%E5%BE%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%98%85%E8%AF%BB%E6%97%B6%E6%95%B4%E7%90%86%E6%89%80%E5%BE%97/</guid><description>%%我的理解:: 哈哈，andy这块儿也还没有形成自己完美的工作流。[[» 文章笔记工作流]]%%
[[写你所读，以求内化]]很重要，但在阅读和写作精细打磨的笔记之间来回切换会让人分神。所以，在阅读时应当轻巧地收集见解。你可以把它们存放在[[为临时性的和不完整的笔记设置写作收件箱]]中，从而[[闭合开环]]，便于后续处理（见[[如何将阅读标注处理成常青笔记]]）。
注释——即使是含有你自己的文字的内联旁注——也没有什么信息价值。它们是原子化的，彼此之间没有联系，更无法聚沙成塔；它们非常浓缩，基本上没有经过编辑。没关系：把注释看作是提醒，对你说着「嘿，看看这段话」，有只言片语充当上下文，以唤起你对这段话的记忆。
你反正都要写能持久经用的笔记，所以注释只要有足够信息能重现阅读时刻的心理情境即可。但这一方式是不可持续的，因为长此以往，你每次想要回想你对这本书的体验，就要面对一大堆钩子，个个都要「追溯」。
在处理这些观察结果时，你希望能高屋建瓴，将相似想法汇集成簇，所以通过可操作的方式来收集注释是很有帮助的。
具体来说，我正在尝试的方法包括：
实体书： 在一张 A7 纸上写下几个字（[[外出时方便抓住灵感的口袋便笺]]) 在感兴趣的段落旁边空白处画个点或画条线，并折上页角。 网络文章： 将所有有趣的摘录复制粘贴到写作收件箱里的单条工作笔记中。 或者，使用 Bear 摘录器搭配标记工具。 电子书和 PDF： 使用应用内的荧光笔 在收件箱中把所有标记的重点导出到工作笔记中，将其汇集成丛</description></item><item><title>如何复盘</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%A4%8D%E7%9B%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%A4%8D%E7%9B%98/</guid><description> 跟着高手学复盘
CLAP:
PDCA:
C &amp;ndash;&amp;gt; 对事实的总结
L &amp;ndash;&amp;gt; 原因分析
A &amp;ndash;&amp;gt; 认知修正
P &amp;ndash;&amp;gt; 规划</description></item><item><title>如何学会考试</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%BC%9A%E8%80%83%E8%AF%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%BC%9A%E8%80%83%E8%AF%95/</guid><description>用应试的思维去学习 其实和 [[🔡OKR]] 思维也有点想，直接将一道道题目，当成 O，拆解分析它的 KR，也就是关键的考点，针对考点，做专门的强化训练和[[📚刻意练习]]。
极端点地说，甚至可以直接从大致看一遍真题开始，开展自己的学习之旅，从真题中，大致感受这门考试的基本组成，做到心中有数。
研究真题，揣摩出题者 从真题中，明确地知道，自己需要回答什么问题。然后要研究这些题目:
考什么。也就是出题范围。 怎么考的。也就是出题方式，要求我对知识点掌握到什么程度，以及如何运用。 思考自己如何才能答出来。也就是，以答题为目的，倒推如何学习、理解和记忆这些题目的知识点。 需要有意识的从题海中总结规律。也就是要学会不仅掌握知识，并掌握元认知能力，学题目中培养思维和能力。 输出倒逼输入，避免眼高手低 大部分人，都是先输入，再输出，也就是即学即用，因为这符合人性，轻松。但更好的方法就是目的驱动式，先输出什么，输出过程中发现不足，再输入，也就是急用急学，从而达到螺旋式上升和进步的目的。输出也是 [[刻意练习]] 的应有之义。
很多时候，即使我感觉算是学习老手，也会迈入一直看，一直输入，忘了去输出，懒得去输出的陷阱。也就是眼高手低。</description></item><item><title>如何完成复杂、艰难、令人痛苦的任务</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%AE%8C%E6%88%90%E5%A4%8D%E6%9D%82%E8%89%B0%E9%9A%BE%E4%BB%A4%E4%BA%BA%E7%97%9B%E8%8B%A6%E7%9A%84%E4%BB%BB%E5%8A%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%AE%8C%E6%88%90%E5%A4%8D%E6%9D%82%E8%89%B0%E9%9A%BE%E4%BB%A4%E4%BA%BA%E7%97%9B%E8%8B%A6%E7%9A%84%E4%BB%BB%E5%8A%A1/</guid><description>拆分成小目标，享受一个个小目标完成的[[解放感]] 找到小目标的快乐之处，在于将大目标的收获全部归因于这个小目标的达成。 [[把时间当作朋友（第3版）-李笑来]]中说，人会本能地遗忘痛苦，如果我们记忆单词 的时候很痛苦，大脑为了保护自己，最直接的方法就是把这些单词遗忘。李笑来的朋友，需要获得 GRE 高分，才能拿到奖学金。“一共要搞定 20,000 个单词，而 因此可能获得的奖学金是每年 40,000 美元左右”。在当时，相当于税前收入差不多 400,000 元人民币。算下来，每个单词大约值 20 元人民币，这还只算了一年的收入。
其实我们仔细想想都知道，肯定不是背了单词，GRE通过了，就能拿到奖学金了，肯定还要付出其他努力蹲着这40000 美元。但是我们需要让自己找到这种拆分出的小目标的快乐之处，所以需要欺骗自己，将大目标完成后的收获，全部归因于此时正在完成的小目标。[[不积跬步无以至千里]]，是大道理，欺骗自己单一归因，是小技巧。
小目标完成带来即时正反馈，使人得到螺旋上升进步 “大目标让人惶恐，像是遥望路途尽头的远山，令人心生畏惧；小目标往往让我们更专注， 更平静，因为看得到终点，有盼头。 能够真正提高效率、把事情做到极致的手段，是制定“小目标”。这会让你更容易坚持下 去，因为在努力的过程中，你总是即刻就能看到成果，看到自己的进步。” ( pdf)</description></item><item><title>如何将阅读标注处理成常青笔记</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%B0%86%E9%98%85%E8%AF%BB%E6%A0%87%E6%B3%A8%E5%A4%84%E7%90%86%E6%88%90%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%B0%86%E9%98%85%E8%AF%BB%E6%A0%87%E6%B3%A8%E5%A4%84%E7%90%86%E6%88%90%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0/</guid><description>%%我的理解:: #todo/今天 结合[[渐进式总结]]，可成系统。%%
重要的是[[写你所读，以求内化]]。在阅读过程中，你已经标记了那些看起来相关的段落，并且你已经简单记下了你的想法（[[如何在阅读时整理所得]]）。现在，我们会把所有这些都处理成长久化的笔记。
首先：到底应该写什么笔记？我们要写的[[常青笔记应面向概念]]，那么我们面向的关键概念是什么？你需要先退一步，看到整体上一个概念结构的图。要做到这点，你可以把草稿聚成「簇*」，并观察一簇一簇的草稿间萌生的概念结构。或者，你可以勾勒出一幅思维导图或可视化的大纲。你所观察到的结构不必与阅读材料的结构相匹配：只要对你自己有意义就可以（[[自主思考]]）。（*译注：原文 cluster，指想法聚类而成的群集）
一旦对这些概念图景有了些了解，你就可以开始你迭代性的笔记写作了。这里我总结了 Christian Tietze 的流程，也是我目前正在使用、适应的：
泛写笔记：写一条宽泛的笔记 ，它概括草稿簇中的一个「大想法」。如果有多个「大概念」，那这样宽泛的笔记就多写几条，以保证[[常青笔记应该是原子化的]]。 精写笔记：遍览草稿簇中的单独条目，写下更细化的想法，捕捉簇中的原子观点。 连接：在现有笔记中，搜索与新笔记相关的部分。必要时进行链接、合并和修改，以代表你对这些想法的新的、综合的见解。见[[常青笔记之间应该建立大量链接]]和[[在写作时创建推测性大纲]]。 修改：回到宽泛笔记中，在不混淆重点的前提下，根据你在写详细笔记时学到的东西和展开的细节来改进你的总结。删除不必要的详细说明；如有必要，基于这次更新过程中的收获，更新其他的宽泛笔记。 重复上述过程 参考文献 从阅读笔记中创建卡片笔记 • 卡片盒笔记法</description></item><item><title>如何快速入门新领域，如何快速学会新技能</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E6%96%B0%E9%A2%86%E5%9F%9F%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%AD%A6%E4%BC%9A%E6%96%B0%E6%8A%80%E8%83%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E6%96%B0%E9%A2%86%E5%9F%9F%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%AD%A6%E4%BC%9A%E6%96%B0%E6%8A%80%E8%83%BD/</guid><description>入门新领域，偏向知识类。 作者言之无物，大致思想就是说，对于人文社科类的领域的入门，可以多读几遍综述类的文章和书，第一编粗读，后面再读 1-2 遍。并且要用不同记号做笔记，会发现到后面的几遍，笔记越做越少，侧重点也有变化。
我的理解不一样。入门的第一步，不是看书，不管那本书写得再怎么浅显易懂。而是先看教学视频。[[领域入门模板]]
学会新技能，偏向实践类 比如视频剪辑，如何开直播等等，需要动手实操的实践类。
最好的方法就是，直接上手，项目驱动。先做到一个最小可行性方案，接着在后续使用过程中，在遇到问题，就搜索解决问题。待到时机更成熟的时候，再考虑通过系统化的书籍或教学视频，进行系统性训练。</description></item><item><title>如何快速完成学习和工作任务</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%AE%8C%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%B7%A5%E4%BD%9C%E4%BB%BB%E5%8A%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%AE%8C%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%B7%A5%E4%BD%9C%E4%BB%BB%E5%8A%A1/</guid><description>[[帕金森法则]] 的存在，告诉我们，必须得给某个任务一个更短的截止时间。不然我们就会不主动去思考更高效的解决方法，而是不断纠缠在细枝末节中，用努力的幻象不断感动自己自欺欺人。
先抓核心，抓重点，先完成，再优化。才是高效完成工作的根本方法。
写作也是，先允许自己写出来一个垃圾初稿，否则迟迟不动手，大概垃圾都写不出来。
方法理念和 [[如何快速入门新领域，如何快速学会新技能]]也是很类似的。都是强调先开始做。跟[[精益创业]] 里面提到的 MVP 最小可行性产品的理念也是类似的，先拿出一个最简方案，再持续迭代进化。而不是一开始就追求完美，这样往往陷入无限的纠结中去，时间到了啥也没搞定。</description></item><item><title>如何戒掉玩手机</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E6%88%92%E6%8E%89%E7%8E%A9%E6%89%8B%E6%9C%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E6%88%92%E6%8E%89%E7%8E%A9%E6%89%8B%E6%9C%BA/</guid><description>虽然叫手机成瘾，但其实是天性，不是病。所以只能制造物理隔离和软件隔离。 “阅读或者观看这些内容，满足了我们对新鲜信息的需求。而人的大脑中存在奖励系统，当 它发现获得奖励的机会时，会释放出多巴胺，驱使我们去追逐可能存在的快乐。具体到手机和电脑上，就是驱使我们不停地点击、搜索、点击。” ( pdf)
不得不承认，手机真的好玩儿，如果要让自己远离手机。最好的办法就是制造物理隔离，把手机放在自己够不着的地方。或者使用手机自带的专注功能。
与其高要求自己克服天性，不如尝试去改变环境。
将玩手机目的记录下来，将玩手机的堕落时长记录下来 记录下来的时候，就从无意识变成了有意识，而且也方便后面回顾，察觉到自己其实花费了很多时间去娱乐。
另一方面，记录下来以后，会给自己带来安全感，让自己相信不会失去不会忘记去做。
比如当我想开始水手机的时候，我记录下来，我今天要看抖音30分钟，那么晚上抽一整段时间看就是咯。但绝对比无意识的立马开始刷要强，可能一刷就是1个小时。此外我记录下来，我就获得了安全感，比如更具体的，我要刷抖音中关于刘畊宏的视频，那只要记录在，我早晚会看到会刷，因此大脑中是有安全感的，有安全感就不会焦虑，更不会漫无目的地去刷手机。
越有紧急任务，大脑感受压力的时候，反而可能躺平去紧张玩手机 “很多时候，越是有很紧急的任务，我们越是会做一些“堕落”的事情来逃避，比如玩手机。关键玩的时候，还一点都不开心，难受得要死，越玩越难受，越难受越玩。也就是传 说中的“紧张地玩手机”。” ( pdf)
并且在做了一些堕落的事情后，要学会自我谅解。</description></item><item><title>如何提高长期记忆能力，复习是唯一路径</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E9%95%BF%E6%9C%9F%E8%AE%B0%E5%BF%86%E8%83%BD%E5%8A%9B%E5%A4%8D%E4%B9%A0%E6%98%AF%E5%94%AF%E4%B8%80%E8%B7%AF%E5%BE%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E9%95%BF%E6%9C%9F%E8%AE%B0%E5%BF%86%E8%83%BD%E5%8A%9B%E5%A4%8D%E4%B9%A0%E6%98%AF%E5%94%AF%E4%B8%80%E8%B7%AF%E5%BE%84/</guid><description>短期记忆，有很多 [[记忆宫殿]] 之类的记忆技巧和图像编码技巧。
但是中长期记忆，靠什么？靠唤醒，靠重复。也就是 [[spaced repetition]]。不管当初短期记忆是靠[[记忆宫殿]]，理解记忆还是各种奇技淫巧。我们能在几个月或几年后再回忆起来的内容，毕竟少数，只有些不知道出于什么机缘巧合的内容，也许会一直刻印在脑海里挥之不去。但我们既然要提高长期记忆能力，肯定不能将宝押注在这种不确定性的机缘巧合上。
[[闭环]] 思维很重要 闭环就是把一件事情从头做到尾。工作上可能有别人给我们制定验收标准，不需要我们自己去制定闭环的标准。但学习中和生活中，我们是一项项事情的 owner，掌握了它是否可以从我们的待办清单中划去。如果闭环标准太低，会导致学不到东西，如果闭环标准太高，会导致事物堆积如山，产生焦虑感。
但大多数人，在学习的时候，其实是将学习任务的闭环标准定太低，或者说压根儿没有给它闭环。背一个单词，他的闭环条件应该是能在阅读理解中遇到以后准确知道它的意思，或者高级一点的要求是知道它的准确发音。但是大多数人，就觉得当下知道 abondon=放弃就够了，不管它的应用以及复习。
用 [[anki]] 等对知识点进行制卡和复习 [[anki]]</description></item><item><title>如何用 IARP 规划标签</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E7%94%A8-IARP-%E8%A7%84%E5%88%92%E6%A0%87%E7%AD%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E7%94%A8-IARP-%E8%A7%84%E5%88%92%E6%A0%87%E7%AD%BE/</guid><description>up:: [[§ flomo101 - 思维方式目录]]
我的理解 其实少楠这样的用法，本质而言，就是将标签用成了更灵活的文件夹形式。如果是文件夹，可能涉及到创建操作，而用标签，可以直接用一串字符直接生成对应的结构，就像自动创建了文件夹和文件一样，而且还能享受到智能补全提示的好处。
如何用 IARP 规划标签 每个标签生来并不平等。 有些会成为主要导航（如 #营销 #设计 ），有些会成为记录内容的补充（如 #营销管理 #零售的哲学 ）。
许多 flomo 用户纠结的点在于，要么把标签当做像文件夹一样的分类来用，要么当做内容补充来用，而忽略了标签的作用在于「方便我们索引」，谁说一个 MEMO 只能打一个标签呢？—— 毕竟我们的核心不在于一个完美的分类，而在于当我们想要提取的时候，能找到。</description></item><item><title>如何真正理解一个新概念</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E7%9C%9F%E6%AD%A3%E7%90%86%E8%A7%A3%E4%B8%80%E4%B8%AA%E6%96%B0%E6%A6%82%E5%BF%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E7%9C%9F%E6%AD%A3%E7%90%86%E8%A7%A3%E4%B8%80%E4%B8%AA%E6%96%B0%E6%A6%82%E5%BF%B5/</guid><description>up:: [[§ flomo101 - 思维方式目录]]
我的理解 涉足新领域，将经历3个阶段：
基础概念和单词，用记忆手段强记即可。比如刚涉足云原生应用管理领域的时候，同事随口一句话，可能就有好多个概念或缩写不理解：把这个前端服务，用内网的脚本部署到类生产环境去。对于完全不懂的人，至少有6个词语都是全新的，懵逼的。 不着急，给自己一点时间理解。越急越容易陷入欲速则不达。比如为了了解部署这个词或概念，去疯狂搜周边资料，这没必要，一开始不完全理解的时候，就用比喻类比等方式，将其简单化即可，等待慢慢积累慢慢了解。比如部署就是将代码用某种形式放到一个环境中让其运行起来。 最后阶段，用自己的话写，理解多少写多少。对领域的理解都是逐步螺旋式上升的，有了形成文字的理解，也更利于在自认为成为专家了的将来，更好地回顾曾经的理解，帮助自己脱离片面和傲慢。
虽然最后的专家，都是把几万个概念融会贯通在大脑里，就像没有外科手术医生是拿着笔记本做手术的，但笔记作为中间过程，还是起到了举足轻重的作用。 # 🎯 如何真正理解一个新概念 真正的知识体系不在 flomo 中，也不在 Notion 中，不在任何一个笔记工具中，而是在你的脑海中。</description></item><item><title>如何设计笔记的回顾机制</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0%E7%9A%84%E5%9B%9E%E9%A1%BE%E6%9C%BA%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0%E7%9A%84%E5%9B%9E%E9%A1%BE%E6%9C%BA%E5%88%B6/</guid><description>up:: [[§ flomo101 - 思维方式目录]]
我的思考 这篇文章更多的是对flomo回顾功能的介绍和规划。但它还是提出了很好的观点：[[主动回顾]]和被动回顾。
主动回顾其实通过anki这种记忆曲线的方式回顾即可。 而被动回顾，有手机通知栏推送、微信回顾推送、桌面小组件等方式。个人更喜欢主动回顾，因为其有规律，有迹可循；后者被动回顾要么纯随机，要么用不智能的『智能算法』，不可预测或像抖音那样逢迎大脑。 # 💫 如何设计笔记的回顾机制 对应功能： 每日回顾
奥运五环想必大家都见过，但如果现在让你直接在纸上画一下，一定会有所迟疑：到底哪几个圈圈是连在一起的来着？（可以试试看能否毫不迟疑地画出来 😜）</description></item><item><title>如何阅读一本书-莫提默·艾德勒 查尔斯·范多伦</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6-%E8%8E%AB%E6%8F%90%E9%BB%98%E8%89%BE%E5%BE%B7%E5%8B%92-%E6%9F%A5%E5%B0%94%E6%96%AF%E8%8C%83%E5%A4%9A%E4%BC%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6-%E8%8E%AB%E6%8F%90%E9%BB%98%E8%89%BE%E5%BE%B7%E5%8B%92-%E6%9F%A5%E5%B0%94%E6%96%AF%E8%8C%83%E5%A4%9A%E4%BC%A6/</guid><description>元数据 [!abstract] 如何阅读一本书
书名： 如何阅读一本书 作者： 莫提默·艾德勒 查尔斯·范多伦 简介： 这是一本关于阅读的永不褪色的经典。本书是一本阅读指南，一本指导人们如何阅读的名作，曾高踞全美畅销书排行榜榜首，自问世以来，好评甚多，重版多次。书中介绍了阅读的方法、技巧，阅读所应具备的广阔视野。 出版时间 2014-10-01 00:00:00 ISBN： 9787100106184 分类： 教育学习-教育 出版社： 商务印书馆有限公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>如何高效读书，如何记住所读</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E8%AF%BB%E4%B9%A6%E5%A6%82%E4%BD%95%E8%AE%B0%E4%BD%8F%E6%89%80%E8%AF%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E8%AF%BB%E4%B9%A6%E5%A6%82%E4%BD%95%E8%AE%B0%E4%BD%8F%E6%89%80%E8%AF%BB/</guid><description>高效读书之一：快速阅读 快速阅读不是那种看网文时候的一目十行。而是，曾经已经读了很多书，具备了丰富的知识储备，从而能在读新书的时候，书里的很多观点，自己都曾接触过或了解熟悉，可以选择性跳过或略读那些对个人而言不重要的信息。从而达到快速阅读的目的。
比如当我们之前已经接触过快速阅读，并且看了开头几句话发现跟你之前接触的是同一个概念，那么可以直接略读或跳过这个章节。
[[🔡RIA]] 说的就是这种方法，专门针对功利性的阅读而言。至于文学作品、哲学作品这些，每一句都可能因人而异，别人如果说读这些书也很快，你就当他是傻子忽略即可。
高效读书之二：结果导向式读书 结果导向式读书，也就是 [[自上而下]] 的读书方式。围绕一个写作的主题，为这个主题寻找素材、引用和论据等等，都属于结果导向。这种方法，直达目的，效率当然高。比如我想写 MOOC 对中国的教育的影响这篇文章，我就可以搜很多相关文献，看几本讲教育和在线教育相关的书籍，直接翻目录或者电子书搜关键词，然后拿到想要的素材，引用到自己的文章里面。
高效读书之三：间接实现高效的漫游式读书 漫游式的读书，看起来没有任务和目的驱动，很可能会事倍功半。其实这也是非常需要的，它就是 [[自下而上]] 的读书方式，你要相信你学习到的东西，在将来的某一天会被大脑中的其他知识点串接起来，连点成线，也是我们阅读生活中不可缺少的一环。就像，如果我们要开发一个软件，如果是完全的自上而下开发，可能所有的模块项目都会自己去开发自己去写，反复造轮子。而如果之前已经有很多漫游式的自下而上的经验，那么你肯定知道很多模块，都有开源社区很完善的代码可以直接使用，不用自己造轮子。这个时候，工程效率的提升是成百上千倍的，因为大部分时候，你只需要关注自己软件的核心逻辑即可。
所以漫游式读书和结果导向式读书，一定是有机结合，一个都不能少的。
高效读书之四：读过的东西，如何不忘记，在将来帮助到自己。就是常青笔记。 极少数天才也许能『过目不忘』，普通人做不到，但能做到『必有回响』。回响有 2 个标准：1 是隐约记得某本书中有某个观点，2 是在需要的时候，能尽量快速地找到原文，并且运用到自己的表达当中。</description></item><item><title>如果在家，如何反人性做到高度自律</title><link>https://clickear.github.io/%E5%A6%82%E6%9E%9C%E5%9C%A8%E5%AE%B6%E5%A6%82%E4%BD%95%E5%8F%8D%E4%BA%BA%E6%80%A7%E5%81%9A%E5%88%B0%E9%AB%98%E5%BA%A6%E8%87%AA%E5%BE%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E6%9E%9C%E5%9C%A8%E5%AE%B6%E5%A6%82%E4%BD%95%E5%8F%8D%E4%BA%BA%E6%80%A7%E5%81%9A%E5%88%B0%E9%AB%98%E5%BA%A6%E8%87%AA%E5%BE%8B/</guid><description>自由需要代价，自律给我自由 “所以，我所做的一切事情，基本上都是靠自制力，自己驱动自己去完成的。这个过程其实一点都不令人羡慕，真的很难。当获得更多自由的时候，你也要付出同等甚至更多的自律。以物易物，公平得很。” ( pdf) &amp;gt; 自由职业者最牛逼的一点，就是能自由的同时，还保持自律。
起床第一件事儿很重要 “首先，你早上起来后做的第一件事很重要。我会记录自己从早到晚做了什么，每次复盘的 时候，总结经验教训，总是会发现： 如果当天醒来后，我先玩了会儿手机，那完了，我本来想的是玩半小时就起床，但时间到 了之后，我并没有停止，而且好像很难停止，然后又继续玩了一小时，我一边自责一边继 续玩，仿佛在烂泥潭里面挣扎，却又无法脱身，然后持续到了两三个小时，最后，半天过 去了。” ( pdf) 起床后的第一件事，非常重要，喝杯咖啡元气满满。
“在清晨，我给了自己一个力，足够大的力，推动我进入了一个轨道，开始运动。那么，接 下来一整天，我不需要额外付出更多的力，就可以维持这种惯性。在这种情形里，手机、 电脑等等，都会成为我的工具。也就是说，只有需要的时候，我才会使用，但不会沉迷。” ( pdf)</description></item><item><title>嫌疑人X的献身-东野圭吾</title><link>https://clickear.github.io/%E5%AB%8C%E7%96%91%E4%BA%BAX%E7%9A%84%E7%8C%AE%E8%BA%AB-%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AB%8C%E7%96%91%E4%BA%BAX%E7%9A%84%E7%8C%AE%E8%BA%AB-%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/</guid><description>元数据 [!abstract] 嫌疑人X的献身
书名： 嫌疑人X的献身 作者： 东野圭吾 简介： ★东野圭吾高峰杰作，500万册典藏纪念版震撼上市！新增3000字作者专访！揭露创作动机与背景，深入理解角色背后的故事
★不可不读的经·典推理名作 【日本首部“五冠王”推理作品】
★奇迹！包揽直木奖、本格推理小说大奖，登顶周刊文春推理榜、本格推理小说榜、这本推理小说了不起
★【万千中国读者心中的“封神”之作】
★易烊千玺、杨迪、王凯都在读！长年稳居豆瓣图书总榜前列，百万读者9.0高分好评，新世代亚洲推理小说代表作
★美国图书馆协会年度蕞佳推理，《纽约时报》《华尔街日报》《洛杉矶时报》《出版人周刊》等媒体一致好评 出版时间 2022-06-01 00:00:00 ISBN： 9787573500014 分类： 精品小说-悬疑推理 出版社： 南海出版公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>嫦娥</title><link>https://clickear.github.io/%E5%AB%A6%E5%A8%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AB%A6%E5%A8%A5/</guid><description>细节 如果前期要反红，就先不升级 1 技能，此时平 a 伤害 2 倍，要杀死的一瞬间升级 1 技能并使用，效率最高。</description></item><item><title>存储引擎</title><link>https://clickear.github.io/%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</guid><description>[!INFO] mysql的存储引擎
mysql的存储引擎，就像是服务层定义了api，有着由不同的存储引擎实现，如[[innodb]],[[myisam]],[[memory]]等
从MySQL架构看出，存储引擎层，主要为server层服务，提供读写接口，不同的存储引擎实现不同的类，是表级别。
是可插拔的存储引擎体系结构。
一个数据库中多个表可以使用不同引擎以满足各种性能和实际需求。
InnoDB 现在是 MySQL 默认的存储引擎，支持事务、行锁和外键.
::存储引擎对比 [!NOTE] 一句话总结
一般使用[[innodb]], 支持**[[事务]]、[[行锁]]和外键**。</description></item><item><title>孙膑</title><link>https://clickear.github.io/%E5%AD%99%E8%86%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%99%E8%86%91/</guid><description/></item><item><title>学习之道-芭芭拉·奥克利</title><link>https://clickear.github.io/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%81%93-%E8%8A%AD%E8%8A%AD%E6%8B%89%E5%A5%A5%E5%85%8B%E5%88%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%81%93-%E8%8A%AD%E8%8A%AD%E6%8B%89%E5%A5%A5%E5%85%8B%E5%88%A9/</guid><description>元数据 [!abstract] 学习之道
书名： 学习之道 作者： 芭芭拉·奥克利 简介： 《学习之道》则是一本真正面向大众、指导实践以及科学可信的学习方法手册。这本书的优点主要有以下几个方面。学习方法领域的图书主要分为两类。一类走的是学院派路线，主要是梳理学习心理学中的各种理论，在这些书中，我们能看到不同流派的观点，能看到心理学家对学习本质的讨论，但是这些内容对于学习者来说，有些过于抽象了，较难在学习的具体实践中加以应用；另一类走的是实践派路线，作者往往靠个人的天赋和努力，摸索出了一些基于经验的学习方法，这些书有一定的参考价值，但缺点也比较明显：一方面其中部分观点可能不符合学习心理学中的科学结论，另一方面某些方法只适合特定的场景，无法迁移应用在更广阔的学习领域中。 出版时间 2016-11-01 00:00:00 ISBN： 9787111552062 分类： 个人成长-人生哲学 出版社： 机械工业出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>学习之道：美国公认经典学习书-乔希·维茨金</title><link>https://clickear.github.io/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%81%93%E7%BE%8E%E5%9B%BD%E5%85%AC%E8%AE%A4%E7%BB%8F%E5%85%B8%E5%AD%A6%E4%B9%A0%E4%B9%A6-%E4%B9%94%E5%B8%8C%E7%BB%B4%E8%8C%A8%E9%87%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%81%93%E7%BE%8E%E5%9B%BD%E5%85%AC%E8%AE%A4%E7%BB%8F%E5%85%B8%E5%AD%A6%E4%B9%A0%E4%B9%A6-%E4%B9%94%E5%B8%8C%E7%BB%B4%E8%8C%A8%E9%87%91/</guid><description>元数据 [!abstract] 学习之道：美国公认经典学习书
书名： 学习之道：美国公认经典学习书 作者： 乔希·维茨金 简介： 终身学习，为了更幸福更体面的生活！在竞争激烈的高阶领域，决胜关键不仅在于知识多寡，还包括心理层面的锻炼：承受压力、把阻力化为优势，以及体能和情绪迅速复原的能力。而真正的学习赢家，能够在追求卓越的过程中持续总结心得，最终以健康的心态和纯熟的技巧，表现出最好的自己。《学习之道：美国公认经典学习书》中，世界冠军，天才神童乔希·维茨金回首20年体验，为你逐一揭开在所有领域获取成功的共通秘笈！ 出版时间 2017-05-01 00:00:00 ISBN： 9787515342641 分类： 个人成长-认知思维 出版社： 中国青年出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>学习目标的分级</title><link>https://clickear.github.io/%E5%AD%A6%E4%B9%A0%E7%9B%AE%E6%A0%87%E7%9A%84%E5%88%86%E7%BA%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%A6%E4%B9%A0%E7%9B%AE%E6%A0%87%E7%9A%84%E5%88%86%E7%BA%A7/</guid><description>了解。20 分。 ^86d6ah 比如 [[烹饪]] 入门。40 分。 比如 [[游泳入门]] 熟悉。60 分。 比如 [[如何快速入门新领域，如何快速学会新技能]] 精通。80 分。 比如 [[运维Devops]] 开发。精通的目的是为了产生交叉知识和综合运用。 专家。100 分。 目前尚无。努力达成 1-3 个领域，靠它吃饭。 人的精力有限，不能所有感兴趣的事情都达到尽善尽美，所以在接触和学习的初试时刻，就要搞清楚自己的目的和目标，从而确定好该学习目标的分级，根据自身能力和时间，合理分配。</description></item><item><title>学习过程中关于认知加工的双加工理论</title><link>https://clickear.github.io/%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%85%B3%E4%BA%8E%E8%AE%A4%E7%9F%A5%E5%8A%A0%E5%B7%A5%E7%9A%84%E5%8F%8C%E5%8A%A0%E5%B7%A5%E7%90%86%E8%AE%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%85%B3%E4%BA%8E%E8%AE%A4%E7%9F%A5%E5%8A%A0%E5%B7%A5%E7%9A%84%E5%8F%8C%E5%8A%A0%E5%B7%A5%E7%90%86%E8%AE%BA/</guid><description>[[路径依赖]]让我们产生惯性和习惯，自动屏蔽了其他路径 比如从小用手写做笔记和思考，那么说话表达的时候，就十分不流畅。比如现在习惯了用键盘打字，那么现在用手写笔记的方式去学习，就十分不习惯且削弱学习效率。
这算得上是习惯的力量，也是习惯带来的弊端。
不习惯的路径，就需要刻意练习，使其降低对我们认知资源的消耗。 不同的类型的题目，需要我们以不同方式去调取和运用知识点。刷题的另一层含义，也是为了让我们熟悉习惯各种原本不太习惯的路径。比如一个再牛逼的人，一直做选择题。结果考试的时候，来个简答题，他估计也会懵逼好一会儿的。
[[双加工理论]]：自动化加工和受意识控制的加工 自动化加工就是潜意识，后台静默运行。比如吃饭、打字、骑自行车等。受意识控制的加工，就是我们要将其调度到前台来，反复思考和提问。
不断刻意练习，将重要的认知，从受意识控制的加工，变成自动化加工 “你刚开始学英语时，需要弄清楚语法规则、主谓语形式、介词等等，很费劲，熟练之后， 你无需思考，就可以准确地表达。 理工科对公式的应用，人文社科对素材和理论的调取，都是一样的道理。 一开始，那些分开的动作，需要占据你所有的“工作记忆”，通过练习，你将它们内化为 整体，内化为你的自动化的、直觉式的反应，然后你的“工作记忆”，才有多余的空间， 去做更高阶的事情。 这就是“练习”的意义。” ( pdf)</description></item><item><title>学会提问（原书第11版）-尼尔·布朗 斯图尔特·基利</title><link>https://clickear.github.io/%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE%E5%8E%9F%E4%B9%A6%E7%AC%AC11%E7%89%88-%E5%B0%BC%E5%B0%94%E5%B8%83%E6%9C%97-%E6%96%AF%E5%9B%BE%E5%B0%94%E7%89%B9%E5%9F%BA%E5%88%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE%E5%8E%9F%E4%B9%A6%E7%AC%AC11%E7%89%88-%E5%B0%BC%E5%B0%94%E5%B8%83%E6%9C%97-%E6%96%AF%E5%9B%BE%E5%B0%94%E7%89%B9%E5%9F%BA%E5%88%A9/</guid><description>元数据 [!abstract] 学会提问（原书第11版）
书名： 学会提问（原书第11版） 作者： 尼尔·布朗 斯图尔特·基利 简介： 很多人不知道怎样切实有效地提出一些判断性问题，希望我们能提供较为详尽的指导，鉴于此，我们专门撰写了这本书，以满足大家的需求。本书最新版依然致力于培养学生一整套提问的技能，并且可以广泛应用于各个领域。这些技能的训练都是在轻松自然的讨论中展开的。本书特别适合在以下几个领域中应用。普通教育学课程、语言类课程的说明文写作，以及专门用来培养学生的评判性阅读和思考的技能的课程。另外，它还是提高沟通效率，实现关键沟通的一本难得的精品之作。 出版时间 2019-01-01 00:00:00 ISBN： 9787111616832 分类： 个人成长-认知思维 出版社： 机械工业出版社 高亮划线 两种思维方式：海绵式思维和淘金式思维 📌 我们认为，你一定愿意自己掌握主动权，来选择该吸收什么和忽略什么。而要做出这个取舍，你就得带着特定的态度去读书，即不断提问（发问）的态度。这种思维方式需要你积极主动地去参与。作者不断向你兜售观点，而你应该随时准备与之辩驳，尽管作者本人根本不在场。 ^8-846-968 ⏱ [[2022-03-16]] 22:12 读书笔记 本书评论</description></item><item><title>学会提问（原书第12版）-尼尔·布朗 斯图尔特·基利</title><link>https://clickear.github.io/%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE%E5%8E%9F%E4%B9%A6%E7%AC%AC12%E7%89%88-%E5%B0%BC%E5%B0%94%E5%B8%83%E6%9C%97-%E6%96%AF%E5%9B%BE%E5%B0%94%E7%89%B9%E5%9F%BA%E5%88%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE%E5%8E%9F%E4%B9%A6%E7%AC%AC12%E7%89%88-%E5%B0%BC%E5%B0%94%E5%B8%83%E6%9C%97-%E6%96%AF%E5%9B%BE%E5%B0%94%E7%89%B9%E5%9F%BA%E5%88%A9/</guid><description>元数据 [!abstract] 学会提问（原书第12版）
书名： 学会提问（原书第12版） 作者： 尼尔·布朗 斯图尔特·基利 简介： 本书特别适合在以下几个领域中应用。通识课程的老师在第一堂课上，面对学生关于他们能从这门课中学到什么的疑问，可以让学生阅读本书，这将为他们的问题提供清晰明了的答案。英语老师在课堂上训练学生写作说明文时，也可以使用本书，不仅可以将其作为构思文章前评估各种不同论点的范本，还可以将其作为写作过程中应避免的问题的检查清单。本书还可以用作旨在培养学生批判性阅读和思考技能的课程中的核心材料。 出版时间 2021-05-01 00:00:00 ISBN： 9787111680925 分类： 心理-心理学应用 出版社： 机械工业出版社 高亮划线 第9章 有没有替代原因 📌 高对替代原因普遍性的认识。 ^73-409-422 ⏱ [[2022-05-27]] 12:48 📌 了解在讨论替代原因时，如何与他人有效互动。 ^73-553-574 ⏱ [[2022-05-27]] 12:48 读书笔记 本书评论</description></item><item><title>学霸学啥都快的根本原因和方法论</title><link>https://clickear.github.io/%E5%AD%A6%E9%9C%B8%E5%AD%A6%E5%95%A5%E9%83%BD%E5%BF%AB%E7%9A%84%E6%A0%B9%E6%9C%AC%E5%8E%9F%E5%9B%A0%E5%92%8C%E6%96%B9%E6%B3%95%E8%AE%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%A6%E9%9C%B8%E5%AD%A6%E5%95%A5%E9%83%BD%E5%BF%AB%E7%9A%84%E6%A0%B9%E6%9C%AC%E5%8E%9F%E5%9B%A0%E5%92%8C%E6%96%B9%E6%B3%95%E8%AE%BA/</guid><description>学霸真正的优势在于，他已经储备了很多思维和信息，也就是知识储备 知识组块，快速拼凑 为什么专家是专家，一些人能临场发挥，侃侃而谈半小时？因为他大脑里的知识，不是零散的，而是组块化的，通过组块，就能非常快拼接出观点、知识和表达。现在我在践行的[[卡片笔记写作法：如何实现从阅读到写作-申克·阿伦斯]]，也有这块儿原理在里面，将知识卡片化，并连接起来，更符合高效大脑的使用惯性。
当我知道GDP，市场经济，理性人假设这些词语的含义时，就是有了这些概念的知识组块，我更容易又好又快地看懂包含这些词语的文章。做个下行的比喻：知识组块就像背中文单词。如果单词意思不知道，看阅读理解起来就非常累。
“象棋大师不是按照一个又一个随机分布的棋子记忆棋局的，而是按照 TA 之前常见到的棋 局，一记就是一片。TA 把小的组块，编码成了大的组块，也就记得又快又准确了。业余选 手的做法是各个击破，而大师找到了规律，是各组击破。” ( pdf)
学习和记忆的本质，是把新知识和就旧知识建立联系 越早努力学习，知识复利效果越显著。</description></item><item><title>安慰剂效应</title><link>https://clickear.github.io/%E5%AE%89%E6%85%B0%E5%89%82%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AE%89%E6%85%B0%E5%89%82%E6%95%88%E5%BA%94/</guid><description>又名伪药效应、非特定效应，指病人虽然获得无效的治疗，但却基于“对治疗的预期”或“对医务人员的信任”而产生了一定的积极反应，而让病患症状得到舒缓的现象。[由美国著名医学家、麻醉师 Henry K. Beecher（1904—1976）于 1955 年提出。该理论虽源于医学，但实际上安慰剂效应在医学界尚存争议。]
案例：春夏之交，原生都市孩纸哆哆、妮妮和同学们到野外郊游，为眼前清澈的泉水、碧绿的草地和迷人的风景所深深吸引，休息时，哆哆很高兴地接过妮妮递过来的水壶喝了一大口，情不自禁地感叹道“山里的水真甜”，其实他喝的还是妮妮从城里带来的水呢。</description></item><item><title>安静：内向性格的竞争力-苏珊·凯恩</title><link>https://clickear.github.io/%E5%AE%89%E9%9D%99%E5%86%85%E5%90%91%E6%80%A7%E6%A0%BC%E7%9A%84%E7%AB%9E%E4%BA%89%E5%8A%9B-%E8%8B%8F%E7%8F%8A%E5%87%AF%E6%81%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AE%89%E9%9D%99%E5%86%85%E5%90%91%E6%80%A7%E6%A0%BC%E7%9A%84%E7%AB%9E%E4%BA%89%E5%8A%9B-%E8%8B%8F%E7%8F%8A%E5%87%AF%E6%81%A9/</guid><description>元数据 [!abstract] 安静：内向性格的竞争力
书名： 安静：内向性格的竞争力 作者： 苏珊·凯恩 简介： 许多年之后，内向的我们依然能够回忆起儿时父母无可奈何的絮叨，你怎么那么不爱说话呢？如今，我们长大了，但内向带给我们的压力更大了。外向理想已成世界趋势。内向性格是次一等的性格吗？《安静：内向性格的竞争力》的作者苏珊?凯恩不这么想。苏珊毕业于哈佛法学院，是前华尔街律师；她喜欢安静，不喜欢喧闹。她的《安静：内向性格的竞争力》在内向or外向这个古老而又常新的话题上又掀起了热度的讨论。上市之后即紧随《史蒂夫?乔布斯传》列AMAZON畅销书总榜第3位，现在仍然在《纽约时报》畅销书排行榜上。苏珊以众多的事实和心理学、神经科学的前沿研究成果为依据，说明内向性格的竞争力在哪里。苏珊并不想发动内向性格者暴动，而是教他们如何假装外向，如何既保持内向，又成为演讲、社交和销售达人。最重要的是，她向人们展示了内向性格者的心灵秘境，告诉世界如何去了解、包容、支持和爱上内向者。 出版时间 2012-09-01 00:00:00 ISBN： 9787508634784 分类： 心理-心理学应用 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>实践出洞见</title><link>https://clickear.github.io/%E5%AE%9E%E8%B7%B5%E5%87%BA%E6%B4%9E%E8%A7%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AE%9E%E8%B7%B5%E5%87%BA%E6%B4%9E%E8%A7%81/</guid><description>实践出洞见 - 知乎</description></item><item><title>富爸爸穷爸爸（20周年修订版）-罗伯特·清崎</title><link>https://clickear.github.io/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B820%E5%91%A8%E5%B9%B4%E4%BF%AE%E8%AE%A2%E7%89%88-%E7%BD%97%E4%BC%AF%E7%89%B9%E6%B8%85%E5%B4%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B820%E5%91%A8%E5%B9%B4%E4%BF%AE%E8%AE%A2%E7%89%88-%E7%BD%97%E4%BC%AF%E7%89%B9%E6%B8%85%E5%B4%8E/</guid><description>元数据 [!abstract] 富爸爸穷爸爸（20周年修订版）
书名： 富爸爸穷爸爸（20周年修订版） 作者： 罗伯特·清崎 简介： 清崎有两个爸爸：“穷爸爸”是他的亲生父亲，一个高学历的教育官员；“富爸爸”是他好朋友的父亲，一个高中没毕业却善于投资理财的企业家。清崎遵从“穷爸爸”为他设计的人生道路：上大学，服兵役，参加越战，走过了平凡的人生初期。直到1977年，清崎亲眼目睹一生辛劳的“穷爸爸”失了业，“富爸爸”则成了夏威夷的有钱人。清崎毅然追寻“富爸爸”的脚步，踏入商界，从此登上了致富快车。清崎以亲身经历的财富故事展示了“穷爸爸”和“富爸爸”截然不同的金钱观和财富观：穷人为钱工作，富人让钱为自己工作！本次20周年修订版还在内容上做了以下几项升级：1.内附作者罗伯特·清崎的来信2.“20年后的今天”贯穿全书，以今天的经济形势来印证富爸爸当初的理念3.核心思想提炼，方便回味经典、巩固记忆4.融入新型学习模式，让你对本书的理解更高效 出版时间 2017-09-01 00:00:00 ISBN： 9787220102912 分类： 经济理财-理财 出版社： 四川人民出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>对抗路</title><link>https://clickear.github.io/%E5%AF%B9%E6%8A%97%E8%B7%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AF%B9%E6%8A%97%E8%B7%AF/</guid><description/></item><item><title>对笔记写作大谈特谈的人很少有严肃的使用场景</title><link>https://clickear.github.io/%E5%AF%B9%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E5%A4%A7%E8%B0%88%E7%89%B9%E8%B0%88%E7%9A%84%E4%BA%BA%E5%BE%88%E5%B0%91%E6%9C%89%E4%B8%A5%E8%82%83%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AF%B9%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E5%A4%A7%E8%B0%88%E7%89%B9%E8%B0%88%E7%9A%84%E4%BA%BA%E5%BE%88%E5%B0%91%E6%9C%89%E4%B8%A5%E8%82%83%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF/</guid><description>%%我的理解:: 这篇笔记我太认同了。网上一些所谓的生产力专家，全职做教学的，可能以前是专家，但当他脱离实际生产环境，全职搞教学后，他的产出会越来越不合实际，凭空捏造。这信息爆炸的时代，最幸运的是能遇到那些有实际成就的人，所产出的高价值文章或演讲，这种内容往往不多，因为他没有这么多时间高频输出内容。当一个人开始高频输出，反而我该警惕起来，这小子是不是已经不干当年让他成功的本质工作，开始全职搞培训了。%%
许多博主和「生活专家」的全职工作就是建议应该如何组织日记，或者应该如何最有效地[[写你所读，以求内化]]。我们之所以认真对待这样的建议，是因为这些做法已经帮助作者实现了有意义的创造性工作。[[更好地记笔记这个描述太过流于表面；核心在于更好地思考]]
但大多数对笔记写作大谈特谈的人在他们自己的领域并非成就累累，不管这些领域是什么。事实上，大多数这样的作者并没有将他们的笔记应用于一些外生的创造性问题：他们的主要创造性工作是撰写关于生产力的文章。这些作者提供了记笔记的建议，以帮助科学家和高管应对工作中的挑战，但孕育这些建议的环境与这些挑战毫无关联。这里有两个相关的问题：[[有效的系统设计需要从真刀真枪的使用情境汲取洞见]]，以及 强大的赋能环境通常是追求自身意义的项目的副产品。
相比之下，卢曼几乎没有介绍过他的 Zettelkasten：他专注研究，成果丰硕，只有在他职业生涯接近尾声时，发表了几篇描述他笔记系统的短篇文章。
我不是很常遇到这个问题，但我确实会整周只谈写笔记而对严肃追求放手不管。这则笔记在提醒我小心这件事。相关笔记：[[我所认识的高效阅读者和思想家在阅读时不做笔记]]。</description></item><item><title>对话涵盖多个讨论者的常青笔记可能会促进协作意义构建</title><link>https://clickear.github.io/%E5%AF%B9%E8%AF%9D%E6%B6%B5%E7%9B%96%E5%A4%9A%E4%B8%AA%E8%AE%A8%E8%AE%BA%E8%80%85%E7%9A%84%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%8F%AF%E8%83%BD%E4%BC%9A%E4%BF%83%E8%BF%9B%E5%8D%8F%E4%BD%9C%E6%84%8F%E4%B9%89%E6%9E%84%E5%BB%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AF%B9%E8%AF%9D%E6%B6%B5%E7%9B%96%E5%A4%9A%E4%B8%AA%E8%AE%A8%E8%AE%BA%E8%80%85%E7%9A%84%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%8F%AF%E8%83%BD%E4%BC%9A%E4%BF%83%E8%BF%9B%E5%8D%8F%E4%BD%9C%E6%84%8F%E4%B9%89%E6%9E%84%E5%BB%BA/</guid><description>Conversations incorporating multiple discussants’ evergreen notes may promote collaborative sense-making</description></item><item><title>对象存储布局</title><link>https://clickear.github.io/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E5%B8%83%E5%B1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E5%B8%83%E5%B1%80/</guid><description>【1】对象头中的Mark Word（标记字）主要用来表示对象的线程锁状态，另外还可以用来配合GC、存放该对象的hashCode；
【2】Klass Word是一个指向方法区中 Class信息的指针，意味着该对象可随时知道自己是哪个 Class的实例；
【3】数组长度也是占用64位（8字节）的空间，这是可选的，只有当本对象是一个数组对象时才会有这个部分；
【4】对象体是用于保存对象属性和值的主体部分，占用内存空间取决于对象的属性数量和类型；
【5】对齐字是为了减少堆内存的碎片空间（不一定准确）。
[!TIP] GC的age为什么只有15💡
[[垃圾回收]]，为什么age只能15?因为存储的bit只有4为，即2^4.0-15
堆内存存储 对象是放在堆内存中的，对象大致可以分为三个部分，分别是对象头，实例变量和填充字节
对象头，主要包括两部分1. Mark Word （标记字段），2.</description></item><item><title>对象的创建过程</title><link>https://clickear.github.io/%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E8%BF%87%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E8%BF%87%E7%A8%8B/</guid><description> [!INFO] 提示
new 类名() —&amp;gt; 类加载 —&amp;gt; 分配内存 —&amp;gt; 内存初始化为0 —&amp;gt; 调用构成构造函数init方法，设置为8 —&amp;gt; 堆上的指针赋值给栈上的变量</description></item><item><title>小王子-安托万·德·圣埃克苏佩里著 李继宏译</title><link>https://clickear.github.io/%E5%B0%8F%E7%8E%8B%E5%AD%90-%E5%AE%89%E6%89%98%E4%B8%87%E5%BE%B7%E5%9C%A3%E5%9F%83%E5%85%8B%E8%8B%8F%E4%BD%A9%E9%87%8C%E8%91%97-%E6%9D%8E%E7%BB%A7%E5%AE%8F%E8%AF%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B0%8F%E7%8E%8B%E5%AD%90-%E5%AE%89%E6%89%98%E4%B8%87%E5%BE%B7%E5%9C%A3%E5%9F%83%E5%85%8B%E8%8B%8F%E4%BD%A9%E9%87%8C%E8%91%97-%E6%9D%8E%E7%BB%A7%E5%AE%8F%E8%AF%91/</guid><description>元数据 [!abstract] 小王子
书名： 小王子 作者： 安托万·德·圣埃克苏佩里著 李继宏译 简介： 3D动画奇幻电影《小王子》中文配音版于2015年10月16日中国上映！这是一本足以让人永葆童心的不朽经典，被全球亿万读者誉为最值得收藏的书。翻开本书，您将看到遥远星球上的小王子，与美丽而骄傲的玫瑰吵架负气出走，在各星球漫游中，小王子遇到了傲慢的国王、酒鬼、惟利是图的商人，死守教条的地理学家，最后来到地球上，试图找到治愈孤独和痛苦的良方。这时，他遇到一只奇怪的狐狸，于是奇妙而令人惊叹的事情发生了…… 《小王子》犹如透亮的镜子，照出了荒唐的成人世界。她在提醒我们，只有爱，才是最高的哲学，才是我们活下去的唯一理由。 出版时间 2013-01-01 00:00:00 ISBN： 9787201077642 分类： 精品小说-影视原著 出版社： 天津人民出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>小米创业思考-雷军 徐洁云</title><link>https://clickear.github.io/%E5%B0%8F%E7%B1%B3%E5%88%9B%E4%B8%9A%E6%80%9D%E8%80%83-%E9%9B%B7%E5%86%9B-%E5%BE%90%E6%B4%81%E4%BA%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B0%8F%E7%B1%B3%E5%88%9B%E4%B8%9A%E6%80%9D%E8%80%83-%E9%9B%B7%E5%86%9B-%E5%BE%90%E6%B4%81%E4%BA%91/</guid><description>元数据 [!abstract] 小米创业思考
书名： 小米创业思考 作者： 雷军 徐洁云 简介： 雷军首部作品，完整解析创办和经营小米的商业思考。 雷军系统梳理30年创业心法和经营哲学，深度复盘“小米模式”，认为取得持续成功的核心在于只干了一件事：坚持“互联网+制造”路线，推动效率革命，实现用户利益和经济效率的最 大化。 雷军在书中首度全面公开包括产品三大铁律、互联网七字诀、高效率模型、爆品模式、生态链要素等，涉及管理、投资、工作等多维度经验，为创业者和管理者提供借鉴和指导，也可以为普通人提供持续精进的头部思维。 出版时间 2022-08-01 00:00:00 ISBN： 9787521745276 分类： 人物传记-财经人物 出版社： 中信出版集团股份有限公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>局部性原理</title><link>https://clickear.github.io/%E5%B1%80%E9%83%A8%E6%80%A7%E5%8E%9F%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B1%80%E9%83%A8%E6%80%A7%E5%8E%9F%E7%90%86/</guid><description>数据访问，通常都遵循“集中读写”的原则，使用一些数据，大概率会使用附近的数据，这就是所谓的“局部性原理”，它表明提前加载是有效的，确实能够减少磁盘IO。</description></item><item><title>工作流</title><link>https://clickear.github.io/%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>第一版 [[工作流使用手册1.0]]
[[工作流扩展功能]]
第二版 仓储 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 1、前端UI：[https://git.</description></item><item><title>带上她的眼睛-刘慈欣</title><link>https://clickear.github.io/%E5%B8%A6%E4%B8%8A%E5%A5%B9%E7%9A%84%E7%9C%BC%E7%9D%9B-%E5%88%98%E6%85%88%E6%AC%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%A6%E4%B8%8A%E5%A5%B9%E7%9A%84%E7%9C%BC%E7%9D%9B-%E5%88%98%E6%85%88%E6%AC%A3/</guid><description>元数据 [!abstract] 带上她的眼睛
书名： 带上她的眼睛 作者： 刘慈欣 简介： 人类使用地层飞船深入地球内部进行探险，一艘地层飞船在航行中失事，下沉到地心，船上只剩下一名年轻的女领航员，她只能在封闭的地心渡过余生……这是刘慈欣获奖小说《带上她的眼睛》里演绎的故事。刘慈欣的短篇科幻小说。 出版时间 2015-01-01 00:00:00 ISBN： 分类： 精品小说-科幻经典 出版社： 山西春秋电子音像出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>带线还是支援</title><link>https://clickear.github.io/%E5%B8%A6%E7%BA%BF%E8%BF%98%E6%98%AF%E6%94%AF%E6%8F%B4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%A6%E7%BA%BF%E8%BF%98%E6%98%AF%E6%94%AF%E6%8F%B4/</guid><description/></item><item><title>常青笔记</title><link>https://clickear.github.io/ZAB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/ZAB/</guid><description>常青笔记 与兰伯特的 Multi-Paxos 不同，ZAB 不是共识算法，不基于状态机，而是基于主备模式的原子广播协议，最终实现了操作的顺序性。 ZAB 是通过“一切以领导者为准”的强领导者模型和严格按照顺序提交日志，来实现操作的顺序性的，这一点和 [[Raft]] 是一样的 重要摘要 虽然大家都在提 ZAB 协议，但是在我看来，ZAB 协议和 [[ZooKeeper]] 代码耦合在一起，也就是说，你是无法单独使用 ZAB 协议的。</description></item><item><title>常青笔记</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0/</guid><description>%%我的理解:: 常青笔记就是andy基于[[🧑卢曼]]的卡片盒笔记法，结合现代计算机软件的优势和自己的理解和实践，衍生出的综合记笔记理念：要么不记，要记就记常青的笔记。%%
写下常青笔记并加以组织，意在时过境迁，世事辗转之中，这些笔记仍能演化改良，发挥功用，最终聚沙成塔。如此考虑笔记实属不寻常：[[大多数人只写临时的笔记]]。写常青笔记，与其说是写笔记，不如说是高效发展洞察力：[[更好地记笔记这个描述太过流于表面；核心在于更好地思考]]。常青笔记写得好则会颇富价值：[[常青笔记是知识工作的基本单位]]。
写出经得住长久研磨改善的笔记，实属不易。下面这些原则可能有所帮助：
[[常青笔记应该是原子化的]] [[常青笔记应面向概念]] [[常青笔记之间应该建立大量链接]] [[优先建立信息间的联系来分类，而非使用层级式分类法]] [[默认面对自己写笔记，不要考虑有读者]] 常青笔记这一概念在很大程度上是由尼克拉斯-卢曼的 卡片盒笔记法演变而来，尼克拉斯-卢曼认为， 在他 70 本书的写作过程中，Zettelkasten 就像一个独立的智力伙伴。参见[[常青笔记和卡片盒笔记法的异同点]]
实现常青笔记 参见：
[[写你所读，以求内化]] [[为有潜在价值的参考引用建立一个阅读收件箱]] [[为临时性的和不完整的笔记设置写作收件箱]] [[可执行的写作策略]] 参考文献 Ahrens, S.</description></item><item><title>常青笔记之间应该建立大量链接</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E4%B9%8B%E9%97%B4%E5%BA%94%E8%AF%A5%E5%BB%BA%E7%AB%8B%E5%A4%A7%E9%87%8F%E9%93%BE%E6%8E%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E4%B9%8B%E9%97%B4%E5%BA%94%E8%AF%A5%E5%BB%BA%E7%AB%8B%E5%A4%A7%E9%87%8F%E9%93%BE%E6%8E%A5/</guid><description>%%我的理解:: 强制自己使用link来组织笔记，让我这几个月有了不少的新颖感，感觉这个时候的自己做笔记，真的是在思考，以前就是做个备忘录。这种奇妙的感觉，很难用文字完整表达出来。还需要改进的一点是，andy擅长面向概念进行笔记，我现在的习惯还是面向单一的对象进行笔记居多，这种方式思考密度确实比较低，这点还需要向andy靠拢学习。%%
Thoughts Memo 汉化组译制
原文： Evergreen notes should be densely linked (andymatuschak.org)
强迫自己在笔记之间添加大量链接，我们便能打开视野，围绕眼下关心的问题，考虑还有些概念能与其关联。添加链接的行为施加了一股压力，促使我们仔细思考各个概念如何彼此联系（见[[理解概念需与其尽力较量]]和[[常青笔记应面向概念]]），同时也实现了[[精细编码]]，能更深入地内化这些想法。
为建立合适的链接，我们需要阅读先前的笔记，这样也有机地实现了对写就笔记的间歇性回顾（[[常青笔记的维护近似于间隔重复]]）。由此便会得出意料之外的发现（[[笔记应该让你吃惊]]）。
而通过记录这些联系，我们也记录了我们得出结论的过程，可能日后对我们（或我们的同事）派上用场。我们应该尽可能[[优先使用细粒度的关联]]。相比之下，[[标签是无效的关联结构]]。
翻阅笔记间，这些链接结成了一条条小径，以供思想空间里漫步遨游。我们忍不住就想按照层级浏览，但链接超越了一切领域和主题。[[优先建立信息间的联系来分类，而非使用层级式分类法]]</description></item><item><title>常青笔记可以提高谈话的信息带宽</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%8F%AF%E4%BB%A5%E6%8F%90%E9%AB%98%E8%B0%88%E8%AF%9D%E7%9A%84%E4%BF%A1%E6%81%AF%E5%B8%A6%E5%AE%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%8F%AF%E4%BB%A5%E6%8F%90%E9%AB%98%E8%B0%88%E8%AF%9D%E7%9A%84%E4%BF%A1%E6%81%AF%E5%B8%A6%E5%AE%BD/</guid><description>%%我的理解:: 可太对了，如果对方背景知识足够，一句话可能就能表达清楚，如果背景知识不够，则针对某些观点的跳转出的常青笔记，就可以做有效扩充。可以根据背景知识量速读或精读。而不是什么场合都是一句：你是小白，我推荐你看一下这本书。%%
如果谈话时提起了某个话题，而你恰好对此洞见颇深，那么谈话这一媒介的约束便很让人恼火：在谈话中间传达细节丰富而较长篇幅的想法是很难的。如果你发表过关于这个话题的文章或书籍，将这些材料分享给对方，以便其后续阅读总是可取的。但发表作品的门槛挺高。你可能积累了很多颇有思考的知识，但还没有将其记录下来，编纂成可供发布的文章。[[常青笔记]]正好能填补这个空缺。常青笔记不像文章一样具备叙事结构和流畅行文，但每篇常青笔记再经过足够打磨，完全能单独成篇，并后续不断完善。分享这样的常青笔记能够增加谈话的信息带宽。
在谈话这样的情境中，常青笔记在某些方面比完善的出版物更有用。[[常青笔记应该是原子化的]]，所以常青笔记很短，而且主题非常明确。事实上，常青笔记通常短得可以在谈话中间即刻阅读。阅读传统出版物花的时间太长了，所以只能充当后续的参考材料。常青笔记的内容则可以实时推动谈话进展。
我发现在 Twitter 上常青笔记特别有用。在 Twitter 上回答微妙的问题往往有点抓狂，但给出常青笔记链接，并附上一行摘要，往往效果不错。有时笔记标题作为摘要足矣。
一旦涉及到多人的笔记，这种效果尤为显著：[[对话涵盖多个讨论者的常青笔记可能会促进协作意义构建]]。</description></item><item><title>常青笔记和卡片盒笔记法的异同点</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%92%8C%E5%8D%A1%E7%89%87%E7%9B%92%E7%AC%94%E8%AE%B0%E6%B3%95%E7%9A%84%E5%BC%82%E5%90%8C%E7%82%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%92%8C%E5%8D%A1%E7%89%87%E7%9B%92%E7%AC%94%E8%AE%B0%E6%B3%95%E7%9A%84%E5%BC%82%E5%90%8C%E7%82%B9/</guid><description>%%我的理解:: 常青笔记不仅是方法，也是理念，更是围绕这个理念的一整套如何做笔记的成体系的系统。最关键的是，这是andy基于现代计算机软件的特点并结合卡片盒笔记法，做出的极大改良，而我看很多人居然还直接全盘照搬卢曼的时间戳命名纸质卡片的方式来做电子笔记，我就很不能理解。%%
我写[[常青笔记]]很大程度上是受 Niklas Luhmann 的 卡片盒笔记法（Zettelkasten）以及其当代支持者的启发。但我使用「常青笔记」这个不同的术语而非卡片盒笔记 一词, 不仅是因为两者有一些截然不同的地方，而且也想在这方面脱离卡片盒笔记法的文化语境（因为有一些先验的价值倾向），给自己一点探索相关想法的空间。
关键的相似之处： 面向概念（[[常青笔记应面向概念]]） 原子化（[[常青笔记应该是原子化的]]） 对联系的强调（[[常青笔记之间应该建立大量链接]]） 怦然相遇之妙（[[笔记应该让你吃惊]]） 看重自我想法的生发及其成长，而不仅仅是积累、摘要他人的想法（[[常青笔记是发展大胆想法的安全场所]]，[[自主思考]]，而非 庸常之书） 强调使用自己的话，即使在描述别人的观点时也是如此（[[写你所读，以求内化]]） 关键的不同之处： 常青笔记包含的一些方法围绕笔记写作建立，笔记写作的存在扩大了它的适用范围： 这是一种可以捕捉比 Zettel 更为碎片，并随后对其逐步修改的方法：[[为临时性的和不完整的笔记设置写作收件箱]] 这是一种少见的的收件箱管理方法：[[间隔重复可以降低破坏性收件箱维护操作的风险]] 这是一种可以随着时间的推移，系统回顾问题以及原始笔记的方法：[[间隔重复对于逐步完善灵光一闪可能有用]] 具体的日常实践：[[我的晨间写作]] 更抽象地讲，常青笔记使用的是更广泛的[[笔记类型体系]]，它描述了一种层级结构以及方法，用于捕捉极早期的想法记为笔记，并将聚簇的笔记* 渐进发展为一种层次递增的「表示」。相比之下，Zettels 主要是为了表示处于「中间」层的概念。（*译注：原文为 cluster —— 笔记写多了以后，好多关系较「近」的笔记形成聚类，一簇一簇的） 我的系统中，标题是非常重要的索引。而 Zettel 通常是用数字标识符；尽管现代的 Zetteler 可能会给自己的笔记起标题，但显然不是以「创造 API」的方式：[[常青笔记的标题就像 API]] [[上下文反向链接]]大大改变了「链接」的性质，允许其中「涌现」的产生，如[[反向链接可以用来隐式定义知识管理系统中的节点]] 我在笔记中嵌入了[[间隔重复记忆系统]]：[[助记媒介可以扩展到个人笔记上]]。这大大改变了媒介 —— 尽管是以一种我尚未充分理解的机制。 我的笔记是可以公开查阅的，我把它们融入了公开的对话。我尚未理解这种做法有什么影响，但肯定大幅改变了我与笔记的关系，并引发了富有价值的讨论。可以从一些很有意思的网络化智能角度考虑这种做法。我不知道哪些足够有名的卡片盒笔记法是公开的而且作者还在持续使用的。卢曼的卡片盒笔记法业已存档，但卢曼的做法代表另一种关系——他没有在对话中使用 Zettel，并利用这种互动为其写作提供新知。 还有最后一个，呃 …… 比较尖锐的区别：我自己系统的主要目的，是在个人的核心创意项目中发展想法。当代 Zetteler 的笔记目的，似乎主要是对他人的想法写笔记。如果是用来记录自己的想法的，那么这些想法多半关于兴趣爱好，而不触及核心创意工作。他们的这些做法都涉嫌触及到[[对笔记写作大谈特谈的人很少有严肃的使用场景]]中的问题。我不知道具体如何改变的，但我的使用场景在很大程度上塑造了笔记写作的实践。</description></item><item><title>常青笔记实现顺畅而渐进的写作（「渐进写作」）</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%AE%9E%E7%8E%B0%E9%A1%BA%E7%95%85%E8%80%8C%E6%B8%90%E8%BF%9B%E7%9A%84%E5%86%99%E4%BD%9C%E6%B8%90%E8%BF%9B%E5%86%99%E4%BD%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%AE%9E%E7%8E%B0%E9%A1%BA%E7%95%85%E8%80%8C%E6%B8%90%E8%BF%9B%E7%9A%84%E5%86%99%E4%BD%9C%E6%B8%90%E8%BF%9B%E5%86%99%E4%BD%9C/</guid><description>%%我的理解:: 看过好几个视频，作者都提到卡片笔记的轻松无压，让笔记到写作这个过程变得非常渐进式。这也是[[flomo]]的核心卖点。%%
Thoughts Memo 汉化组译制
原文： Evergreen notes permit smooth incremental progress in writing (“incremental writing”) (andymatuschak.org)</description></item><item><title>常青笔记工作流能降低改稿的情绪负担</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81%E8%83%BD%E9%99%8D%E4%BD%8E%E6%94%B9%E7%A8%BF%E7%9A%84%E6%83%85%E7%BB%AA%E8%B4%9F%E6%8B%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%B7%A5%E4%BD%9C%E6%B5%81%E8%83%BD%E9%99%8D%E4%BD%8E%E6%94%B9%E7%A8%BF%E7%9A%84%E6%83%85%E7%BB%AA%E8%B4%9F%E6%8B%85/</guid><description>%%我的理解:: 以前没有卡片笔记的时候，我也其实经常这么做，把临时的想法，或上个版本的内容，放到word编辑器的最后或其他地方集中存放，期待待会还可能用到，也一定程度降低删除和丢东西所带来的负面情绪。而卡片笔记的出现，让这种暂存，更方便地更自然地发生了。%%
在写作中往往要「忍痛割爱」，你挥笔成章的一腔心血似乎付诸东流。割爱后往往会造成不闭合的行为环（见[[闭合开环]]）：你想要确保这些想法不会遗失，能最终发表在_某处_，所以你现在要找个地方记住这块内容（或者在合适的地方记录下来），这样以后你写其他稿件时，你就能想起来并把它用上。（译注：此处的开环指的是你没写完的想法，因为没能妥善处理，而成为心病）
但如果使用基于笔记的[[可执行的写作策略]]，那么大部分工作都可以在写[[常青笔记]]的过程中完成。即使一份材料对某一特定作品来说不重要，也可以把它变成持久的笔记，和其他笔记组成网络（[[常青笔记之间应该建立大量链接]]），这有助于未来的洞见（见[[常青笔记有助于积累洞见]]）。或者，如果这个想法需要进一步完善，它可以添加到写作收件箱中（[[为临时性的和不完整的笔记设置写作收件箱]]）。
这个比较具体的事例可以佐证一个更广泛的观察： 通过释放阀可以让非线性思维的想法在输出时更加线性。
事实上，如果你采用 「非指向」 的可执行写作策略（此时你的文字大多来自于先前存在的笔记中），那么大部分文字甚至不是针对该手稿而写就的。这时候纵使从手稿中删除一些文字，还有关系吗？
相关笔记：[[软件界面经常将破坏性操作作为最终决定，而不是视情况而定的选择]]
参考文献 Ahrens, S. (2017). How to Take Smart Notes: One Simple Technique to Boost Writing, Learning and Thinking – for Students, Academics and Nonfiction Book Writers.</description></item><item><title>常青笔记应该是原子化的</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%BA%94%E8%AF%A5%E6%98%AF%E5%8E%9F%E5%AD%90%E5%8C%96%E7%9A%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%BA%94%E8%AF%A5%E6%98%AF%E5%8E%9F%E5%AD%90%E5%8C%96%E7%9A%84/</guid><description>%%我的理解:: 正如文中所言，写笔记没有唯一正解，只有各种权衡。原子化笔记，是一种指导方针，但实际应用起来的时候，应该因地制宜，根据笔记记录内容的不同性质，进行不同颗粒度大小的划分。%%
Thoughts Memo 汉化组译制
原文： Evergreen notes should be atomic (andymatuschak.org)
笔记最好只讲一件事——但要尽量描述得全面完整。
这样一来，不同话题与上下文之间就更容易建立联系。对于包罗万象的笔记，若只对笔记中的一个概念有了新想法，这个想法就难以察觉，此外指向该笔记的链接会所指不清；如果笔记过于零散，笔记间的链接网络也落得支离破碎，一些联系因此不甚明晰。[[常青笔记之间应该建立大量链接]]
写笔记没有试金石或者唯一正解，只有各种权衡。
常青笔记原子化与软件工程中的 「关注点分离」原则如出一辙。「关注点分离」原则认为，软件的模块应该只「关注」一件事，以便日后复用。但同样地，如果模块切分得太细碎，内聚不足的问题便会浮现。从这个角度看，[[常青笔记的标题就像 API]]。</description></item><item><title>常青笔记应面向概念</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%BA%94%E9%9D%A2%E5%90%91%E6%A6%82%E5%BF%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E5%BA%94%E9%9D%A2%E5%90%91%E6%A6%82%E5%BF%B5/</guid><description>%%我的理解:: 面向概念记笔记，也和[[link first]]的理念相同。我们往往更习惯于传统的[[folder first]]的方式去组织自己的学习材料和笔记。哪个更好？andy说前者更好，但我个人觉得拿不准，也得具体场景具体分析，也需要长期实践1-2年再来看看。%%
划分[[常青笔记]]最好以概念为标准，而不是按作者、书籍、事件、项目、主题等。这样随着时间的推移，而笔记不断更新、链接，你会逐步发现不同书籍和领域之间的联系（[[常青笔记之间应该建立大量链接]]）。
做笔记最直接的方法是为每本书、项目或研究课题开辟新笔记。每篇笔记都涵盖了许多概念，因此若某个概念以后再次出现，你可能很难找到你曾写过的内容：你必须记住哪些书或项目涉及此话题（相比之下：[[常青笔记应该是原子化的]]）。
你如果读到另一本书，其中讨论了相同概念，你会在那本书上写新笔记。这种方法是无法聚沙成塔的（有悖于[[知识工作应能聚沙成塔]]）。你对这个概念的新想法，并没有与旧想法结合起来，形成更坚实的整体：关于这个概念，你只有一盘散沙般的一堆笔记，每条笔记深藏于更大的文件中，甚至指代这个概念的术语都不统一。
这不仅仅是积累的问题。这种方法中，没有动力驱使你把围绕这个概念的新旧想法融会贯通。新旧想法之间难道没有张力吗？难道对概念的有力提炼，不只在将其同时考虑时出现吗？[[理解概念需与其尽力较量]]。
如果我们读了两本主题完全相同的书，我们可能很容易将这两本书的笔记链接在一起。但是，新奇的联系往往会出现在意想不到的地方。在按概念整理笔记时，你可能会在不同书籍中出现的观点之间建立出乎意料的联系。你以前可能从来没有意识到这些书能联系起来——事实上，它们可能确实没有过联系，除了你发现的这一点。
按概念组织的话，记笔记会有点困难，但这种困难不无好处：写新笔记时，必须找到新笔记在整体中的位置，因此便会探索之前织就的笔记网络，于是就有机会寻访意料之外的地方。
随着时间的推移，笔记会聚沙成塔，并能以越来越复杂的方式组合起来（[[常青笔记的标题就像 API]]），新颖洞见油然而生（[[常青笔记有助于积累洞见]]）。</description></item><item><title>常青笔记是发展大胆想法的安全场所</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E6%98%AF%E5%8F%91%E5%B1%95%E5%A4%A7%E8%83%86%E6%83%B3%E6%B3%95%E7%9A%84%E5%AE%89%E5%85%A8%E5%9C%BA%E6%89%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E6%98%AF%E5%8F%91%E5%B1%95%E5%A4%A7%E8%83%86%E6%83%B3%E6%B3%95%E7%9A%84%E5%AE%89%E5%85%A8%E5%9C%BA%E6%89%80/</guid><description>%%我的理解:: 常青笔记真的是[[不积跬步无以至千里]]这类名言的最好实践。一张小卡片，写一个简单又大胆的想法，不用面面俱到，时间会让它发展，和其他卡片一起组成更完备的思想。%%
Thoughts Memo 汉化组译制
原文： Evergreen notes are a safe place to develop wild ideas (andymatuschak.org)</description></item><item><title>常青笔记是知识工作的基本单位</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E6%98%AF%E7%9F%A5%E8%AF%86%E5%B7%A5%E4%BD%9C%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8D%95%E4%BD%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E6%98%AF%E7%9F%A5%E8%AF%86%E5%B7%A5%E4%BD%9C%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8D%95%E4%BD%8D/</guid><description>%%我的理解:: 如果一个工作，不需要产生和沉淀一些笔记，那么它大概率不是知识工作，只是一个穿了智力密集型产业外衣的劳动密集型产业。编程上解决一个工程问题，经常需要输出大量的笔记。%%
Thoughts Memo 汉化组译制
原文： Evergreen note-writing as fundamental unit of knowledge work (andymatuschak.org)
如果非要为知识工作者找一个主要标志，我所知的最好指标，可能是每天所写的[[常青笔记]]的数量。[[写笔记可以是高超的技能]]，但是[[大多数人把笔记当作贮藏容器或思想草稿]]而[[笔记写作实践大多是无效的]]。
[[常青笔记有助于积累洞见]] [[常青笔记有助于积累阅读成果]] 写笔记有助于写下的文本积累：这些笔记是[[常青笔记是知识工作的基本单位]]的燃料，特别是如果你[[在写作时创建推测性大纲]]。 注意事项：[[更好地记笔记这个描述太过流于表面；核心在于更好地思考]]</description></item><item><title>常青笔记有助于积累洞见</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E6%9C%89%E5%8A%A9%E4%BA%8E%E7%A7%AF%E7%B4%AF%E6%B4%9E%E8%A7%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E6%9C%89%E5%8A%A9%E4%BA%8E%E7%A7%AF%E7%B4%AF%E6%B4%9E%E8%A7%81/</guid><description>%%我的理解:: 传统笔记方式，缺少链接而容易让自己陷入记录者而非思考者的身份中。视觉化的笔记方式，能一定程度上帮助我们思考和产生洞见，但相对耗时。常青笔记取了2者的优点，即避免涂涂画画省时间，又产生链接帮助思考，以最终产生洞见。写到这，突然又对[[heptabase]]和[[氢图]]的笔记+白板的形态产生兴趣，以后有机会一定深入体验一番。%%
Thoughts Memo 汉化组译制
原文： Evergreen note-writing helps insight accumulate (andymatuschak.org)
创造性工作中的许多日常思考都容易散失，就像潮水中的沙堡。短暂性在低保真思考中实际上是有用的，但在许多情况下它只是一种偶然性。严肃的思考应该以[[常青笔记]]的形式进行，以便于积累。
[[卓越洞见从之前的所思所想中涌现]]。那么，这种思考在哪里发生？它可能在你的脑子里，或者在你笔记本上一系列转瞬即逝的草图中，但是[[知识工作应能聚沙成塔]]，而上述机制都损耗巨大。
考虑一下你本来有望实现的一些假设性的洞察力飞跃。为了实现这一飞跃，你通常需要同时发展许多独立的、部分成型的想法，直到它们在灵感的闪现中突然融合在一起。如果你需要同时迭代多个作品，你可能会很难把它们都记在脑子里。
相比之下，由于[[常青笔记应该是原子化的]]，它们的范围足够小，你可以在半个小时内开始并完成一个笔记（见[[常青笔记实现顺畅而渐进的写作（「渐进写作」）]]）。尽管如此，你写的每一个笔记都代表了你对这个特定想法的思考增量，每一个笔记都丰富了愈加宽阔的链接网络（[[常青笔记之间应该建立大量链接]]）。因为这些是[[常青笔记]]，你现在有一个明确的立足点，可以在这个具体的想法上进行迭代。
你所写的笔记将与你所读的材料相互作用（[[常青笔记有助于积累阅读成果]]），并将形成新稿件的基础（[[可执行的写作策略]]）。</description></item><item><title>常青笔记有助于积累阅读成果</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E6%9C%89%E5%8A%A9%E4%BA%8E%E7%A7%AF%E7%B4%AF%E9%98%85%E8%AF%BB%E6%88%90%E6%9E%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E6%9C%89%E5%8A%A9%E4%BA%8E%E7%A7%AF%E7%B4%AF%E9%98%85%E8%AF%BB%E6%88%90%E6%9E%9C/</guid><description>%%我的理解:: 传统的阅读+笔记的模式，不同书本和文章之间的联系，全靠自己大脑的短时记忆能力或运气，去找到关系和连接，这一点都不cool也不高效。现在基于link的模式，符合大脑思考直觉，相当于将阅读成果积累到了大脑的网状结构的一个个知识节点上了。真应了那句话：[[✨写作之难，在于将网状的思想，通过树状的句法，用线性的文字展开。——史蒂芬·平克]]。阅读之难，则是反之：看线性的文字，进行树状的输入，最后进行网状思想和知识的积累。%%
Thoughts Memo 汉化组译制
原文： Evergreen note-writing helps reading efforts accumulate (andymatuschak.org)
[[写你所读，以求内化]]很重要，但不要仅仅描述你所读的具体书籍写了什么，你可以（也应该）写下你的笔记，让你的阅读所得在彼此之间，在你自己的想法之间相互作用，从而逐步聚沙成塔（见[[常青笔记有助于积累洞见]]，[[知识工作应能聚沙成塔]]）。
这也是我们写[[常青笔记]]的原因：如此一来，如果我们遇到一本书，其中讨论了我们已经写过的概念，我们就会被逼着把新的想法与我们先前的概念结合起来。当然，我们在阅读时通常会这样做，但我们仅限于调用容易出错的记忆，找出可能与此相关的作品。外化的笔记系统大大消除了这种限制。
这就是为什么[[常青笔记应面向概念]]的部分原因：这样，我们的笔记结构就会促使我们注意到不同文本——以及我们自己作品中的观点之间的关系（见[[常青笔记之间应该建立大量链接]]，[[笔记应该让你吃惊]]）。
你写的笔记也会打下新的手稿的基础（[[可执行的写作策略]]）。</description></item><item><title>常青笔记的标题就像 API</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E7%9A%84%E6%A0%87%E9%A2%98%E5%B0%B1%E5%83%8F-API/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E7%9A%84%E6%A0%87%E9%A2%98%E5%B0%B1%E5%83%8F-API/</guid><description>%%我的理解:: 简直是卡片笔记的命名最佳实践。要养成这个习惯。 #todo/持续迭代 。反观自己，现在的一些笔记就是模棱两可的或大而全的笔记，要么会被疯狂调用，要么无人问津。而拆解重构笔记的过程，就像抽取高频的公共接口。%%
译者注：文中的 API 指的是 Application Programming Interface，即应用程序接口。
[[常青笔记]]划分合理，命名恰当的话，得到的标题就是对笔记内容的抽象。由此一来，整篇笔记讨论的概念可以用这个抓手来引用（见[[概念抓手，由 Alexander 提出]]）。实际上，标题寥寥数语便能勾勒出笔记内容轮廓：每天都在笔记中构筑概念并改进笔记的「API」，将大量笔记提炼抽象为单则笔记的能力，也会更上一层楼（例如，[[设赋体验成为大众媒体时蕴藏极大潜力]]，[[常青笔记是知识工作的基本单位]]）。
一些有效的笔记「API 设计」技巧：关注点分离（[[常青笔记应该是原子化的]]），精准标题（[[笔记标题建议使用完整的句子，避免模糊主张]]），和正面阐述（[[笔记标题建议正面表述，以促进说理系统化]]）。
相关笔记： 有根据的主张，Qian 等人提出</description></item><item><title>常青笔记的维护近似于间隔重复</title><link>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E7%9A%84%E7%BB%B4%E6%8A%A4%E8%BF%91%E4%BC%BC%E4%BA%8E%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E7%9A%84%E7%BB%B4%E6%8A%A4%E8%BF%91%E4%BC%BC%E4%BA%8E%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D/</guid><description>%%我的理解:: 哈哈，和作者想到一块儿去了。刚开始实践[[双链笔记]]写作的时候，就感觉到，双链有时候很像anki卡片，不用点开链接，就能理解，意味着这张卡片已经记住了，而点开链接，就相当于进行一次重复记忆。%%
Thoughts Memo 汉化组译制
原文： Evergreen note maintenance approximates spaced repetition (andymatuschak.org)
[[常青笔记]]具有密集的关联结构（见[[常青笔记之间应该建立大量链接]]），因此撰写新笔记的时候，需要我们不断回顾和修改我们过去的写作，因此这种方式像是对过去的间隔重复。
特别是，这种间隔重复跟随你现在的兴趣进行。如果你对一个主题停止阅读或写作，你就不会回顾相关笔记。如果一个主题是你经常阅读或写作，那相关材料就会被频繁回顾。
从记忆的角度来说，这并不是一种有效的间隔重复：你并没有真正利用[[测试效应]]。但另一方面，它确实有利用到类似[[生成效应]]的东西，而且对于长期积累的思想库来说，提供了注意力管理方面的思考视角。更具体一点，这种做法鼓励你反复关注那些与当下工作有关的历史想法。并且，因为你可能发现要修改这些过去的想法笔记，所以这种反复关注可能是需要一定程度努力的（*译注：这种努力会确保效应的有效性）。
在维护涉及 嵌入的系统时，也会出现这种效果。</description></item><item><title>年少荒唐-朱炫</title><link>https://clickear.github.io/%E5%B9%B4%E5%B0%91%E8%8D%92%E5%94%90-%E6%9C%B1%E7%82%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B9%B4%E5%B0%91%E8%8D%92%E5%94%90-%E6%9C%B1%E7%82%AB/</guid><description>元数据 [!abstract] 年少荒唐
书名： 年少荒唐 作者： 朱炫 简介： 一页一荒唐，一字一情愁。这里有明月大江、西风烈马，匪人侠士、鱼汤浪子，疯魔寻死、细雪柔情；这里的故事刀光剑影、畅快淋漓，情深不寿、愁若诗酒；这里的文字孤傲戏谑，让你捧腹大笑，又让你哽咽泪目。这里有属于每个人的情爱、江湖、青春与生活。 出版时间 2015-09-01 00:00:00 ISBN： 9787539984308 分类： 文学-经典作品 出版社： 江苏凤凰文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>年度征文 | 我的效率系统三原则</title><link>https://clickear.github.io/%E5%B9%B4%E5%BA%A6%E5%BE%81%E6%96%87-%E6%88%91%E7%9A%84%E6%95%88%E7%8E%87%E7%B3%BB%E7%BB%9F%E4%B8%89%E5%8E%9F%E5%88%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B9%B4%E5%BA%A6%E5%BE%81%E6%96%87-%E6%88%91%E7%9A%84%E6%95%88%E7%8E%87%E7%B3%BB%E7%BB%9F%E4%B8%89%E5%8E%9F%E5%88%99/</guid><description>年度征文 | 我的效率系统三原则 Metadata Author: sspai.com Title: 年度征文 | 我的效率系统三原则 Reference: https://sspai.com/post/71754 Category: #article Page Notes Highlights 首先，无论是重要的信息，想法、灵感，还是待办事项，我们都希望能立刻记录下来。也就是说，记笔记和收集待办的目的是一致的，都是即时记录。需要即时记录最直观的原因是怕忘记。因为即便当时不会立刻处理，信息、想法和灵感在以后的思考和写作中可能用到，新的任务有待我们安排时间去完成。如果没有立即记录，这些东西很可能在忙碌中就遗忘了，因而损失了一个绝妙的想法，或者错过了关键的事情。即时记录还有一个重要的好处是帮助我们清空大脑。未完结的事情会一直盘踞在我们的脑子里，干扰我们专注于其他的事项。只有当我们把这些想法和待办记录下来，我们的大脑才会「放下心来」，知道一切已经安排妥当，可以只专心当下了。 — Updated on 2022-08-25 — Group: #webNote 卡片笔记法提倡即时记录闪念笔记，定时将闪念笔记整理成标准化的永久笔记，且要勤于回顾永久笔记。又如，Get Things Done 系统提倡新进任务及时归入收集箱，集中整理收集箱中的待办事项并安排任务清单，且要做周期性回顾。 — Updated on 2022-08-25 — Group: #webNote 考虑笔记系统和任务管理系统在根本目的和工作流程上的一致性，两个系统的构建可以遵循一样的原则。对应整个工作流的重要环节，本文总结了三个基本原则 —— 一元化收集、项目式管理、多维度链接。 — Updated on 2022-08-25 — Group: #webNote 每天遇到的事情、杂感、想法，收集的票据，乃至想收藏保留的一些包装纸、宣传画等等都会放在一起。GTD 系统里设有一个收集箱，Allen 也是倡议将所有新进的待办事项全部放进收集箱，之后一并整理。 — Updated on 2022-08-25 — Group: #webNote 一元化收集最大的好处就是便捷，我们不必去考虑记在哪里、如何分类，记就完事了。 — Updated on 2022-08-25 — Group: #webNote 简单来说，我们提倡「一元化收集」是提倡在建立效率系统时注意将「收集」和「整理」两个步骤分开。「收集」系统追求简单、摩擦力小，以求更快更完整地即时记录。对笔记内容再加工、再分类等等过程留给后续「整理」中在做。实践中，重要的是保证收集工具数量精简、方便易操作。我们在收集过程中不做复杂的整理。 — Updated on 2022-08-25 — Group: #webNote</description></item><item><title>并发带来的问题</title><link>https://clickear.github.io/%E5%B9%B6%E5%8F%91%E5%B8%A6%E6%9D%A5%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B9%B6%E5%8F%91%E5%B8%A6%E6%9D%A5%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description> [!TIP] 技巧💡
脏读重点在于事务B里面修改了数据，尚未提交,
不可重复读的重点在于事务B更新了数据，并且已经提交。
幻读的重点在于事务B里面新增了数据.
解决脏读、不可重复读、幻读的思路:
1.加锁，增加写写的并发
2.[[MVCC]]多版本控制，增加读写不互相影响的并发。
并发带来的问题。 [[更新丢失]]（Lost Update）: [[脏读]]（Dirty Reads） [[不可重复读]]（Non-Repeatable Reads） [[幻读]]（Phantom Reads） 幻读和不可重复读的区别： 不可重复读的重点是修改：在同一事务中，同样的条件，第一次读的数据和第二次读的数据不一样。（因为中间有其他事务提交了修改） 幻读的重点在于新增或者删除：在同一事务中，同样的条件,，第一次和第二次读出来的记录数不一样。（因为中间有其他事务提交了插入/删除） 并发事务处理带来的问题的解决办法： &amp;ldquo;[[更新丢失]]”通常是应该完全避免的。但防止更新丢失，并不能单靠数据库事务控制器来解决，需要应用程序对要更新的数据加必要的锁来解决，因此，防止更新丢失应该是应用的责任。 “脏读” 、 “不可重复读”和“幻读” ，其实都是数据库读一致性问题，必须由数据库提供一定的事务隔离机制来解决： 一种是加锁：在读取数据前，对其加锁，阻止其他事务对数据进行修改。 • 另一种是数据多版本并发控制（MultiVersion Concurrency Control，简称 [[MVCC]] 或 MCC），也称为多版本数据库：不用加任何锁， 通过一定机制生成一个数据请求时间点的一致性数据快照 （Snapshot)， 并用这个快照来提供一定级别 （语句级或事务级） 的一致性读取。从用户的角度来看，好象是数据库可以提供同一数据的多个版本。为了解决的是读写并发。 读读并发不用处理，写写并发，通过锁来解决</description></item><item><title>幻读</title><link>https://clickear.github.io/%E5%B9%BB%E8%AF%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B9%BB%E8%AF%BB/</guid><description>[!TIP] 幻读的重点在于新增或者删除💡
在同一事务中，同样的条件,，第一次和第二次读出来的记录数不一样。（因为中间有其他事务提交了插入/删除）
区别于[[不可重复读]]
一个事务按相同的查询条件重新读取以前检索过的数据，却发现其他事务插入了满足其查询条件的新数据,这种现象就称为“幻读”</description></item><item><title>廉颇</title><link>https://clickear.github.io/%E5%BB%89%E9%A2%87/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BB%89%E9%A2%87/</guid><description/></item><item><title>延迟满足</title><link>https://clickear.github.io/%E5%BB%B6%E8%BF%9F%E6%BB%A1%E8%B6%B3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BB%B6%E8%BF%9F%E6%BB%A1%E8%B6%B3/</guid><description>&amp;ndash;[[少有人走的路]] 书中有一个大章节提及
也称糖果效应。指为人们了长远的、更大的利益，而自愿延缓或放弃目前的、较小的满足的现象。心理学家还通过观察发现，从小时候的自控、判断、自信的小实验中能推测出一个人长大后的个性。[由美国斯坦福大学心理学教授 Walter Mischel 于 1960 年的“延迟满足”实验提出并证明。]
案例：在一个游戏中，桌上各放着两颗糖，如果小朋友能坚持 20 分钟，就能得到这两颗糖，如果不能坚持，就只能得到一颗，并且现在就能拿到，自律较好的小朋友（2/3）都会选择稍微等 20 分钟再拿，以获得更大的收益。生活中延迟满足也可以提升幸福感。</description></item><item><title>开局阵容分析与应对</title><link>https://clickear.github.io/%E5%BC%80%E5%B1%80%E9%98%B5%E5%AE%B9%E5%88%86%E6%9E%90%E4%B8%8E%E5%BA%94%E5%AF%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BC%80%E5%B1%80%E9%98%B5%E5%AE%B9%E5%88%86%E6%9E%90%E4%B8%8E%E5%BA%94%E5%AF%B9/</guid><description>为什么中路一般是法师？
为什么打野一般是战士或刺客？
为什么发育路一般是射手？
为什么对抗路一般是战士？
为什么游走一般功能性很强或很肉？</description></item><item><title>张良</title><link>https://clickear.github.io/%E5%BC%A0%E8%89%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BC%A0%E8%89%AF/</guid><description/></item><item><title>张飞</title><link>https://clickear.github.io/%E5%BC%A0%E9%A3%9E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BC%A0%E9%A3%9E/</guid><description/></item><item><title>弱引用</title><link>https://clickear.github.io/%E5%BC%B1%E5%BC%95%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BC%B1%E5%BC%95%E7%94%A8/</guid><description>[!INFO] 提示 不管内存是否足够，只要发生GC，都会被回收
::使用场景 [[ThreadLocal]]、[[WeakHashMap]]</description></item><item><title>强引用</title><link>https://clickear.github.io/%E5%BC%BA%E5%BC%95%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BC%BA%E5%BC%95%E7%94%A8/</guid><description>类似 &amp;ldquo;Object obj = new Object()&amp;rdquo; 这类的引用，就是强引用，只要强引用存在，垃圾收集器永远不会回收被引用的对象。但是，如果我们错误地保持了强引用，比如：赋值给了 static 变量，那么对象在很长一段时间内不会被回收，会产生内存泄漏</description></item><item><title>当下的力量（珍藏版）-埃克哈特·托利</title><link>https://clickear.github.io/%E5%BD%93%E4%B8%8B%E7%9A%84%E5%8A%9B%E9%87%8F%E7%8F%8D%E8%97%8F%E7%89%88-%E5%9F%83%E5%85%8B%E5%93%88%E7%89%B9%E6%89%98%E5%88%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BD%93%E4%B8%8B%E7%9A%84%E5%8A%9B%E9%87%8F%E7%8F%8D%E8%97%8F%E7%89%88-%E5%9F%83%E5%85%8B%E5%93%88%E7%89%B9%E6%89%98%E5%88%A9/</guid><description>元数据 [!abstract] 当下的力量（珍藏版）
书名： 当下的力量（珍藏版） 作者： 埃克哈特·托利 简介： 17年蝉联美国亚马逊畅销书排行榜，翻译成50多种文字，畅销全球500多万册。我们这个时代最具影响力的心灵经典。身心灵畅销作家张德芬导读推荐。这是一本不能用大脑读的书。这也是一本百读不厌的书。每一次读它，我都有新的收获。 出版时间 2013-07-01 00:00:00 ISBN： 9787508640099 分类： 个人成长-情绪心灵 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>当前读</title><link>https://clickear.github.io/%E5%BD%93%E5%89%8D%E8%AF%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BD%93%E5%89%8D%E8%AF%BB/</guid><description> [!TIP] 技巧💡
读取记录最新版本，会加锁保证不并发修改。
实际上是一种加锁的操作，是悲观锁的实现
特殊查询 select .. where ？ for update 加S锁 select .. where ？ lock in share mode 加x锁 insert，update，delete等 DML操作 加x锁</description></item><item><title>微习惯：简单到不可能失败的自我管理法则-斯蒂芬·盖斯</title><link>https://clickear.github.io/%E5%BE%AE%E4%B9%A0%E6%83%AF%E7%AE%80%E5%8D%95%E5%88%B0%E4%B8%8D%E5%8F%AF%E8%83%BD%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%87%AA%E6%88%91%E7%AE%A1%E7%90%86%E6%B3%95%E5%88%99-%E6%96%AF%E8%92%82%E8%8A%AC%E7%9B%96%E6%96%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BE%AE%E4%B9%A0%E6%83%AF%E7%AE%80%E5%8D%95%E5%88%B0%E4%B8%8D%E5%8F%AF%E8%83%BD%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%87%AA%E6%88%91%E7%AE%A1%E7%90%86%E6%B3%95%E5%88%99-%E6%96%AF%E8%92%82%E8%8A%AC%E7%9B%96%E6%96%AF/</guid><description>元数据 [!abstract] 微习惯：简单到不可能失败的自我管理法则
书名： 微习惯：简单到不可能失败的自我管理法则 作者： 斯蒂芬·盖斯 简介： 微习惯是一种非常微小的积极行为，你需要每天强迫自己完成它。微习惯太小，小到不可能失败。正是因为这个特性，它不会给你造成任何负担，而且具有超强的“欺骗性”，它也因此成了极具优势的习惯养成策略。微习惯策略的科学原理表明了人们无法长期坚持大多数主流成长策略的原因，也揭示了人们长期坚持微习惯策略的可能性。人们无法让改变的效果持久时，往往认为原因在于自己，但其实有问题的并不是他们本身，而是他们采用的策略。当你开始用微习惯策略教你的方法按照大脑的规律做事情时，持久改变其实很容易。 出版时间 2016-09-01 00:00:00 ISBN： 9787210086741 分类： 个人成长-人生哲学 出版社： 江西人民出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>微信读书清单</title><link>https://clickear.github.io/%E5%BE%AE%E4%BF%A1%E8%AF%BB%E4%B9%A6%E6%B8%85%E5%8D%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BE%AE%E4%BF%A1%E8%AF%BB%E4%B9%A6%E6%B8%85%E5%8D%95/</guid><description>微信读书笔记清单 1 2 3 4 5 6 7 8 9 10 11 12 13 const groups = dv.pages(&amp;#39;#weread and -&amp;#34;Extras&amp;#34;&amp;#39;).</description></item><item><title>微微一笑很倾城-顾漫</title><link>https://clickear.github.io/%E5%BE%AE%E5%BE%AE%E4%B8%80%E7%AC%91%E5%BE%88%E5%80%BE%E5%9F%8E-%E9%A1%BE%E6%BC%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BE%AE%E5%BE%AE%E4%B8%80%E7%AC%91%E5%BE%88%E5%80%BE%E5%9F%8E-%E9%A1%BE%E6%BC%AB/</guid><description>元数据 [!abstract] 微微一笑很倾城
书名： 微微一笑很倾城 作者： 顾漫 简介： 前脚“前夫”才“移情别恋”娶了第一美女，后脚就有第一高手来求婚？还说要给一个更盛大的婚礼？名校计算机系的系花贝微微一边囧着，一边……飞快地嫁了。如果一个被无数人仰望的传奇人物、名校顶尖牛人，第一次见面就反问你，“我们什么时候不是那种关系了”，你会怎么反应？那人出身世家，运动全能，外表风雅，气质清华，举止从容，本质……土匪……还傲慢得要死要活…… 出版时间 2009-08-01 00:00:00 ISBN： 9787539932811 分类： 精品小说-青春文学 出版社： 江苏文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>必然（KK三部曲·展望）-凯文·凯利</title><link>https://clickear.github.io/%E5%BF%85%E7%84%B6KK%E4%B8%89%E9%83%A8%E6%9B%B2%E5%B1%95%E6%9C%9B-%E5%87%AF%E6%96%87%E5%87%AF%E5%88%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BF%85%E7%84%B6KK%E4%B8%89%E9%83%A8%E6%9B%B2%E5%B1%95%E6%9C%9B-%E5%87%AF%E6%96%87%E5%87%AF%E5%88%A9/</guid><description>元数据 [!abstract] 必然（KK三部曲·展望）
书名： 必然（KK三部曲·展望） 作者： 凯文·凯利 简介： 互联网发展的“风向标”KK 的最新力作。 这不是一本科技著作，也不单纯是一本思想著作，而是一个人倾尽心力为未来30年人类命运做的一次掐算。 读过《失控》的人都知道，凯文·凯利说对了此前的30年。你愿意相信他所猜想的后30年吗？ 出版时间 2016-01-01 00:00:00 ISBN： 9787121272394 分类： 文学-经典作品 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>必须犯规的游戏（全集）-宁航一</title><link>https://clickear.github.io/%E5%BF%85%E9%A1%BB%E7%8A%AF%E8%A7%84%E7%9A%84%E6%B8%B8%E6%88%8F%E5%85%A8%E9%9B%86-%E5%AE%81%E8%88%AA%E4%B8%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BF%85%E9%A1%BB%E7%8A%AF%E8%A7%84%E7%9A%84%E6%B8%B8%E6%88%8F%E5%85%A8%E9%9B%86-%E5%AE%81%E8%88%AA%E4%B8%80/</guid><description>元数据 [!abstract] 必须犯规的游戏（全集）
书名： 必须犯规的游戏（全集） 作者： 宁航一 简介： 南派三叔推荐！“中国的希区柯克”宁航一经典悬疑力作！曾获中国悬疑小说排行榜第一名！同名网剧即将开播！喜马拉雅同名有声书播放量超过1800万！又名《惊魂十四日》《1/14系列》14个悬疑小说家被困在一起，每人必须创作一个悬疑故事，胜者才能逃出生天！南派三叔：中国的悬疑探险小说界，未来可关注两个人，一个是贰十三，另一个，是宁航一。翻开本书，开始一场头皮发麻的死亡游戏！14个小说家，14天，14个恐怖惊悚的故事，一场死亡游戏已经开始。14个悬疑小说作家被“邀请”到一个神秘场所，每个人都必须即兴创作一个悬疑故事说给其他人听，说完后所有人打分，得分最高的人可以决定每个人的生死！然而诡异事件接连发生，人数日趋减少。神秘主办者究竟是谁？谁能逃出生天？一个恐怖的秘密在最后揭晓…… 出版时间 2018-11-01 00:00:00 ISBN： 9787559401359 分类： 精品小说-悬疑推理 出版社： 长江文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>快照读</title><link>https://clickear.github.io/%E5%BF%AB%E7%85%A7%E8%AF%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BF%AB%E7%85%A7%E8%AF%BB/</guid><description> [!TIP] 快照读💡
读取记录的可见版本（可能是历史版本），不加锁； 普通的select都是快照读 之所以出现快照读的情况，是基于提高并发性能的考虑，快照读的实现是基于多版本并发控制，即MVCC,可以认为MVCC是行锁的一个变种，但它在很多情况下，避免了加锁操作，降低了开销；既然是基于多版本，即快照读可能读到的并不一定是数据的最新版本，而有可能是之前的历史版本.
[!TIP] 技巧💡
说白了**[[MVCC]]就是为了实现读-写冲突不加锁**，而这个读指的就是快照读, 而非当前读，当前读实际上是一种加锁的操作，是悲观锁的实现</description></item><item><title>思考的乐趣：Matrix67数学笔记-顾森</title><link>https://clickear.github.io/%E6%80%9D%E8%80%83%E7%9A%84%E4%B9%90%E8%B6%A3Matrix67%E6%95%B0%E5%AD%A6%E7%AC%94%E8%AE%B0-%E9%A1%BE%E6%A3%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%80%9D%E8%80%83%E7%9A%84%E4%B9%90%E8%B6%A3Matrix67%E6%95%B0%E5%AD%A6%E7%AC%94%E8%AE%B0-%E9%A1%BE%E6%A3%AE/</guid><description>元数据 [!abstract] 思考的乐趣：Matrix67数学笔记
书名： 思考的乐趣：Matrix67数学笔记 作者： 顾森 简介： 本书内容大多是从作者6年多以来积累的上千篇博客中节选而来的，分为“生活中的数学”、“数学之美”、“几何的大厦”、“精妙的证明”和“思维的尺度”五部分。书中基本不涉及高深的数学理论，但是内容新颖、时尚，既有与现实生活联系紧密的应用型话题，又有打通几何、代数联系的富有启发性的讨论，还间或介绍了一些著名数学难题的最新研究进展，信息十分丰富。本书是广大数学爱好者的美味佳肴，只要具备简单数学基础即能阅读。 出版时间 2012-07-01 00:00:00 ISBN： 9787115275868 分类： 科学技术-科学科普 出版社： 人民邮电出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>思考，快与慢-丹尼尔·卡尼曼</title><link>https://clickear.github.io/%E6%80%9D%E8%80%83%E5%BF%AB%E4%B8%8E%E6%85%A2-%E4%B8%B9%E5%B0%BC%E5%B0%94%E5%8D%A1%E5%B0%BC%E6%9B%BC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%80%9D%E8%80%83%E5%BF%AB%E4%B8%8E%E6%85%A2-%E4%B8%B9%E5%B0%BC%E5%B0%94%E5%8D%A1%E5%B0%BC%E6%9B%BC/</guid><description>元数据 [!abstract] 思考，快与慢
书名： 思考，快与慢 作者： 丹尼尔·卡尼曼 简介： 诺贝尔经济学奖得主丹尼尔·卡尼曼经典之作，彻底颠覆你对思考的看法！横扫全球各大畅销书排行榜，《经济学人》年度十佳图书，巴曙松、何帆、王福重等知名经济学家高度评价。卡尼曼认为，我们的大脑有快与慢两种作决定的方式，常用的无意识的“系统1”和有意识的“系统2”。他还介绍了很多经典有趣的行为实验，指出我们在什么情况下可以相信自己的直觉，什么时候不能相信；指导我们如何在商场、职场和个人生活中作出更好的选择，以及如何运用不同技巧来避免那些常使我们陷入麻烦的思维失误。 出版时间 2012-07-01 00:00:00 ISBN： 9787508633558 分类： 个人成长-认知思维 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>恶意-东野圭吾</title><link>https://clickear.github.io/%E6%81%B6%E6%84%8F-%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%81%B6%E6%84%8F-%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/</guid><description>元数据 [!abstract] 恶意
书名： 恶意 作者： 东野圭吾 简介：
★ 东野圭吾名作，2022版新译本！ ★ 与《白夜行》《嫌疑人X的献身》《解忧杂货店》并称东野圭吾四大杰作，从《恶意》开始真正认识东野圭吾
★ 深刻揭示人性，处处是悬念，加贺恭一郎系列扛鼎之作</description></item><item><title>意向锁</title><link>https://clickear.github.io/%E6%84%8F%E5%90%91%E9%94%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%84%8F%E5%90%91%E9%94%81/</guid><description>[!TIP] 技巧💡
innodb的意向锁主要用户多粒度的锁并存的情况。在插入表级锁的时候，就不用每行都去判断。
innodb的意向锁主要用户多粒度的锁并存的情况。比如事务A要在一个表上加S锁，如果表中的一行已被事务B加了X锁，那么该锁的申请也应被阻塞。如果表中的数据很多，逐行检查锁标志的开销将很大，系统的性能将会受到影响。为了解决这个问题，可以在表级上引入新的锁类型来表示其所属行的加锁情况，这就引出了“意向锁”的概念。举个例子，如果表中记录1亿，事务A把其中有几条记录上了行锁了，这时事务B需要给这个表加表级锁，如果没有意向锁的话，那就要去表中查找这一亿条记录是否上锁了。如果存在意向锁，那么假如事务Ａ在更新一条记录之前，先加意向锁，再加Ｘ锁，事务B先检查该表上是否存在意向锁，存在的意向锁是否与自己准备加的锁冲突，如果有冲突，则等待直到事务Ａ释放，而无须逐条记录去检测。事务Ｂ更新表时，其实无须知道到底哪一行被锁了，它只要知道反正有一行被锁了就行了。主要作用是处理行锁和表锁之间的矛盾，能够显示“某个事务正在某一行上持有了锁，或者准备去持有锁”。
作者：zhoulujun
链接：https://juejin.cn/post/6844903974282362887
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</description></item><item><title>意识与操作</title><link>https://clickear.github.io/%E6%84%8F%E8%AF%86%E4%B8%8E%E6%93%8D%E4%BD%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%84%8F%E8%AF%86%E4%B8%8E%E6%93%8D%E4%BD%9C/</guid><description>意识，也称为大局观。
何谓意识？
从红蓝刷新时间，能推理出对手打野的当前位置。
能分析当前应该选 50 还是 41，32 的对抗模型。
打团能知道对方的核心输出点以及我方的核心防守点。比如盾山、鬼谷子和东皇张良这种英雄，怎么防。闪现时间。这些英雄能对团队的成败，起到关键作用。
操作，最关键的就是对场上 10 个英雄的理解以及自己英雄的操作熟练度。</description></item><item><title>慢查询日志</title><link>https://clickear.github.io/%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/</guid><description>慢查询会导致CPU，IOPS，内存消耗过高。当数据库遇到性能瓶颈时，大部分时间都是由于慢查询导致的。 开启慢查询日志，可以让MySQL记录下查询超过指定时间的语句，之后运维人员通过定位分析，能够很好的优化数据库性能。
慢查询日志记录的慢查询不仅仅是执行比较慢的SELECT语句，还有INSERT，DELETE，UPDATE，CALL等DML操作，只要超过了指定时间，都可以称为&amp;quot;慢查询&amp;quot;，被记录到慢查询日志中。
默认情况下，慢查询日志是不开启的，只有手动开启了，慢查询才会被记录到慢查询日志中
参数 slow_query_log: 慢查询开关，表示是否打开慢查询日志 long_query_time: 慢查询指定时间设置，表示&amp;quot;多长时间的查询&amp;quot;被认定为&amp;quot;慢查询&amp;quot;，单位是秒(s)，默认是10s，即超过10s的查询都被认定为慢查询。 log_queries_not_using_indexes: 表示如果运行的SQL语句没有使用到索引，是否也被当作慢查询语句记录到慢查询记录中，OFF表示不记录，ON表示记录。 slow_query_log_file: 当使用文件存储慢查询日志时(log_output设置为&amp;quot;FILE&amp;quot;或者&amp;quot;FILE,TABLE&amp;quot;时)，制定慢查询日志存储在哪个文件中，默认的文件名是&amp;quot;主机名-slow.log&amp;quot;，存储目录为数据目录 log_throttle_queries_not_using_indexes: MySQL5.6.5版本新引入的参数，用来限制没有使用索引的语句每分钟记录到慢查询日志中的次数。在生产环境中，有可能有很多没有使用索引的语句，可能会导致慢查询日志快速增长。</description></item><item><title>成都，今夜请将我遗忘-慕容雪村</title><link>https://clickear.github.io/%E6%88%90%E9%83%BD%E4%BB%8A%E5%A4%9C%E8%AF%B7%E5%B0%86%E6%88%91%E9%81%97%E5%BF%98-%E6%85%95%E5%AE%B9%E9%9B%AA%E6%9D%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%88%90%E9%83%BD%E4%BB%8A%E5%A4%9C%E8%AF%B7%E5%B0%86%E6%88%91%E9%81%97%E5%BF%98-%E6%85%95%E5%AE%B9%E9%9B%AA%E6%9D%91/</guid><description>元数据 [!abstract] 成都，今夜请将我遗忘
书名： 成都，今夜请将我遗忘 作者： 慕容雪村 简介： 本书为慕容雪村长篇小说处女作，也是改变其人生命运的成名作。小说以成都为舞台，描写了几个毕业不久的大学生，在感情、婚姻、事业上的追求、彷徨和挣扎：他们的灵魂仍在仰望星空，追寻着当初的纯真理想，而身体却已在纸醉金迷、物欲横流的都市中沉沦…… 出版时间 2009-01-01 00:00:00 ISBN： 9787807594215 分类： 精品小说-社会小说 出版社： 万卷出版公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>我所理解的生活-韩寒</title><link>https://clickear.github.io/%E6%88%91%E6%89%80%E7%90%86%E8%A7%A3%E7%9A%84%E7%94%9F%E6%B4%BB-%E9%9F%A9%E5%AF%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%88%91%E6%89%80%E7%90%86%E8%A7%A3%E7%9A%84%E7%94%9F%E6%B4%BB-%E9%9F%A9%E5%AF%92/</guid><description>元数据 [!abstract] 我所理解的生活
书名： 我所理解的生活 作者： 韩寒 简介： 三十岁的男人开始系统地思考关于生活的一切，韩寒难得如此诚恳。第一次向读者展示生活中最真实的韩寒。在《我所理解的生活》中，韩寒讨论民主自由、针砭时弊，谈及感情、家庭、偶像，分享个人成长经历，诚恳地剖析自己。收录著名韩三篇，“谈革命”“说民主”“要自由”。在韩寒迄今为止所有作品中，《我所理解的生活》删减幅度最小。三十岁，韩寒争议不少，成绩更多。诚恳之作《我所理解的生活》，韩寒想说的都在这里了。 出版时间 2013-04-01 00:00:00 ISBN： 9787533936495 分类： 文学-散文杂著 出版社： 浙江文艺出版社 高亮划线 韩三篇 📌 我和各种各样的人聊天，他们对民主和自由的追求普遍不如文化界所想象的那么迫切，他们对强权和腐败的痛恨更多源于“为什么不是我自己或者我的亲戚得到了这一切”，而不是想该如何去限制和监督，只有倒霉到自己头上需要上访的时候，他们才会从词典里捡起这些词汇来保护自己，只要政府给他们补足了钱，他们就满意了。一切能用钱解决的社会矛盾都不算什么矛盾。而知识界普遍把国民对这些词汇的这种应急应用当成了他们的普遍诉求，认为国民与文化界形成了共识。我不认为在分歧和割裂这么大的国家里能有一场剧烈的变革。 ^5-2872-3111 ⏱ [[2022-05-27]] 02:18 读书笔记 韩三篇 划线评论 📌 当然也有人说，一些发达国家，他们的人民其实就是表面素质高，深交下去，人性也都是这样的，所以好的制度才是高素质的保障。这点我完全赞同。但我们说的就是表面素质，不要因为觉得人私底下是怎么样的而小看表面素质。民主的质量就是由国民的表面素质决定的。一个人开车可能关远光灯，对人彬彬有礼，遵守社会公德，但一交往，发现其实也自私懦弱狭隘贪婪……这又如何呢？素质和人性放在一起谈没意思，美国人的人性和中国人的人性说到底当然大同小异，全世界人类的人性都差不多。 ^10500316-7zymIdmFp 💭 素质和人性一起谈没意思。前者是社会制度和教育优越性的体现，后者其实全人类都差不多，但文化和环境能塑造和改变。 ⏱ [[2022-05-27]] 02:21 本书评论</description></item><item><title>我所认识的高效阅读者和思想家在阅读时不做笔记</title><link>https://clickear.github.io/%E6%88%91%E6%89%80%E8%AE%A4%E8%AF%86%E7%9A%84%E9%AB%98%E6%95%88%E9%98%85%E8%AF%BB%E8%80%85%E5%92%8C%E6%80%9D%E6%83%B3%E5%AE%B6%E5%9C%A8%E9%98%85%E8%AF%BB%E6%97%B6%E4%B8%8D%E5%81%9A%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%88%91%E6%89%80%E8%AE%A4%E8%AF%86%E7%9A%84%E9%AB%98%E6%95%88%E9%98%85%E8%AF%BB%E8%80%85%E5%92%8C%E6%80%9D%E6%83%B3%E5%AE%B6%E5%9C%A8%E9%98%85%E8%AF%BB%E6%97%B6%E4%B8%8D%E5%81%9A%E7%AC%94%E8%AE%B0/</guid><description>%%我的理解:: 做笔记能帮助我们进行思考。成功人士不做笔记就能成功，可能他足够聪明，记忆力足够强大，或者有其他才能帮助自己聚焦工作，而不意味着他不思考。我们之所以建议大多数人做常青笔记，是因为笔记可以成为我们普通人思考的一个绝佳手段。我在[[从anki、onenote到obsidian，一名小镇做题家的笔记进化史]]也简单提到自己高中从来不做笔记，却也能考上好大学，但这不意味着笔记没用，如果以现在的我去重读高中，我会有办法通过做笔记，用更少的时间取得当年一样的成绩。%%
Thoughts Memo 汉化组译制
原文： The most effective readers and thinkers I know don’t take notes when reading (andymatuschak.</description></item><item><title>我曾走在崩溃的边缘：俞敏洪亲述新东方创业发展之路-俞敏洪</title><link>https://clickear.github.io/%E6%88%91%E6%9B%BE%E8%B5%B0%E5%9C%A8%E5%B4%A9%E6%BA%83%E7%9A%84%E8%BE%B9%E7%BC%98%E4%BF%9E%E6%95%8F%E6%B4%AA%E4%BA%B2%E8%BF%B0%E6%96%B0%E4%B8%9C%E6%96%B9%E5%88%9B%E4%B8%9A%E5%8F%91%E5%B1%95%E4%B9%8B%E8%B7%AF-%E4%BF%9E%E6%95%8F%E6%B4%AA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%88%91%E6%9B%BE%E8%B5%B0%E5%9C%A8%E5%B4%A9%E6%BA%83%E7%9A%84%E8%BE%B9%E7%BC%98%E4%BF%9E%E6%95%8F%E6%B4%AA%E4%BA%B2%E8%BF%B0%E6%96%B0%E4%B8%9C%E6%96%B9%E5%88%9B%E4%B8%9A%E5%8F%91%E5%B1%95%E4%B9%8B%E8%B7%AF-%E4%BF%9E%E6%95%8F%E6%B4%AA/</guid><description>元数据 [!abstract] 我曾走在崩溃的边缘：俞敏洪亲述新东方创业发展之路
书名： 我曾走在崩溃的边缘：俞敏洪亲述新东方创业发展之路 作者： 俞敏洪 简介： 这本书是作者俞敏洪第一次完整、深度地讲述新东方从0到1、从1到N的创业历程，披露了诸多不为人知的细节，让人看到带领着新东方从一个培训班发展成为上市集团的创业者，以及他的团队曾经经过的至暗时刻，甚至曾走到崩溃的边缘。创业维艰，1/4个世纪的风雨征程，完整地被记录，激荡地再现了新东方创始团队及新东方人，在时代的光辉中砥砺前行的身影。延着内容主线，“三驾马车”的光阴故事已经留存，新生代的管理团队已在快速发展的互联网时代中开拓进取，搏出广阔天地，而今，人工智能浪潮下，新东方又将向何处进发，仍是新东方故事的待续篇章。相信这本书，定能让读者在作者个人一贯的幽默叙事方式中，在个人发展、组织建设、企业管理等多个方面受到启发和激励。 出版时间 2019-04-01 00:00:00 ISBN： 9787521703078 分类： 经济理财-管理 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>我的日程安排</title><link>https://clickear.github.io/%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92/</guid><description>自从我在 2019 年初开始在家独立工作以来，我发现有一个日程安排来指导我是非常有帮助的。当我的日子不顺利的时候，往往是因为早上有什么事情让我脱轨，而我从来没有真正回到正轨。 对我的生产力来说，最重要的是我是否完成了一个深度聚焦的早晨创作区。
自 2019 年年中以来，这一直是我的晨间日程：
上桌之前 醒来（6:30 左右） 自重锻炼 淋浴 遛狗、训狗和喂狗 冥想 煮一小杯咖啡（10g / 150mL） 上午第一节 (~7:30 – 10) 开始做[[每日工作日志]]，用一分钟左右的时间写下我的感受和我一天的打算。 做[[我的晨间写作]]，通常到 10:00 左右 我交替使用 35 分钟的集中处理单元任务时间和 5 分钟的休息时间，在此期间，我在家里走来走去，捡东西，为晚餐做准备工作，等等。 煮一小杯咖啡（10g / 150mL） 在每天的这个时间点之前，我不会让自己使用互联网。它分散了我的注意力，但更重要的是，我发现让我的脑子里充满别人的声音会加剧 很难听到自己的想法。</description></item><item><title>我的晨间写作</title><link>https://clickear.github.io/%E6%88%91%E7%9A%84%E6%99%A8%E9%97%B4%E5%86%99%E4%BD%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%88%91%E7%9A%84%E6%99%A8%E9%97%B4%E5%86%99%E4%BD%9C/</guid><description>%%我的理解:: [[» Daily notes工作流]]的实践指南。%%
Thoughts Memo 汉化组译制
原文： My morning writing practice (andymatuschak.org)
[[我的日程安排]]中，办公桌外的活动完成后，我就开始当天第一项严肃创意工作：写作、修改[[常青笔记]]至少两个小时。这通常是我一天中最有挑战的工作，所以我喜欢挑我思绪清，足够专注的时候做完成件事。写常青笔记不是传统意义上的「记笔记」——写下别人的想法，或记录发生的事情——，其目的是完善想法。(即[[大多数人把笔记当作贮藏容器或思想草稿]]，对比[[常青笔记有助于积累洞见]])
我通常先开启写作收件箱（[[为临时性的和不完整的笔记设置写作收件箱]]），翻阅收件箱中的提示和不完整的笔记。如果有什么内容激发了我的想法，我便就此起草[[常青笔记]]。书写笔记的跨度可能不止一天：我可能把笔记大大充实一番，直到筋疲力尽，便将笔记存在收件箱里，改天再完成。
如果收件箱东西较少，我会拿出便笺（ 用口袋便笺将外出时的收获捕捉到写作收件箱），用其中内容填满收件箱。我不会强制把便笺内容全都填进去：如果便笺里什么提示都没意思，我就把最无聊的卡片归档，然后开始下一步。</description></item><item><title>戒糖：改变一生的科学饮食法-初夏之菡</title><link>https://clickear.github.io/%E6%88%92%E7%B3%96%E6%94%B9%E5%8F%98%E4%B8%80%E7%94%9F%E7%9A%84%E7%A7%91%E5%AD%A6%E9%A5%AE%E9%A3%9F%E6%B3%95-%E5%88%9D%E5%A4%8F%E4%B9%8B%E8%8F%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%88%92%E7%B3%96%E6%94%B9%E5%8F%98%E4%B8%80%E7%94%9F%E7%9A%84%E7%A7%91%E5%AD%A6%E9%A5%AE%E9%A3%9F%E6%B3%95-%E5%88%9D%E5%A4%8F%E4%B9%8B%E8%8F%A1/</guid><description>元数据 [!abstract] 戒糖：改变一生的科学饮食法
书名： 戒糖：改变一生的科学饮食法 作者： 初夏之菡 简介： “戒糖”是不是不吃糖？代糖不含糖，可不可以随便吃？“戒糖”就能让人变瘦、皮肤变好吗？……关于“戒糖”这一热门话题，人们有很多困惑与问题。由于大量对“糖”危害的解读以及“戒糖”前后对比案例的出现，在理解原理之前，很多人就已经热情加入了“戒糖打卡”的行列……可是为什么吃糖会让我们感到愉悦并且一吃就停不下来，有没有理性与糖相处的健康饮食法呢？你困惑的问题，在本书中都将得到解答。作者综合多年营养学研究、从业经验，以“戒糖”为核心，从科学理解糖在体内的代谢原理，到淀粉、主食、碳水化合物之间的关系，再到糖的形式和来源，全面梳理戒糖的底层逻辑与背后原理，为你积累“戒糖”基础知识。此外，还将为你提供食品标签怎么看、4种不同热量需求的美食食谱、喝了不发胖的甜蜜饮料、正确的买菜顺序等实用科学饮食解决方案。本书将助你找到饮食与身体的节律，学会用一种审慎的态度看待糖，逐渐养成受用一生的健康饮食习惯。 出版时间 2020-10-01 00:00:00 ISBN： 9787521714463 分类： 医学健康-健康 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>所处物理环境对学习和工作效率影响极大</title><link>https://clickear.github.io/%E6%89%80%E5%A4%84%E7%89%A9%E7%90%86%E7%8E%AF%E5%A2%83%E5%AF%B9%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E5%BD%B1%E5%93%8D%E6%9E%81%E5%A4%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%89%80%E5%A4%84%E7%89%A9%E7%90%86%E7%8E%AF%E5%A2%83%E5%AF%B9%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E5%BD%B1%E5%93%8D%E6%9E%81%E5%A4%A7/</guid><description>原话摘录 “她是一定要去图书馆、自习室学习的，在这些环境中，她会有一种“表演型学习”的心理。因为把自己放到了一个有他人的目光的环境中，她就很自然地开始扮演“认真努力”的角色。” ( pdf) &amp;gt; 我也是，中招，伪学霸，学酥
“我们必须和环境保持平衡，才能正常地生活。在信息方面也是如此，我们需要从环境中， 获得一定量的信息。如果待在没有任何人、任何生物的地方，我们会因为“感觉剥夺”， 而感到难以忍受的痛苦和焦虑。” ( pdf)
利用表演心理，让自己开始扮演努力认真的角色 我一开始也是伪学霸，去图书馆玩手机一整天啥东西都没学那种。但这种情况，也比在宿舍呆着好一万倍。因为去图书馆，有时候玩手机太久了也会感觉不好意思，慢慢潜移默化多少学一点，在宿舍，就等着堕落和腐朽吧。
““表演型学习”的心理动机，就来源于他人在场所带来的观众效应。当我们身处于群体之 中，会有管理形象的需求，我们需要在意别人怎么看自己。” ([pdf](zotero://open-pdf/library/items/HLZECHH5?page=2&amp;amp;annotation=3PIS2UCS)) 人类本能需要我们和环境保持平衡，绝对安静的环境不如白噪声环境。 真空和绝对安静的环境，会冥冥中带给人不安全感。图书馆自习室等公共场所，有环境声，能给人安全感。
需要对他人负责，用这种心理状态构成双重的物理和心理环境，给自己内驱力。 “真的很有意思。一个人在做那些只需要对自己负责的事情时，即使渴望变强的心思再强 烈，这件事情对 TA 再重要，也往往难以带来真正的行动力。都说人要为自己负责，要为 自己的人生和前程努力奋斗，但极少人能做到为目标坚持不懈。 而一旦这件事儿需要对他人负责，甚至这个“他人”不需要多权威，带来的后果不需要多 严重，你也会尽力把它做好。” ( pdf)</description></item><item><title>手写系列</title><link>https://clickear.github.io/%E6%89%8B%E5%86%99%E7%B3%BB%E5%88%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%89%8B%E5%86%99%E7%B3%BB%E5%88%97/</guid><description>GitHub - alchemystar/Freedom: 自己DIY一个具有ACID的数据库</description></item><item><title>打团先手与后手</title><link>https://clickear.github.io/%E6%89%93%E5%9B%A2%E5%85%88%E6%89%8B%E4%B8%8E%E5%90%8E%E6%89%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%89%93%E5%9B%A2%E5%85%88%E6%89%8B%E4%B8%8E%E5%90%8E%E6%89%8B/</guid><description/></item><item><title>打野</title><link>https://clickear.github.io/%E6%89%93%E9%87%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%89%93%E9%87%8E/</guid><description>打野应该顺势而为，顺路。
技能cd或残血时，打野怪 红蓝buff刷新时，及时赶回去，不在线上恋战 不花超过5s以上去蹲人而浪费发育时间 对地方的红蓝buff刷新时间要有掌握，学会看对方打野身上的buff判断。 对方打野是否刚交惩戒，对于入侵野区和rush龙非常重要。</description></item><item><title>把时间当作朋友（第3版）-李笑来</title><link>https://clickear.github.io/%E6%8A%8A%E6%97%B6%E9%97%B4%E5%BD%93%E4%BD%9C%E6%9C%8B%E5%8F%8B%E7%AC%AC3%E7%89%88-%E6%9D%8E%E7%AC%91%E6%9D%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%8A%8A%E6%97%B6%E9%97%B4%E5%BD%93%E4%BD%9C%E6%9C%8B%E5%8F%8B%E7%AC%AC3%E7%89%88-%E6%9D%8E%E7%AC%91%E6%9D%A5/</guid><description>元数据 [!abstract] 把时间当作朋友（第3版）
书名： 把时间当作朋友（第3版） 作者： 李笑来 简介： 这本书从心智成长的角度来谈自我积累。作者通过自己职业生涯中遇到的事例，告诉我们：如何打开心智，如何运用心智来和时间做朋友，从而开启人生的成功旅程。为什么你总是觉得“没有时间了”？节省时间的方式其实是学习。为什么你“砍柴”而不肯“磨刀”？基于过程的记录，为什么迥异于基于结果的记录？一个人对时间的精确感知能力真的能训练得像特异功能？都是平凡人，为什么若干年后已有天壤之别？时间这条船，为什么只送心智成熟的人去往梦想的彼岸？绝大多数的成功与智商没有任何关系，所有的失败都与且只与时间有关。当你把时间花在一个人身上的时候，相当于在他的身上倾注了你生命的一段，不管最终结果如何，反正，那个人、那件事都成了你生命的一部分——不管最后你是喜欢还是不喜欢。 出版时间 2013-10-01 00:00:00 ISBN： 9787121210273 分类： 个人成长-人生哲学 出版社： 电子工业出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>拆屋效应</title><link>https://clickear.github.io/%E6%8B%86%E5%B1%8B%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%8B%86%E5%B1%8B%E6%95%88%E5%BA%94/</guid><description>指先提出很大、较多的要求，接着提出较小、较少的要求，最后使双方达成协议的现象。[可追溯至鲁迅先生于 1927 年在《无声的中国》一文中的内容：“中国人的性情总是喜欢调和、折中的、譬如你说，这屋子太暗，说在这里开一个天窗，大家一定是不允许的，但你主张拆掉屋顶，他们就会来调和，愿意开天窗了“。理论首次由 J.L.Freedman 和 S.C.Fraser 于 1966 年做的“无压力的屈从——登门槛技术”的现场实验中提出。]
案例：供应商一开始报价了一个很高的报价，并表示价格是底价了，当你表示已经有合作单位时，对方往往会给出一个很有诚意的惊喜低价。</description></item><item><title>拆掉思维里的墙（白金升级版）-古典</title><link>https://clickear.github.io/%E6%8B%86%E6%8E%89%E6%80%9D%E7%BB%B4%E9%87%8C%E7%9A%84%E5%A2%99%E7%99%BD%E9%87%91%E5%8D%87%E7%BA%A7%E7%89%88-%E5%8F%A4%E5%85%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%8B%86%E6%8E%89%E6%80%9D%E7%BB%B4%E9%87%8C%E7%9A%84%E5%A2%99%E7%99%BD%E9%87%91%E5%8D%87%E7%BA%A7%E7%89%88-%E5%8F%A4%E5%85%B8/</guid><description>元数据 [!abstract] 拆掉思维里的墙（白金升级版）
书名： 拆掉思维里的墙（白金升级版） 作者： 古典 简介： 新一代人生设计师古典倾情打造“人生开窍手册”：心理学、职业规划、人生哲学。你是否缺少安全感？你会经常觉得累？结婚一定要买房吗？你认为坚持就一定会成功？你总忍不住与别人比较？只有有钱才能够幸福？老板可以掌控吗？小人物就无法对抗不公平吗？不喜欢现在的工作却又不知道自己该干什么？对现在的生活不满意，但却因为父母、老婆或者孩子不得不这样过下去？每天都在混日子，却幻想有一天找到自己真正喜欢的事业就一定会全心投入？如果有一个回答是“YES”，那么这本书就是你想要的。也许，连我们自己也不曾意识到，那些困惑背后，往往藏着一堵堵思维里的墙，阻碍着我们，把我们与美好的生活隔开了。拆掉思维里的那些墙，你就可以获得成功、快乐、自信和幸福。从“IMPOSSIBLE”到“I’MPOSSIBLE”，只须一点改变，你的人生也许就此大不相同。 出版时间 2021-11-01 00:00:00 ISBN： 9787521735468 分类： 心理-认知与行为 出版社： 中信出版社 高亮划线 价值不分高低，每一个都很珍贵 📌 我曾经带几个企业家去乡村小学探访，那里是我们定点捐赠的公益学校。在校长办公室门口，我们看到了款项分配公告：捐赠款额度：每月300元。发放人：张二狗（编的假名）。情况说明：家里父亲工伤致残，母亲智力减退，姐姐辍学在家。和我们一起去的一个企业家“炸”了。她是个有爱心、有良知的人，她质问陪同的校长：“你们怎么能够通过暴露孩子的隐私来发钱？你知道这对孩子的心灵会造成多大伤害吗？”校长面对指责，转过身来，不卑不亢地说：“我当然知道这样对孩子的伤害很大。我也是师范大学本科毕业。但你知道不，我们这个班每个孩子的家庭都很苦很苦，很多人一个星期只带着3斤大米来学校，连菜都吃不起。我不这么写，这笔钱就发不到这个孩子手上，这个孩子就连来都来不了了。”所有人都愣住了，我们都知道，他说得对——在任何话语体系中，饥饿都是更大的真理。这世上也许未来、也许另一个学校会想出更好的方法，但在此时此地，这位校长做的才是真理。 ^9-1544-2167 ⏱ [[2022-06-11]] 09:59 读书笔记 本书评论 书评 No.</description></item><item><title>指令重排</title><link>https://clickear.github.io/%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92/</guid><description>DCL(Double Check) 单实例需不需要 [volatile] [[单例模式]]
[!TIP] 技巧💡
简单来说，就是 Clss instance = new Clss();
有4个步骤。new对象，不存储指令重排情况。剩下3个步骤，是没有前后顺序要求的。可能存储重排情况。
一个是记录引用位置，
一个是将引用位置的内存初始化数据，
一个是将引用地址存到本地变量表中
当发生指令重排序时，其他线程就很有可能获取到对象，但是该对象还没有初始化，这个时候恰好我们需要使用到未初始化数据，则会报错。 可能发生指令重排，在第二个线程判断未空对象时，使用了半初始化状态的对象。 内存屏障，在读写内存时加额外操作</description></item><item><title>指针压缩</title><link>https://clickear.github.io/%E6%8C%87%E9%92%88%E5%8E%8B%E7%BC%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%8C%87%E9%92%88%E5%8E%8B%E7%BC%A9/</guid><description>::指针压缩 这涉及到[[对象存储布局]]，在对象的存储布局中，会有kclass指向类元数据。如果开启了指针压缩，指针地址就是4字节。
好处:
加了GC开销：64位对象引用需要占用更多的堆空间，留给其他数据的空间将会减少，
从而加快了GC的发生，更频繁的进行GC。
降低CPU缓存命中率：64位对象引用增大了，CPU能缓存的oop将会更少，从而降低了CPU缓存的效率
4Byte = 32bit，即可以表示2^32 = 4GB。如果内存地址是指向 bit的话，32位的最大寻址范围其实是 512MB，但是由于内存里，将8bit为一组划分，所以内存地址就其实是指向的8bit为一组的byte地址，所以32位可以表示的容量就扩充了8倍，就变成了4GB。</description></item><item><title>推荐使用 LongAdder 对象，比 AtomicLong 性能更好（减少乐观锁的重试次数）</title><link>https://clickear.github.io/%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8-LongAdder-%E5%AF%B9%E8%B1%A1%E6%AF%94-AtomicLong-%E6%80%A7%E8%83%BD%E6%9B%B4%E5%A5%BD%E5%87%8F%E5%B0%91%E4%B9%90%E8%A7%82%E9%94%81%E7%9A%84%E9%87%8D%E8%AF%95%E6%AC%A1%E6%95%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8-LongAdder-%E5%AF%B9%E8%B1%A1%E6%AF%94-AtomicLong-%E6%80%A7%E8%83%BD%E6%9B%B4%E5%A5%BD%E5%87%8F%E5%B0%91%E4%B9%90%E8%A7%82%E9%94%81%E7%9A%84%E9%87%8D%E8%AF%95%E6%AC%A1%E6%95%B0/</guid><description> [!NOTE] 笔记
AtomicLong做累加的时候实际上就是多个线程操作同一个目标资源。在高并发时，只有一个线程是执行成功的，其他的线程都会失败，不断自旋（重试），自旋会成为瓶颈。 LongAdder，把要操作的目标资源「分散」到数组Cell中。每个线程对自己的 Cell 变量的 value 进行原子操作，大大降低了失败的次数</description></item><item><title>操作设置与三指</title><link>https://clickear.github.io/%E6%93%8D%E4%BD%9C%E8%AE%BE%E7%BD%AE%E4%B8%8E%E4%B8%89%E6%8C%87/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%93%8D%E4%BD%9C%E8%AE%BE%E7%BD%AE%E4%B8%8E%E4%B8%89%E6%8C%87/</guid><description/></item><item><title>攀岩入门</title><link>https://clickear.github.io/%E6%94%80%E5%B2%A9%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%94%80%E5%B2%A9%E5%85%A5%E9%97%A8/</guid><description>前几次，到达中上，力竭的时候，浑身紧张发抖，害怕地无以复加。因为没有跳下去感受过阻尼绳的感觉，那时候都感觉自己可能随时要摔死了。
现在的确臂力不行，体重太大，去玩 2 躺人就废了，以后如果能重新拾起健身并成功减脂，可以再回头来玩玩看体验体验。</description></item><item><title>收件箱维护的分流策略（如「收件箱归零」）往往不够稳健</title><link>https://clickear.github.io/%E6%94%B6%E4%BB%B6%E7%AE%B1%E7%BB%B4%E6%8A%A4%E7%9A%84%E5%88%86%E6%B5%81%E7%AD%96%E7%95%A5%E5%A6%82%E6%94%B6%E4%BB%B6%E7%AE%B1%E5%BD%92%E9%9B%B6%E5%BE%80%E5%BE%80%E4%B8%8D%E5%A4%9F%E7%A8%B3%E5%81%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%94%B6%E4%BB%B6%E7%AE%B1%E7%BB%B4%E6%8A%A4%E7%9A%84%E5%88%86%E6%B5%81%E7%AD%96%E7%95%A5%E5%A6%82%E6%94%B6%E4%BB%B6%E7%AE%B1%E5%BD%92%E9%9B%B6%E5%BE%80%E5%BE%80%E4%B8%8D%E5%A4%9F%E7%A8%B3%E5%81%A5/</guid><description>%%我的理解:: 就像软件项目经常会面临变数导致延期，使得短期内的问题单积压，导致开发团队处理不过来。空喊问题单清零的口号反而可能适得其反，与其天天喊着清零，不如增加这些单子的可容忍时长，以时间换空间。%%
Thoughts Memo 汉化组译制
原文： Triage strategies for maintaining inboxes (e.g. Inbox Zero) are often too brittle (andymatuschak.</description></item><item><title>收件箱需要可靠的清空流程才有效</title><link>https://clickear.github.io/%E6%94%B6%E4%BB%B6%E7%AE%B1%E9%9C%80%E8%A6%81%E5%8F%AF%E9%9D%A0%E7%9A%84%E6%B8%85%E7%A9%BA%E6%B5%81%E7%A8%8B%E6%89%8D%E6%9C%89%E6%95%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%94%B6%E4%BB%B6%E7%AE%B1%E9%9C%80%E8%A6%81%E5%8F%AF%E9%9D%A0%E7%9A%84%E6%B8%85%E7%A9%BA%E6%B5%81%E7%A8%8B%E6%89%8D%E6%9C%89%E6%95%88/</guid><description>%%我的理解:: 任务需要闭环收敛，才能往下走，因此inbox需要有机制去清空。%%
Thoughts Memo 汉化组译制
原文： Inboxes only work if you trust how they’re drained (andymatuschak.org)
可靠的收件箱是强大的，因为它让我们[[闭合开环]]并专注于工作本身，而无须注意元工作。</description></item><item><title>收藏者谬误</title><link>https://clickear.github.io/%E6%94%B6%E8%97%8F%E8%80%85%E8%B0%AC%E8%AF%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%94%B6%E8%97%8F%E8%80%85%E8%B0%AC%E8%AF%AF/</guid><description>理解 以为将来会读 以为能管住海量收藏 就算读了，也管住了，但其实只有短期记忆，内容很快石沉大海。 破局 还是收藏， 但经过一定门槛，觉得有价值再收藏 保留完整的上下文，如 html 格式 管理 通过 [[🤖devonthink]]，不做管理，就是收藏，有零星记忆就去搜搜看。 用不同工具拆分开使用。[[本库使用时遵守的核心原则]] 现在不做简单收藏，只做深度思考。devonthink 去负责收藏。</description></item><item><title>收集材料的作用在感觉上被夸大了</title><link>https://clickear.github.io/%E6%94%B6%E9%9B%86%E6%9D%90%E6%96%99%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9C%A8%E6%84%9F%E8%A7%89%E4%B8%8A%E8%A2%AB%E5%A4%B8%E5%A4%A7%E4%BA%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%94%B6%E9%9B%86%E6%9D%90%E6%96%99%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9C%A8%E6%84%9F%E8%A7%89%E4%B8%8A%E8%A2%AB%E5%A4%B8%E5%A4%A7%E4%BA%86/</guid><description>%%我的理解:: 避免陷入[[收藏者谬误|收藏家谬误]]，也要避免让自己成为知道先生，走向[[但当涉猎，不求甚解]]的极端。%%
积累浏览器标签、保存 PDF 和制作书签感觉像是进步，但我们系统地高估了这些行为的价值。[[理解概念需与其尽力较量]]；从粗粗看过一遍的 PDF 文件中是获得不了多少理解的。
我们收集材料是因为收集材料很容易，而且可以平息焦虑，相信目前再读的东西还有机会找到。但实际上，这么做反而是弄巧成拙，因为「不想弄丢」一些次要材料，结果越积越多，让重要材料埋没其中。这种观念与[[知识工作应能聚沙成塔]]与有所反差。
Christian Tietze 建议:
这是破解「收藏家谬论」 的第一步：意识到拥有一篇文本对于增加知识徒劳无功。
相反，我们应该[[写你所读，以求内化]]，因为[[常青笔记有助于积累阅读成果]]。为了有效引导自己（对比[[收集材料的作用在感觉上被夸大了]]），对于收集的材料，应该以较短的迭代周期处理，而不任其长久堆积。
参考文献 收藏家谬论 • Zettelkasten 方法</description></item><item><title>数字笔记系统专注于笔记个体的展示和操作，常忽略笔记之间内在连接所产生的意义</title><link>https://clickear.github.io/%E6%95%B0%E5%AD%97%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E4%B8%93%E6%B3%A8%E4%BA%8E%E7%AC%94%E8%AE%B0%E4%B8%AA%E4%BD%93%E7%9A%84%E5%B1%95%E7%A4%BA%E5%92%8C%E6%93%8D%E4%BD%9C%E5%B8%B8%E5%BF%BD%E7%95%A5%E7%AC%94%E8%AE%B0%E4%B9%8B%E9%97%B4%E5%86%85%E5%9C%A8%E8%BF%9E%E6%8E%A5%E6%89%80%E4%BA%A7%E7%94%9F%E7%9A%84%E6%84%8F%E4%B9%89/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%95%B0%E5%AD%97%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E4%B8%93%E6%B3%A8%E4%BA%8E%E7%AC%94%E8%AE%B0%E4%B8%AA%E4%BD%93%E7%9A%84%E5%B1%95%E7%A4%BA%E5%92%8C%E6%93%8D%E4%BD%9C%E5%B8%B8%E5%BF%BD%E7%95%A5%E7%AC%94%E8%AE%B0%E4%B9%8B%E9%97%B4%E5%86%85%E5%9C%A8%E8%BF%9E%E6%8E%A5%E6%89%80%E4%BA%A7%E7%94%9F%E7%9A%84%E6%84%8F%E4%B9%89/</guid><description>%%我的理解:: [[excalibrain]]这种插件，不仅让我们专注于笔记个体，也能让我们注意到笔记之间内在连接的意义。[[heptabase]]等白板工具也可以一定程度上缓解这种下意识的忽略。%%
如果我用实体卡写[[常青笔记]]，那我会很自然把它们排开在桌上。相关的笔记可以放到同一个小的群组或卡堆里。笔记之间有顺序关系的话，「后继」可以排放「前驱」的右侧。当我在写一个新的笔记时，所有写过的其他笔记也会在视野中一览无余，物理上和新的相邻。这是一种 周边视觉。
而数字化的[[§ 笔记写作系统]]想打造的写作环境，更针对单笔记的创作体验。核心操作和显示围绕「你打开的笔记」，而不是更高层的笔记结构。在这个系统中，我通常不能同时浏览刚写完的一个笔记，更不用说排看最近四个了。数字笔记系统大多不怎么支持多窗口，即使有名义上的支持，要把它们排出实体卡片上，那种自然的空间关系也很尴尬。与其说这是「周边视觉」，不如说是隔靴搔痒。
反链是一种弱「外围视觉」—— 有用，但一般只让当前页面跳转，而不是一种能在页与页之间，有效进行意义发掘的手段。[[上下文反向链接]]会有用：你至少可以在这样的列表中同时看到许多笔记段。但是，即使你理解他们之间的结构，在这些反链中游览时，你会失去对象的「客体永久性*」。相关内容： 在关联型笔记系统中，很难导航到未经链接的「邻居」（*译注：原文 object permanence，我们明白就算在某些情况下客体无法被看见、触摸或者感知到，它们也依然是存在的。）
如果我在一段时间后读到一个笔记，我有一种不安的感觉，即它是我看不到的某个「整体」的一部分。[[常青笔记应该是原子化的]]中的做法不利于这种情况。如果我是用实体笔记工作，我会把一堆笔记拉到我的桌子上，然后把它们排列起来。把这些笔记摆来摆去，可以帮助我理清结构。这种方式没有真正等价的数字版。 %%[[heptabase]]就是为了这个等价的数字版场景而生的，哈哈%%
这让我想起了 Mac OS 早期版本中的「空间」版 Finder，它里面的每个文件夹，都会被打开到一个新窗口中，而且这些窗口的位置和大小会在不同会话中保持不变。如果文件夹点开在某个地方，那它会总会被放那儿。所以你可以建立一个点对点的排列永远不变。</description></item><item><title>数据库学习指南</title><link>https://clickear.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/</guid><description>书籍 书籍是系统化获取知识最好的一个途径，推荐按照下面的顺序来阅读，循序渐进：
《MySQL必知必会》，很薄，可以很快读完。 《MySQL性能调优和架构设计》，很薄，可以很快读完。 通读一遍官方文档中：MySQL Server System Variables，MySQL Server System Status。 通读并测试mysql、mysqldump、mysqladmin命令行工具的参数。 《鸟哥的Linux私房菜》 《高性能MySQL（第三版）》，阿里的几个DBA翻译的，非常经典，值得耐心阅读；开发人员可以阅读这一本即可应对大部分问题。 《MySQL技术内幕：InnoDB存储引擎（第2版）》，通过这个可以了解到很多Innodb运行的内部原理。 《MySQL技术内幕：SQL编程》。 《O&amp;rsquo;Reilly：高可用MySQL：构建健壮的数据中心》，通过这个可以了解到很多replication的细节。 《Understanding MySQL Internals》，可以为进一步的阅读源码打下基础。 MySQL官方文档，官方文档历来是杀人越货居家必备，解决问题可以第一时间查阅官方文档，得到很权威的解释。 博客 下面列出的博客主要是一些非常经典的博客，篇篇经典，可以通过阅读历史文章来扎实自己的知识。</description></item><item><title>数据库设计规范</title><link>https://clickear.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</guid><description>1.1.1. Database 设计规范 1、 库的名称必须控制在32个字符以内，相关模块的表名与表名之间尽量提现join的关系，如user表和user_login表。
2、 库的名称格式：业务系统名称_子系统名，同一模块使用的表名尽量使用统一前缀。
3、 一般分库名称命名格式是“库通配名_编号”，编号从“0”开始递增，比如“wenda_001”以时间进行分库的名称格式是“库通配名_时间”。
4、 创建数据库时必须显式指定字符集，并且字符集只能是utf8(适用于5.6)或者utf8mb4(适用于5.7)
创建数据库SQL举例：
Create database db1 default character set utf8;
1.1.2. 表结构设计规范 1、 创建表时必须显式指定表存储引擎类型，如无特殊需求，一律为InnoDB。当需要使用除InnoDB/MyISAM/Memory以外的存储引擎时，必须通过审核才能在生产环境中使用。因为Innodb表支持事务、行锁、宕机恢复、MVCC等关系型数据库重要特性，为业界使用最多的MySQL存储引擎。而这是其他大多数存储引擎不具备的，因此首推InnoDB。</description></item><item><title>数据结构与算法</title><link>https://clickear.github.io/-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</guid><description>数据结构与算法 算法简介 💡 算法（Algorithm），就是“计算方法”，指解决一个问题具体的步骤和方法 算法复杂度 极客时间 | 数据结构与算法之美
时间复杂度 算法的时间复杂度，是指执行算法所需要的计算工作量
时间复杂度的计算
算术指令（加减乘除、取余、向上向下取整）、数据移动指令（装载、存储、赋值）、控制指令（条件或无条件跳转，子程序调用和返回）。
不能通过绝对时间来计算算法复杂度。需要根据算术指令。一般通过大O表示法。
O(1) &amp;gt; O(log(n))&amp;gt; O(√n) &amp;gt; O(n) &amp;gt; O(nlog(n)) &amp;gt; O(n2) &amp;gt; O(en) &amp;gt;O(n!</description></item><item><title>数据结构和算法</title><link>https://clickear.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</guid><description>文献 fucking-algorithm</description></item><item><title>文城-余华</title><link>https://clickear.github.io/%E6%96%87%E5%9F%8E-%E4%BD%99%E5%8D%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%96%87%E5%9F%8E-%E4%BD%99%E5%8D%8E/</guid><description>元数据 [!abstract] 文城
书名： 文城 作者： 余华 简介： 时隔8年，余华全新长篇重磅归来！人生就是自己的往事和他人的序章。时代的洪流推着每个人做出各自的选择。 出版时间 2021-03-03 00:00:00 ISBN： 9787530221099 分类： 精品小说-社会小说 出版社： 北京出版集团北京十月文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>文档备份</title><link>https://clickear.github.io/%E6%96%87%E6%A1%A3%E5%A4%87%E4%BB%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%96%87%E6%A1%A3%E5%A4%87%E4%BB%BD/</guid><description>#todo/continue
数据库
wiki</description></item><item><title>文献笔记是次要的，分离的</title><link>https://clickear.github.io/%E6%96%87%E7%8C%AE%E7%AC%94%E8%AE%B0%E6%98%AF%E6%AC%A1%E8%A6%81%E7%9A%84%E5%88%86%E7%A6%BB%E7%9A%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%96%87%E7%8C%AE%E7%AC%94%E8%AE%B0%E6%98%AF%E6%AC%A1%E8%A6%81%E7%9A%84%E5%88%86%E7%A6%BB%E7%9A%84/</guid><description>%%我的理解:: 文献笔记，原文含量大，永久笔记（持久笔记），自己的话含量大。以文献为中心做批注，还是以自己的话为中心引用文献，二者有区别，后者是更有效的方法，当然也需要多花一些时间精力。 #todo/今天 %%
根据[[常青笔记应面向概念]]的说法，特定参考文献的笔记既要简短，又要与笔记档案明确分开，它们仅仅是为了帮助你写出持久笔记而存在。
文献笔记通常是对阅读时收集的观察结果的轻量级综述（见[[如何在阅读时整理所得]]）。我们可以为以后的文献查询保留一个快速的工作总结、缓存这些观察结果，但是文献大部分的价值已经被我们的持久笔记吸收了（见[[如何将阅读标注处理成常青笔记]]）。具体的参考文献注释主要是为了链接到那些持久笔记中（ 如果我们有自动的通用反向链接，文献笔记是否有必要？）。
有一个重要的哲学原因，我们应该把这些文献笔记与我们的持久笔记分开。整理好的持久笔记是你[[自主思考]]的地方：你把别人的想法解释成你自己的知识结构。我们应该很少去直接引用原文，持久笔记应该要有意地用你自己的话来重述。相比之下，文献笔记往往主要是记录原作者的想法，它们倾向于倚重直接引用的原文。即使我们附带上了一些自己的解释，也是在作者的本体和主张系统的上下文里解释。 听清自己的想法很难，所以我们应该把我们自己的思考空间与这些更直接地表现他人思想的空间明确分开。
参考文献 Ahrens, Sönke. How to Take Smart Notes: One Simple Technique to Boost Writing, Learning and Thinking – for Students, Academics and Nonfiction Book Writers, 2017.</description></item><item><title>无所畏-冯唐</title><link>https://clickear.github.io/%E6%97%A0%E6%89%80%E7%95%8F-%E5%86%AF%E5%94%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%97%A0%E6%89%80%E7%95%8F-%E5%86%AF%E5%94%90/</guid><description>元数据 [!abstract] 无所畏
书名： 无所畏 作者： 冯唐 简介： 冯唐全新作品，一部坦露自我的真诚之作。全书分为如何获得成功、爱情如何对抗时间、生活怎么过才算有意义、自我价值如何体现四个章节，并收录《如何避免成为一个油腻的中年猥琐男》《找个好看的扑倒》《爱情如何对抗时间》《我爸认识所有的鱼》等知名篇目。此书对冯唐来说，是一个新的开始，中年的冯唐在书中坦言自己的中年危机、父亲的去世、老妈的人生哲学，以及对过去和未来的自我审视。冯唐父亲、母亲等私人珍藏照片，初次放进书中，以图文结合的方式直观展现《无所畏》中谈及的人、事、物。活在这世上，什么都不要怕，做自己认为对的事儿，慢慢放下输赢和计算。 出版时间 2018-08-01 00:00:00 ISBN： 9787559623096 分类： 文学-散文杂著 出版社： 北京联合出版公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>日志</title><link>https://clickear.github.io/%E6%97%A5%E5%BF%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%97%A5%E5%BF%97/</guid><description>[!TIP] 日志&amp;gt;一切💡
在数据库的世界里，数据从来都不重要，日志才是最重要的，有了日志就有了一切。如通过[[redolog]]进行恢复
日志是MySQL数据库的重要组成部分. 日志文件中记录着MySQL数据库运行期间发生的变化; 也就是说用来记录MySQL数据库的客户端连接状况, SQL语句的执行情况和错误信息等. 当数据库遭到意外的损坏时, 可以通过日志查看文件出错的原因, 并且可以通过日志文件进行数据恢复。
数据库数据存放的文件称为data file；日志文件称为log file；数据库数据是有缓存的，如果没有缓存，每次都写或者读物理disk，那性能就太低下了。数据库数据的缓存称为data buffer，日志（redo）缓存称为log buffer；既然数据库数据有缓存，就很难保证缓存数据（脏数据）与磁盘数据的一致性。
但是万一数据库发生断电，因为缓存的数据没有写入磁盘，导致缓存在内存中的数据丢失而导致数据不一致怎么办？
为了保证事务的ACID特性，就不得不说MySQL InnoDB引擎的事务日志: 重做日志[[redolog]]和回滚日志[[undolog]]</description></item><item><title>日志脱敏</title><link>https://clickear.github.io/%E6%97%A5%E5%BF%97%E8%84%B1%E6%95%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%97%A5%E5%BF%97%E8%84%B1%E6%95%8F/</guid><description>0, 脱敏功能的基本原理解释: 所有的日志记录/console输出对象,都会调用到该对象的tostring方法. 1, 基本的脱敏实现,代码篇: 1``, dto 在日志中输出 字段脱敏的注解方式: common 包需要升级到``1.1``.``3``-RELEASE +
2``, 所有的request dto需继承基类baseRequestDTO
3``, 单独的pojo如果需要脱敏, 需要重新toString 方法. 使用base包中的</description></item><item><title>时势造英雄：版本之子</title><link>https://clickear.github.io/%E6%97%B6%E5%8A%BF%E9%80%A0%E8%8B%B1%E9%9B%84%E7%89%88%E6%9C%AC%E4%B9%8B%E5%AD%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%97%B6%E5%8A%BF%E9%80%A0%E8%8B%B1%E9%9B%84%E7%89%88%E6%9C%AC%E4%B9%8B%E5%AD%90/</guid><description/></item><item><title>明智行动的艺术：成功决策必须避免的52个思维陷阱-罗尔夫·多贝里</title><link>https://clickear.github.io/%E6%98%8E%E6%99%BA%E8%A1%8C%E5%8A%A8%E7%9A%84%E8%89%BA%E6%9C%AF%E6%88%90%E5%8A%9F%E5%86%B3%E7%AD%96%E5%BF%85%E9%A1%BB%E9%81%BF%E5%85%8D%E7%9A%8452%E4%B8%AA%E6%80%9D%E7%BB%B4%E9%99%B7%E9%98%B1-%E7%BD%97%E5%B0%94%E5%A4%AB%E5%A4%9A%E8%B4%9D%E9%87%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%98%8E%E6%99%BA%E8%A1%8C%E5%8A%A8%E7%9A%84%E8%89%BA%E6%9C%AF%E6%88%90%E5%8A%9F%E5%86%B3%E7%AD%96%E5%BF%85%E9%A1%BB%E9%81%BF%E5%85%8D%E7%9A%8452%E4%B8%AA%E6%80%9D%E7%BB%B4%E9%99%B7%E9%98%B1-%E7%BD%97%E5%B0%94%E5%A4%AB%E5%A4%9A%E8%B4%9D%E9%87%8C/</guid><description>元数据 [!abstract] 明智行动的艺术：成功决策必须避免的52个思维陷阱
书名： 明智行动的艺术：成功决策必须避免的52个思维陷阱 作者： 罗尔夫·多贝里 简介： 光思考还不够，从思考到行动，你还会犯一堆错误！《明智行动的艺术》以机智风趣的语调，以及清晰恳切的陈述，融合了经济、管理、心理学等各学科的前沿智慧，并运用哈佛大学、斯坦福大学、普林斯顿大学、伯克利大学等的前沿研究成果，为我们剖析和纠正行为上的偏误。全书包含52个既科学又轻松，既严肃又有趣的精致篇章，每章辅以诙谐生动的德式手绘彩插，以及生动简练的文字，总结了人们行动时常犯的错误，并指出如何去避开这些陷阱。快节奏的年代，我们需要一本谋定而后动的书！ 出版时间 2016-08-01 00:00:00 ISBN： 9787508664729 分类： 个人成长-人生哲学 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>明朝那些事儿（全集）-当年明月</title><link>https://clickear.github.io/%E6%98%8E%E6%9C%9D%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF%E5%85%A8%E9%9B%86-%E5%BD%93%E5%B9%B4%E6%98%8E%E6%9C%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%98%8E%E6%9C%9D%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF%E5%85%A8%E9%9B%86-%E5%BD%93%E5%B9%B4%E6%98%8E%E6%9C%88/</guid><description>元数据 [!abstract] 明朝那些事儿（全集）
书名： 明朝那些事儿（全集） 作者： 当年明月 简介： 《明朝那些事儿》主要讲述的是从1344年到1644年这三百年间关于明朝的一些故事。以史料为基础，以年代和具体人物为主线，并加入了小说的笔法，语言幽默风趣。对明朝十七帝和其他王公权贵和小人物的命运进行全景展示，尤其对官场政治、战争、帝王心术着墨最多，并加入对当时政治经济制度、人伦道德的演义。它以一种网络语言向读者娓娓道出明朝三百多年的历史故事、人物。其中原本在历史中陌生、模糊的历史人物在书中一个个变得鲜活起来。《明朝那些事儿》为我们解读历史中的另一面，让历史变成一部活生生的生活故事。 出版时间 2011-12-01 00:00:00 ISBN： 9787213046339 分类： 历史-历史读物 出版社： 浙江人民出版社 高亮划线 帝王的荣耀(1) 📌 一个人从登上皇位成为皇帝的那一天起，他所得到的就绝不仅仅是权位而已，还有许许多多的敌人，他不但要和天斗和地斗，还要和自己身边的几乎每一个人斗，大臣、太监、老婆（很多）、老婆的亲戚（也很多）、兄弟姐妹，甚至还有父母（如果都还活着的话），他成为了所有人的目标。如果不拿出点手段，显示一下自己的能力，很容易被人找到空子踢下皇位。而历史证明，被踢下皇位的皇帝生存率是很低的。 ^61-159-342 ⏱ [[2022-08-11]] 12:42 📌 无论我们从哪个角度来看，朱棣都绝对算不上一个好人，这个人冷酷、残忍、权欲熏心，在日常生活中，我们绝对不想和这样的一个人做朋友。但他却是一个实实在在的好皇帝。一个皇帝从不需要用个人的良好品格来证明自己的英明，恰恰相反，在历史上干皇帝这行的人基本都不是什么好人，因为好人干不了皇帝，朱允炆就是铁证。 ^61-0-153 ⏱ [[2022-08-11]] 12:42 📌 为了皇位，为了性命，必须学会权谋诡计，必须六亲不认，他要比最强横的恶霸更强横，比最无赖的流氓更无赖，他不能相信任何人。所以我认为，孤家寡人实在是对皇帝最好的称呼。朱棣就是这样的一个恶霸无赖，同时也是一个好皇帝。 ^61-348-459 ⏱ [[2022-08-11]] 12:47 读书笔记 本书评论 书评 No.</description></item><item><title>晕轮效应</title><link>https://clickear.github.io/%E6%99%95%E8%BD%AE%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%99%95%E8%BD%AE%E6%95%88%E5%BA%94/</guid><description>我的理解 它有时会产生“积极肯定的晕轮”，有时会产生“消极否定的晕轮”，这都会干扰对信息的评价，要克服晕轮效应就必须坚持客观，不掺杂主观成分。
网上解释 也称光环效应，指人们对他人的认知判断是基于根据自身的个人喜好出发，再从这个判断推论出认知对象的其他品质，使得最终出现“以点概面、以偏概全”的现象。[最早是由美国著名心理学家 Edward Lee Thorndike（1894-1949）于 20 世纪 20 年代提出，随后美国心理学家 K.Dion、Harold Harding Kelley （1921-2003）、Richard E.Nisbett（1941-）相继通过实验证明。 ]
案例：俄国作家普希金狂热地爱上了“莫斯科第一美人”娜坦丽，并和她闪婚。婚后才发现两人差别巨大，当普希金每次与她分享自己的诗作时，她总是毫无兴趣、心生排斥，相反却要普希金陪她游乐，出席豪华晚会、舞会，普希金为此丢下创作，弄得债台高筑，最后还为她决斗而死，一颗文学巨星就此陨落。</description></item><item><title>晚熟的人（莫言诺奖后首部作品）-莫言</title><link>https://clickear.github.io/%E6%99%9A%E7%86%9F%E7%9A%84%E4%BA%BA%E8%8E%AB%E8%A8%80%E8%AF%BA%E5%A5%96%E5%90%8E%E9%A6%96%E9%83%A8%E4%BD%9C%E5%93%81-%E8%8E%AB%E8%A8%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%99%9A%E7%86%9F%E7%9A%84%E4%BA%BA%E8%8E%AB%E8%A8%80%E8%AF%BA%E5%A5%96%E5%90%8E%E9%A6%96%E9%83%A8%E4%BD%9C%E5%93%81-%E8%8E%AB%E8%A8%80/</guid><description>元数据 [!abstract] 晚熟的人（莫言诺奖后首部作品）
书名： 晚熟的人（莫言诺奖后首部作品） 作者： 莫言 简介： 从《红高粱》到《晚熟的人》，从历史深处到当下现实，从开天辟地到气象万千。依然是读者熟悉的那个莫言，却带给我们陌生惊喜的阅读体验。本书收录了诺贝尔文学奖得主莫言全新创作的中短篇小说12篇，都是莫言说给大家的“新故事”，依然取材自“故乡人事”，但面貌全新——聚焦当下，融入对于时代新生问题的观察与思考。12个故事篇幅紧凑，却各有曲直，新鲜的、骁勇的、星罗棋布的叙述里塑造了一系列“应时而变”的人物，他们像是从我们身边走出来的人，健步如飞，从小说的这头一直奔跑到小说的那一头，从红高粱的历史来到红唇绿嘴的当下。阅读莫言总是刺激的，他的小说世界立体而完整，最终的结果总让我们大惊失色。 出版时间 2020-08-01 00:00:00 ISBN： 9787020164776 分类： 文学-经典作品 出版社： 人民文学出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>更好地记笔记这个描述太过流于表面；核心在于更好地思考</title><link>https://clickear.github.io/%E6%9B%B4%E5%A5%BD%E5%9C%B0%E8%AE%B0%E7%AC%94%E8%AE%B0%E8%BF%99%E4%B8%AA%E6%8F%8F%E8%BF%B0%E5%A4%AA%E8%BF%87%E6%B5%81%E4%BA%8E%E8%A1%A8%E9%9D%A2%E6%A0%B8%E5%BF%83%E5%9C%A8%E4%BA%8E%E6%9B%B4%E5%A5%BD%E5%9C%B0%E6%80%9D%E8%80%83/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9B%B4%E5%A5%BD%E5%9C%B0%E8%AE%B0%E7%AC%94%E8%AE%B0%E8%BF%99%E4%B8%AA%E6%8F%8F%E8%BF%B0%E5%A4%AA%E8%BF%87%E6%B5%81%E4%BA%8E%E8%A1%A8%E9%9D%A2%E6%A0%B8%E5%BF%83%E5%9C%A8%E4%BA%8E%E6%9B%B4%E5%A5%BD%E5%9C%B0%E6%80%9D%E8%80%83/</guid><description>%%我的理解:: 现实生活中，那些成功人士并不是都会做笔记，但这并不意味着做笔记不是一个能帮助我们成功的好习惯，关键在于：不要做那种自我感动的笔记，而是做帮助自己思考的笔记。%%
很多人都在写文章提出方案尝试解决[[笔记写作实践大多是无效的]]这一问题。这些文章中的绝大部分都着眼于一个短视的、「生活黑客」式的框架上，聚焦于这些类似的问题：「我应该如何组织我的笔记？」，「我应该使用什么样的笔记本？」，「我怎样才能更容易提取我所读的片段到笔记？」等等。
对这些问题的回答无法令人满意，因为问题的重点不在这里。我们的目标不是做笔记——目标是有效地思考。更好的问题是 「什么做法可以帮助我长期可靠地发展洞察力？」，「我怎样才能有效地引导我的注意力？」等等。这就是[[常青笔记是知识工作的基本单位]]的框架，它是有意义的：[[常青笔记有助于积累洞见]]。
就技术而言，重要的不是「计算机支持的笔记」，而是「计算机支持的思考」。
我们容易把注意力集中在「做笔记」上，因为它是一个虚无缥缈的实践中的可见部分：如果你看到一个有洞察力的人在他们的笔记本上写东西，你可能会想，如果你得到一个合适的笔记本并把它整理好，你也会变得有洞察力。当然，做笔记是有可实操的。它相对容易，而且感觉像在做正事，即使它是无用的（[[笔记写作的反馈不足]]。所以它是一个令人上瘾的麻烦。
[[对笔记写作大谈特谈的人很少有严肃的使用场景]]
参考文献 Matuschak, A. (2019, December). Taking knowledge work seriously. Presented at the Stripe Convergence, San Francisco.</description></item><item><title>更新丢失</title><link>https://clickear.github.io/%E6%9B%B4%E6%96%B0%E4%B8%A2%E5%A4%B1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9B%B4%E6%96%B0%E4%B8%A2%E5%A4%B1/</guid><description>两个或多个事务选择同一行，然后基于最初选定的值更新该行时，由于每个事务都不知道其他事务的存在，就会发生丢失更新问题。最后的更新覆盖了由其他事务所做的更新。
防止更新丢失应该是应用的责任，并不能单靠数据库事务控制器来解决。
解决方案 通常是应该完全避免的。但防止更新丢失，并不能单靠数据库事务控制器来解决，需要应用程序对要更新的数据加必要的锁来解决，因此，防止更新丢失应该是应用的责任。</description></item><item><title>更新语句执行</title><link>https://clickear.github.io/%E6%9B%B4%E6%96%B0%E8%AF%AD%E5%8F%A5%E6%89%A7%E8%A1%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9B%B4%E6%96%B0%E8%AF%AD%E5%8F%A5%E6%89%A7%E8%A1%8C/</guid><description>:: 流程 连接验证及解析、 写[[undolog]]，记录数据被修改前的样子 从索引中查找数据 更新数据 数据操作
4.1 数据页在内存中
4.1.1 普通索引: 直接更新内存中的数据页
4.1.2 唯一索引: 更新后是否会数据冲突,不会则更新
4.2 数据页不在内存中</description></item><item><title>最好的阅读方式是高度语境化的</title><link>https://clickear.github.io/%E6%9C%80%E5%A5%BD%E7%9A%84%E9%98%85%E8%AF%BB%E6%96%B9%E5%BC%8F%E6%98%AF%E9%AB%98%E5%BA%A6%E8%AF%AD%E5%A2%83%E5%8C%96%E7%9A%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9C%80%E5%A5%BD%E7%9A%84%E9%98%85%E8%AF%BB%E6%96%B9%E5%BC%8F%E6%98%AF%E9%AB%98%E5%BA%A6%E8%AF%AD%E5%A2%83%E5%8C%96%E7%9A%84/</guid><description>%%我的理解:: 不同的书，不同时期的我，不同时刻的我，读书的目的都是不同的，需要具体问题具体分析，就像[[如何阅读一本书-莫提默·艾德勒 查尔斯·范多伦]]中所言，要按照实际情况制定读书方法。%%
Thoughts Memo 汉化组译制
原文： The best way to read is highly contextual (andymatuschak.org)
一本书应该如何阅读，在很大程度上取决于这本书、读者和背景。你读的有些文本基本上只是为了娱乐；有些文本你会跳过，只挑重点（[[熟练的阅读一般都是非线性的]]）；有些文本你会想深入地内化（例如[[写你所读，以求内化]]）。这种差异有些是由作品本身导致的，但大部分取决于你读书时的动机和感受。</description></item><item><title>有效的系统设计需要从真刀真枪的使用情境汲取洞见</title><link>https://clickear.github.io/%E6%9C%89%E6%95%88%E7%9A%84%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E9%9C%80%E8%A6%81%E4%BB%8E%E7%9C%9F%E5%88%80%E7%9C%9F%E6%9E%AA%E7%9A%84%E4%BD%BF%E7%94%A8%E6%83%85%E5%A2%83%E6%B1%B2%E5%8F%96%E6%B4%9E%E8%A7%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9C%89%E6%95%88%E7%9A%84%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E9%9C%80%E8%A6%81%E4%BB%8E%E7%9C%9F%E5%88%80%E7%9C%9F%E6%9E%AA%E7%9A%84%E4%BD%BF%E7%94%A8%E6%83%85%E5%A2%83%E6%B1%B2%E5%8F%96%E6%B4%9E%E8%A7%81/</guid><description>%%我的理解:: 现在是个人，就能BB两句，将一些大道理。有效的东西、真理确是来源于实践的。%%
粗制而成的原型很不错：由此能开展粗糙的迭代和快速评估。但是，许多重要的洞见，只有依托于真刀真枪的创造性问题才能够涌现，这些问题与原型系统本身无关。这是[[实践出洞见]]提出的一个关键主张。
听起来像是标准做法：系统当然需要经过评估！但大多数系统设计者并不认真对待「真刀真枪」： 工具制作者通常缺乏与真刀真枪的使用环境的联系。
理论寓于系统之中。观察系统与现实相互作用，可以从中获得见解，对后续完善理论有所帮助。这些见解的成色，与系统的使用场景息息相关。如果系统没有经过真刀真枪地使用，得到的见解也就是单纯坐而论道者能够想到的，不建造系统也可以实现。
皮克斯是很好的例子。这家动画公司创造了真刀真枪的使用环境，反过来又推动了系统设计： 皮克斯的电影和技术发展是啮合紧密的飞轮。
常见挑战：
优秀的工具制造者往往不是优秀的工具使用者，反之亦然 研究思想工具的团体需要足够的能力来建立足以用于严肃工作的原型 相关理论：
强大的赋能环境通常作为副产品在追求其自身内在意义的项目时产生 [[创制环境极大程度受作者的动机塑造]] 强大的赋能环境注重专业级使用 参考文献 Matuschak, A.</description></item><item><title>有本事-冯唐</title><link>https://clickear.github.io/%E6%9C%89%E6%9C%AC%E4%BA%8B-%E5%86%AF%E5%94%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9C%89%E6%9C%AC%E4%BA%8B-%E5%86%AF%E5%94%90/</guid><description>元数据 [!abstract] 有本事
书名： 有本事 作者： 冯唐 简介： 冯唐继《无所畏》之后暌违三年的全新作品，一本写在人生转折点的前行之作。全书包括财务自由了解一下、从请客吃饭开始成事、如果还有最后一天可活、和好玩好看的人消磨时光、一个人的乐园5个部分，冯唐将自己对金钱、做事、处世、追求、情感、生命等等的思索娓娓道来。在这本书里，你能读懂，一个成大事的人，如何把一个人活成一支队伍，如何修炼安身立命的本事以及丰饶强大的内核，在任何年龄阶段里都能有所成；一个追求生命质量的人，如何有人情味儿地活着，享受亲情、爱情、友情，又如何面对复杂的人性、变化和失去。无常是常，在无常的世界里，一个人有本事，才能行得稳、走得远，才是靠得住的财富。 出版时间 2021-06-01 00:00:00 ISBN： 9787559653147 分类： 文学-散文杂著 出版社： 北京联合出版公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>有闲阶级论（译文经典）-索尔斯坦·凡勃仑</title><link>https://clickear.github.io/%E6%9C%89%E9%97%B2%E9%98%B6%E7%BA%A7%E8%AE%BA%E8%AF%91%E6%96%87%E7%BB%8F%E5%85%B8-%E7%B4%A2%E5%B0%94%E6%96%AF%E5%9D%A6%E5%87%A1%E5%8B%83%E4%BB%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9C%89%E9%97%B2%E9%98%B6%E7%BA%A7%E8%AE%BA%E8%AF%91%E6%96%87%E7%BB%8F%E5%85%B8-%E7%B4%A2%E5%B0%94%E6%96%AF%E5%9D%A6%E5%87%A1%E5%8B%83%E4%BB%91/</guid><description>元数据 [!abstract] 有闲阶级论（译文经典）
书名： 有闲阶级论（译文经典） 作者： 索尔斯坦·凡勃仑 简介： 《有闲阶级论》为美国经济学家、制度经济学鼻祖凡勃伦的代表作之一，于1899年出版。通过讨论有闲阶级的形成过程及其地位和价值，本书将社会学关注的焦点转移到“消费”之上，完成了里程碑式的研究，也奠定了凡勃伦主要著作的理论基础。《有闲阶级论》对社会的辛辣批评在当时激起了轩然大波。一百多年后的今天，它对我们理解时下的社会仍不失为绝佳参考。 出版时间 2019-10-01 00:00:00 ISBN： 9787532780327 分类： 社会文化-社科 出版社： 上海译文出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>朝闻道-刘慈欣</title><link>https://clickear.github.io/%E6%9C%9D%E9%97%BB%E9%81%93-%E5%88%98%E6%85%88%E6%AC%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9C%9D%E9%97%BB%E9%81%93-%E5%88%98%E6%85%88%E6%AC%A3/</guid><description>元数据 [!abstract] 朝闻道
书名： 朝闻道 作者： 刘慈欣 简介： 地核中的奇特生物，经过十万年的文明探索，终于突破了宇宙的屏障，却发现身处另一个更大的宇宙！天文学家研究出星星的运行规律，却发现星空与人类大脑的运行方式惊人一致！人类科学家即将发现宇宙的终极秘密，却被外星生命告知宇宙的真理必须用自己的生命来交换！本书蕴藏了作者对宇宙运行规律的许多奇思妙想，并向人类中那些孜孜不倦追求真理的人们表达了深深敬意。刘慈欣的短篇科幻小说。 出版时间 2015-01-01 00:00:00 ISBN： 分类： 精品小说-科幻经典 出版社： 山西春秋电子音像出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>未来简史：从智人到智神-尤瓦尔·赫拉利</title><link>https://clickear.github.io/%E6%9C%AA%E6%9D%A5%E7%AE%80%E5%8F%B2%E4%BB%8E%E6%99%BA%E4%BA%BA%E5%88%B0%E6%99%BA%E7%A5%9E-%E5%B0%A4%E7%93%A6%E5%B0%94%E8%B5%AB%E6%8B%89%E5%88%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9C%AA%E6%9D%A5%E7%AE%80%E5%8F%B2%E4%BB%8E%E6%99%BA%E4%BA%BA%E5%88%B0%E6%99%BA%E7%A5%9E-%E5%B0%A4%E7%93%A6%E5%B0%94%E8%B5%AB%E6%8B%89%E5%88%A9/</guid><description>元数据 [!abstract] 未来简史：从智人到智神
书名： 未来简史：从智人到智神 作者： 尤瓦尔·赫拉利 简介： 进入21世纪后，曾经长期威胁人类生存、发展的饥荒和战争基本被攻克，智人面临着新的待办议题：永生不老、幸福快乐和成为具有“神性”的人类。在解决这些新问题的过程中，科学技术的发展将颠覆我们很多当下认为无需佐证的“常识”，比如人文主义所推崇的自由意志将面临严峻挑战，机器将会代替人类做出更明智的选择。 更重要的，当以大数据、人工智能为代表的科学技术发展的日益成熟，人类将面临着从进化到智人以来*的一次改变，绝大部分人将沦为“无价值的群体”，只有少部分人能进化成特质发生改变的“神人”。 未来，人类将面临着三大问题：生物本身就是算法，生命是不断处理数据的过程；意识与智能的分离；拥有大数据积累的外部环境将比我们自己更了解自己。如何看待这三大问题，以及如何采取应对措施，将直接影响着人类未来的发展。 出版时间 2017-01-10 00:00:00 ISBN： 9787508672069 分类： 社会文化-社科 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>本地事务</title><link>https://clickear.github.io/%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1/</guid><description>[!NOTE] 本地事务
本地事务，就有ACID特性。[[redolog]]实现了持久性，[[undolog]]实现了原子性。隔离性，是通过锁来实现的 数据库的并发，[[并发带来的问题]]有 1. [更新丢失]， 2. [脏读]， 3. [[不可重复读]] （B事务修改了数据），[[可重复读]]来解决重复读问题。 4. [[幻读]] (B事务新增/删除了数据)，只能设置隔离级别[[串行化]]来处理。 [[事务隔离级别]]，解决了并发中的各种问题。一般使用RR或者RC. ACID A (Atomicity) 原子性：整个事务中的所有操作，要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。[[undolog]]实现原子性</description></item><item><title>本库的宏观统计数据</title><link>https://clickear.github.io/%E6%9C%AC%E5%BA%93%E7%9A%84%E5%AE%8F%E8%A7%82%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9C%AC%E5%BA%93%E7%9A%84%E5%AE%8F%E8%A7%82%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 let allFiles = dv.</description></item><item><title>李元芳</title><link>https://clickear.github.io/%E6%9D%8E%E5%85%83%E8%8A%B3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9D%8E%E5%85%83%E8%8A%B3/</guid><description/></item><item><title>杨玉环</title><link>https://clickear.github.io/%E6%9D%A8%E7%8E%89%E7%8E%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9D%A8%E7%8E%89%E7%8E%AF/</guid><description>技巧 如果对面是软辅，可以正面拉扯打前排。如果是硬辅，一般非常刮痧，着个时候，一定要学会切换思路，绕过前排直接秒后排，或者侧面从草丛切入。 补兵线：普通 pka 伤害很低，大部分时候，不需要用普攻，而是卡好节奏点，用强化普攻，补兵的经济多 50%，之前经常经济低，就是补兵不够细节。 前期，从边路回 [[中路]]，主要 3 个时间点， 1 是第一个兵也吃到，这个时候往往不能恋战，得很快就回防。 2 是第二个并吃到，放掉第一个兵，这个时候可能多打几秒。 3 是只吃第三个兵。或者如果对面是有主宰先锋，可以很久再回去，还可以让对面的 3 个小兵吃不到经验。 核心思路：</description></item><item><title>枪炮、病菌与钢铁-贾雷德·戴蒙德</title><link>https://clickear.github.io/%E6%9E%AA%E7%82%AE%E7%97%85%E8%8F%8C%E4%B8%8E%E9%92%A2%E9%93%81-%E8%B4%BE%E9%9B%B7%E5%BE%B7%E6%88%B4%E8%92%99%E5%BE%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9E%AA%E7%82%AE%E7%97%85%E8%8F%8C%E4%B8%8E%E9%92%A2%E9%93%81-%E8%B4%BE%E9%9B%B7%E5%BE%B7%E6%88%B4%E8%92%99%E5%BE%B7/</guid><description>元数据 [!abstract] 枪炮、病菌与钢铁
书名： 枪炮、病菌与钢铁 作者： 贾雷德·戴蒙德 简介： 文明的先发与落后，社会的发展与倒退等问题，一直是人类关注的大议题。就此，西方社会普遍认为西方国家先进的技术、完善的社会阶层、百花齐放的文化成果，共同造就了西方文明优于其他，并决定了西方统治世界的地位，甚至认为究其根本是西方种族的优越性决定的。《枪炮、病菌与钢铁》告诉我们，答案并非如此。环境因素才是决定历史的车轮向西方倾斜倾，文明的进步的确助推了文化、技术和组织的先发，但同时也导致了细菌的侵袭和船坚利炮对文明的致命摧毁，也就是说，种族决定论和西方文明优势论都无法解释为什么西方国家可以统治世界百年之久。是环境与资源的优渥滋养了西方文明的发展。此外，戴蒙德从生物学、地理学、历史学、社会学、人类学等跨学科视角颠覆了很多人们习以为常的社会发展疑问，为我们理解人类历史提供了崭新的视角。从深耕专业领域的科学家，到关注人类社会与命运的思想者，戴蒙德从科学、历史、社会的交叉点探究地理、人类与未来，他在某种程度上代表了西方公共知识分子传统的转向——从专业性转向思想性，他依仗多学科的视角和丰富的游历经验，追思人类历史的发展路径，从中寻找经验与教训，试图为人类社会未来的发展提供建议。 出版时间 2022-01-01 00:00:00 ISBN： 9787521736816 分类： 社会文化-社科 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>查询日志</title><link>https://clickear.github.io/%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/</guid><description>[!TIP] 技巧💡
即通用日志，所有命令都会被记录。不建议生产环境开启
查询日志在MySQL中被称为general log(通用日志), 查询日志里的内容不要被&amp;quot;查询日志&amp;quot;误导, 认为里面只存储select语句, 其实不然, 查询日志里面记录了数据库执行的所有命令, 不管语句是否正确, 都会被记录, 具体原因如下:
insert查询为了避免数据冲突, 如果此前插入过数据, 当前插入的数据如果跟主键或唯一键的数据重复那肯定会报错 update时也会查询因为更新的时候很可能会更新某一块数据 delete查询, 只删除符合条件的数据</description></item><item><title>查询语句执行</title><link>https://clickear.github.io/%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E6%89%A7%E8%A1%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E6%89%A7%E8%A1%8C/</guid><description>一条查询语句的执行过程一般是经过连接器、分析器、优化器、执行器等功能模块，最后到达存储引擎。
[!TIP] 引擎提供接口获取数据，服务层判断值是否相等💡
打开表，调用存储引擎接口获取数据（存储引擎提供一些接口，比如获取接口等，服务层来判断值是否相等）。[[索引下推]]，减少回表与sever层交互开销，
比如select * from T where ID=10;
无索引(全表扫描)
调用引擎接口取&amp;quot;T表第一行&amp;quot;接口，如果ID = 10， 数据保存在结果集中 调用引擎接口取“下一行”，重复相同的判断逻辑，直到取到这个表的最后一行 执行器将结果集返回给客户端</description></item><item><title>标签是无效的关联结构</title><link>https://clickear.github.io/%E6%A0%87%E7%AD%BE%E6%98%AF%E6%97%A0%E6%95%88%E7%9A%84%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%A0%87%E7%AD%BE%E6%98%AF%E6%97%A0%E6%95%88%E7%9A%84%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84/</guid><description>%%我的理解:: 这点我跟andy的观点基本一致。所以我将标签，用成了表达状态的一种标记，而非传统的笔记方法将其用来分类和做关联。%%
Thoughts Memo 汉化组译制
原文： Tags are an ineffective association structure (andymatuschak.org)
标签是将性质不同的项目联系起来的简单方法，但用以描述关系的话，信息量就太低了。
所有标记上特定标签的条目，都显示为是相关的……但很难看出是怎样的关系。这些条目只是混乱无序的列表。
其中一些条目比其他条目与特定标签的主题更相关，所以我们应该[[优先选择明确的关联，而不是推断的关联]]。
其中一些条目只有几个句子是和标签有关的，但该标签却与整体条目相关联。我们应该[[优先使用细粒度的关联]]。与此相关的是，标签往往相当模糊或宽泛。更好的方法是更精确地链接到关联想法。</description></item><item><title>标记复制法</title><link>https://clickear.github.io/%E6%A0%87%E8%AE%B0%E5%A4%8D%E5%88%B6%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%A0%87%E8%AE%B0%E5%A4%8D%E5%88%B6%E6%B3%95/</guid><description>为了解决效率问题，“复制”收集算法出现了。它将可用内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块内存用完，需要进行垃圾收集时，就将存活者的对象复制到另一块上面，然后将第一块内存全部清除。这种算法有优有劣：
优点：不会有内存碎片的问题。 缺点：内存缩小为原来的一半，浪费空间。 为了解决空间利用率问题，可以将[[堆]]内存中的[[新生代]]分为三块： Eden、From Survivor、To Survivor，比例是 8:1:1，每次使用 Eden 和其中一块 Survivor。回收时，将 Eden 和 Survivor 中还存活的对象一次性复制到另外一块 Survivor 空间上，最后清理掉 Eden 和刚才使用的 Survivor 空间。这样只有 10% 的内存被浪费。</description></item><item><title>标记整理法</title><link>https://clickear.github.io/%E6%A0%87%E8%AE%B0%E6%95%B4%E7%90%86%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%A0%87%E8%AE%B0%E6%95%B4%E7%90%86%E6%B3%95/</guid><description>标记：它的第一个阶段与标记-清除算法是一模一样的，均是遍历 GC Roots，然后将存活的对象标记。
整理：移动所有存活的对象，且按照内存地址次序依次排列，然后将末端内存地址以后的内存全部回收。因此，第二阶段才称为整理阶段。
这是一种老年代的垃圾收集算法。老年代的对象一般寿命比较长，因此每次垃圾回收会有大量对象存活，如果采用复制算法，每次需要复制大量存活的对象，效率很低。
优点：
消除了标记清除算法内存区域分散的缺点 消除了复制算法中，内存减半代价 缺点:
从效率上来讲，标记整理算法要低于复制算法 移动对象的同时，如果对象被其他对象引用，则还需要调整引用的地址 移动的过程中，需要全程暂停用户应用程序，即STW</description></item><item><title>标记清除法</title><link>https://clickear.github.io/%E6%A0%87%E8%AE%B0%E6%B8%85%E9%99%A4%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%A0%87%E8%AE%B0%E6%B8%85%E9%99%A4%E6%B3%95/</guid><description>::我的理解 [!TIP] 技巧💡
注意标记引用对象，不是垃圾对象
标记的过程是：遍历所有的 GC Roots，然后将所有 GC Roots 可达的对象标记为存活的对象。
清除的过程将遍历堆中所有的对象，将没有标记的对象全部清除掉。与此同时，清除那些被标记过的对象的标记，以便下次的垃圾回收。
这种方法有两个不足：
效率问题：标记和清除两个过程的效率都不高。 空间问题：标记清除之后会产生大量不连续的内存碎片，碎片太多可能导致以后需要分配较大对象时，无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。</description></item><item><title>校验</title><link>https://clickear.github.io/%E6%A0%A1%E9%AA%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%A0%A1%E9%AA%8C/</guid><description>确保加载的类符合 JVM 规范和安全，保证被校验类的方法在运行时不会做出危害虚拟机的事件，其实就是一个安全检查
分类 文件格式检查 字节码检查 符号检查</description></item><item><title>棘轮效应</title><link>https://clickear.github.io/%E6%A3%98%E8%BD%AE%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%A3%98%E8%BD%AE%E6%95%88%E5%BA%94/</guid><description>指人的消费习惯形成之后有不可逆性，呈现出“向上调整容易”，而“向下调整难”的现象。[可追溯中国宋代政治家和文学家司马光（1019-1086）《训俭示康》中“由俭入奢易，由奢入俭难”的内容。现代则由美国经济学家 J.S.Duesenberry 在其《收入、储蓄的消费行为理论》中提出。]
案例：哆哆从小穿惯了一线品牌的服装，突然有一天妈妈说，咱们现在家里经济困难，咱们要改穿快时尚品牌了，结果哆哆想到没法跟同学攀比了，觉得痛不欲生，每次出门都是巨大的煎熬。</description></item><item><title>模板汇总</title><link>https://clickear.github.io/%E6%A8%A1%E6%9D%BF%E6%B1%87%E6%80%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%A8%A1%E6%9D%BF%E6%B1%87%E6%80%BB/</guid><description>1 2 3 4 list from &amp;#34;Extras/Templates&amp;#34; and -#MOC sort dates desc limit 99</description></item><item><title>檀香刑-莫言</title><link>https://clickear.github.io/%E6%AA%80%E9%A6%99%E5%88%91-%E8%8E%AB%E8%A8%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%AA%80%E9%A6%99%E5%88%91-%E8%8E%AB%E8%A8%80/</guid><description>元数据 [!abstract] 檀香刑
书名： 檀香刑 作者： 莫言 简介： 莫言最重要的长篇力作，以清末酷刑挑战阅读神经，一开腔，就把读者拉进了莫言独特的叙述世界里：荡气回肠的“猫腔”大戏，“凤头—猪肚—豹尾”的传统讲述方式，“说书人”天马行空的想象，“高密东北乡”的奇人异事，是暴力的美学、历史的介入和现实的关照的完美结合。 出版时间 2017-01-01 00:00:00 ISBN： 9787533946647 分类： 文学-经典作品 出版社： 浙江文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>死锁</title><link>https://clickear.github.io/%E6%AD%BB%E9%94%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%AD%BB%E9%94%81/</guid><description>死锁的发生与否，并不在于事务中有多少条SQL语句，死锁的关键在于：两个(或以上)的Session加锁的顺序不一致。分析MySQL每条SQL语句的加锁规则，分析出每条语句的加锁顺序，然后检查多个并发SQL间是否存在以相反的顺序加锁的情况，就可以分析出各种潜在的死锁情况，也可以分析出线上死锁发生的原因。
死锁情况 加锁顺序不一致 不同索引下，加锁顺序不一致，比较隐晦 虽然每个Session都只有一条语句，仍旧会产生死锁。要分析这个死锁，首先必须用到本文前面提到的MySQL加锁的规则。针对Session 1，从name索引出发，读到的[hdc, 1]，[hdc, 6]均满足条件，不仅会加name索引上的记录X锁，而且会加聚簇索引上的记录X锁，加锁顺序为先[1,hdc,100]，后[6,hdc,10]。而Session 2，从pubtime索引出发，[10,6],[100,1]均满足过滤条件，同样也会加聚簇索引上的记录X锁，加锁顺序为[6,hdc,10]，后[1,hdc,100]。发现没有，跟Session 1的加锁顺序正好相反，如果两个Session恰好都持有了第一把锁，请求加第二把锁，死锁就发生了.
RC下，因走全表锁表情况 session2 在insert时，锁id10。 session1 在delete的时候，走全表扫描，会先对所有行先加锁，在server层判断不符合条件，在进行解锁，在对Id10加锁时，发现之前已经有锁，锁等待 session2 和2步骤类型，在对Id1加锁时，发现锁等待。 session1和session2互相等待对方完成，死锁产生 解除死锁 查看：show engine innodb status \G; 查看是否锁表，查看进程，杀死进程 查看当前锁定和等待的事务，杀死进程 如何避免 加锁顺序一致，尽可能一次锁定所需数据行 保持简短的事务，单次操作数量不宜过多 使用较低的隔离级别 合理使用索引，减少不必要的索引 通过参数[[innodb_lock_wait_timeout ]]锁等待超时时间，根据实际业务场景来设置超时时间，InnoDB引擎默认值是50s。 发起死锁检测，发现死锁后，主动回滚死锁链条中的某一个事务，让其他事务得以继续执行。将参数 [[innodb_deadlock_detect]] 设置为 on，表示开启这个逻辑（默认是开启状态）</description></item><item><title>每周写工作周报就精疲力尽，因此暂时不在个人笔记库做每周回顾</title><link>https://clickear.github.io/%E6%AF%8F%E5%91%A8%E5%86%99%E5%B7%A5%E4%BD%9C%E5%91%A8%E6%8A%A5%E5%B0%B1%E7%B2%BE%E7%96%B2%E5%8A%9B%E5%B0%BD%E5%9B%A0%E6%AD%A4%E6%9A%82%E6%97%B6%E4%B8%8D%E5%9C%A8%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%BA%93%E5%81%9A%E6%AF%8F%E5%91%A8%E5%9B%9E%E9%A1%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%AF%8F%E5%91%A8%E5%86%99%E5%B7%A5%E4%BD%9C%E5%91%A8%E6%8A%A5%E5%B0%B1%E7%B2%BE%E7%96%B2%E5%8A%9B%E5%B0%BD%E5%9B%A0%E6%AD%A4%E6%9A%82%E6%97%B6%E4%B8%8D%E5%9C%A8%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%BA%93%E5%81%9A%E6%AF%8F%E5%91%A8%E5%9B%9E%E9%A1%BE/</guid><description/></item><item><title>每日工作日志</title><link>https://clickear.github.io/%E6%AF%8F%E6%97%A5%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%AF%8F%E6%97%A5%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/</guid><description>%%我的理解:: 即[[» Daily notes工作流]]%%
每一天，我都以当天的日期为标题开始写笔记；例如： 2020-03-12。它记录了一天中的零星事件：思考、临时工作等。这是一个有意的倾倒场，一个释放阀，以便总是有「一个地方可以放那个东西」。
在[[笔记类型体系]]中，这是保真度最低的一层，设计上是短暂的。但是，当这些想法看起来有可能是有头绪的时候，它们就会被提取到我的写作收件箱中（[[为临时性的和不完整的笔记设置写作收件箱]]）。有时我会用日常工作日志作为一个起草空间，我可以将部分内容粗略地提取到[[常青笔记]]。
对我来说，重要的部分是：
这是一个我可以无阻力存放任何内容的空间。（[[闭合开环]]） 我感到有一种自然的压力，要提取任何想「超越一天」的东西——在[[笔记类型体系]]中向上移动。 因为日常工作日志也是一个动态的笔记，所以它也可以作为[[上下文反向链接]]的一个有用的存根：[[反向链接可以用来隐式定义知识管理系统中的节点]]。</description></item><item><title>比较优势</title><link>https://clickear.github.io/%E6%AF%94%E8%BE%83%E4%BC%98%E5%8A%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%AF%94%E8%BE%83%E4%BC%98%E5%8A%BF/</guid><description>国际贸易的基础并不限于生产技术上的绝对差别，只要各国之间存在着生产技术上的相对差别，就会出现生产成本和产品价格的相对差别，从而使各国在不同的产品上具有比较优势，使国际分工和国际贸易成为可能。</description></item><item><title>沈梦溪</title><link>https://clickear.github.io/%E6%B2%88%E6%A2%A6%E6%BA%AA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B2%88%E6%A2%A6%E6%BA%AA/</guid><description/></item><item><title>沉默的大多数-王小波</title><link>https://clickear.github.io/%E6%B2%89%E9%BB%98%E7%9A%84%E5%A4%A7%E5%A4%9A%E6%95%B0-%E7%8E%8B%E5%B0%8F%E6%B3%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B2%89%E9%BB%98%E7%9A%84%E5%A4%A7%E5%A4%9A%E6%95%B0-%E7%8E%8B%E5%B0%8F%E6%B3%A2/</guid><description>元数据 [!abstract] 沉默的大多数
书名： 沉默的大多数 作者： 王小波 简介： 自从我辈成人以来，所见到的一切全是颠倒着的。在一个喧嚣的话语圈下面，始终有个沉默的大多数。——王小波。王小波以卓越的文采，众醉独醒的姿态对社会道德伦理、国学与新儒家、个体尊严以及小说、艺术等方面进行了酣畅淋漓的剖析，表达了有理有趣的观点。时隔二十年，依然如同清流一般，读来让人沉思，让人捧腹，让人拍案叫绝。王小波说：我活在世上，无非想要明白些道理，遇见些有趣的事。倘能如我所愿，我的一生就算成功。我开始得太晚了，很可能做不成什么，但我总得申明我的态度，所以就有了这本书——为我自己，也代表沉默的大多数。 出版时间 2016-11-01 00:00:00 ISBN： 9787506384131 分类： 文学-散文杂著 出版社： 作家出版社 高亮划线 序言 📌 在这个世界上，大多数愚蠢里含有假装和弄假成真的成分。 ^3-2056-2082 ⏱ [[2022-08-08]] 21:44 思维的乐趣 📌 我父亲是一位哲学教授，在五六十年代从事思维史的研究。在老年时，他告诉我，自己一生的学术经历，就如一部恐怖电影。每当他企图立论时，总要在大一统的官方思想体系里找自己的位置，就如一只老母鸡要在一个大搬家的宅院里找地方孵蛋一样。结果他虽然热爱科学而且很努力，但在一生中却没有得到思维的乐趣，只收获了无数的恐慌。 ^10-1517-1669 ⏱ [[2022-08-08]] 22:03 二 📌 在生活的其他方面，某种程度的单调、机械是必须忍受的，但是思想决不能包括在内。胡思乱想并不有趣，有趣是有道理而且新奇。在我们生活的这个世界上，最大的不幸就是有些人完全拒绝新奇。 ^11-1236-1323 ⏱ [[2022-08-08]] 22:08 三 📌 有些人认为，人应该充满境界高尚的思想，去掉格调低下的思想。这种说法听上去美妙，却使我感到莫大的恐慌。因为高尚的思想和低下的思想的总和就是我自己；倘若去掉一部分，我是谁就成了问题。假设有某君思想高尚，我是十分敬佩的；可是如果你因此想把我的脑子挖出来扔掉，换上他的，我绝不肯，除非你能够证明我罪大恶极，死有余辜。人既然活着，就有权保证他思想的连续性，到死方休。更何况那些高尚和低下完全是以他们自己的立场来度量的，假如我全盘接受，无异于请那些善良的思想母鸡到我脑子里下蛋，而我总不肯相信，自己的脖子上方，原来是长了一座鸡窝。 ^12-945-1204 ⏱ [[2022-08-08]] 22:09 四 📌 愚蠢是一种极大的痛苦；降低人类的智能，乃是一种最大的罪孽。所以，以愚蠢教人，那是善良的人所能犯下的最严重的罪孽。从这个意义上说，我们决不可对善人放松警惕。假设我被大奸大恶之徒所骗，心理还能平衡；而被善良的低智人所骗，我就不能原谅自己。 ^13-509-626 ⏱ [[2022-08-08]] 22:11 五 📌 古人曾说：天不生仲尼，万古长如夜。但我有相反的想法。假设历史上曾有一位大智者，一下发现了一切新奇、一切有趣，发现了终极真理，根绝了一切发现的可能性，我就情愿到该智者以前的年代去生活。这是因为，假如这种终极真理已经被发现，人类所能做的事就只剩下了依据这种真理来做价值判断。从汉代以后到近代，中国人就是这么生活的。我对这样的生活一点都不喜欢。 ^14-453-622 ⏱ [[2022-08-08]] 22:15 三、中国知识分子该不该放弃中古遗风 知识分子的不幸 📌 我老师学问很大，但很天真；我学问很小，但老奸巨猾。 ^18-3699-3724 ⏱ [[2022-08-08]] 22:58 📌 中国的人文知识分子，有种以天下为己任的使命感，总觉得自己该搞出些给老百姓当信仰的东西。这种想法的古怪之处在于，他们不仅是想当牧师、想当神学家，还想当上帝（中国话不叫上帝，叫“圣人”）。可惜的是，老百姓该信什么，信到哪种程度，你说了并不算哪，这是令人遗憾的。还有一条不令人遗憾，但却要命：你自己也是老百姓；所以弄得不好，就会自己屙屎自己吃。中国的知识分子在这一节上从来就不明白，所以常常会害到自己。 ^18-4461-4659 ⏱ [[2022-08-08]] 23:00 读书笔记 序言 划线评论 📌 假设有一个领域，谦虚的人、明理的人以为它太困难、太暧昧，不肯说话，那么开口说话的就必然是浅薄之徒、狂妄之辈。这导致一种负筛选：越是傻子越敢叫唤——马上我就要说到，这些傻子也不见得真的傻，但喊出来的都是傻话。 ^10500316-7BmDm19Sv 💭 qq群微信群里面，频繁出来BB的，大概率是浅薄或狂妄之徒。 ⏱ [[2022-08-08]] 21:42 划线评论 📌 我年轻时所见的人，只掌握了一些粗浅（且不说是荒谬）的原则，就以为无所不知，对世界妄加判断，结果整个世界都深受其害。直到年登不惑，才明白萧翁的见解原有偏颇之处；但这是后话——无论如何，萧翁的这些议论，对那些浅薄之辈、狂妄之辈，总是一种解毒剂。 ^10500316-7BmBx8meN 💭 不做浅薄且狂妄之人~~ ⏱ [[2022-08-08]] 21:14 六 划线评论 📌 几年前，我刚刚走出沉默，写了一本书，送给长者看。他不喜欢这本书，认为书不能这样来写。照他看来，写书应该能教育人民，提升人的灵魂。这真是金玉良言。但是在这世界上的一切人之中，我最希望予以提升的一个，就是我自己。这话很卑鄙，很自私，也很诚实。 ^10500316-7BmEvcrNg 💭 哈哈，写书、写文章、分享的目的，诚实地说，首先就是要提升和满足自己呀。 ⏱ [[2022-08-08]] 21:59 四 划线评论 📌 假设善恶是可以判断的，那么明辨是非的前提就是发展智力，增广见识。然而，你劝一位自以为已经明辨是非的人发展智力，增广见识，他总会觉得你让他舍近求远，不仅不肯，还会心生怨恨。我不愿为这样的小事去得罪人。 ^10500316-7BmFog9nD 💭 所以我们生活中，不要想着去教导别人，最多提醒别人就够了。避免教导不成，反而破坏关系。 ⏱ [[2022-08-08]] 22:13 划线评论 📌 假如让我举出自己最不善良的时刻，那就是现在了。可能是因为受了一些教育，也可能是因为已经成年，反正你要让我去解放什么人的话，我肯定要先问问，这些人是谁，为什么需要帮助；其次要问问，帮助他们是不是我能力所及；最后我还要想想，自己直奔云南去挖坑，是否于事有补。这样想来想去，我肯定不愿去插队。 ^10500316-7BmFjdmzW 💭 哈哈，有点精致的利己主义者的感觉。 ⏱ [[2022-08-08]] 22:12 五 划线评论 📌 我认为，在人类的一切智能活动里，没有比做价值判断更简单的事了。假如你是只公兔子，就有做出价值判断的能力——大灰狼坏，母兔子好。然而兔子就不知道九九表。此种事实说明，一些缺乏其他能力的人，为什么特别热爱价值的领域。倘若对自己做价值判断，还要付出一些代价；对别人做价值判断，那就太简单、太舒服了。讲出这样粗暴的话来，我的确感到羞愧，但我并不感到抱歉。因为这种人士带给我们的痛苦实在太多了。 ^10500316-7BmFEtyt7 💭 从古到今，永久有这样的双标狗。包括我自己也或多或少沾染了这样的习惯。情绪输出，价值判断，是如今互联网上异常活跃的2种作为导火索引起争吵的方式。 ⏱ [[2022-08-08]] 22:17 二、中国的知识分子的中古遗风 划线评论 📌 现在可以说说中国现代知识分子的中古遗风是什么了。他既不像远古的中国知识分子（如孔孟、杨朱、墨子）那样建立道德体系，也不像现代欧美知识分子跨价值观的立论（价值中立）。最爱干的事是拿着已有的道德体系说别人，如前所述，这正是中古的遗风。倒霉的是，在社会转型时期，已有的道德体系不完备，自己都说不清；于是就哀叹：人心不古，世道浇漓，道德武器船不坚、炮不利，造新船新炮又不敢。其实可以把开船打炮的事交给别人干——但咱们又怕失业。当然，知识分子也是社会的一分子，也该有公民热情，针砭时弊也是知识分子该干的事；不过出于公民热情去做事时，是以公民的身份，而非知识分子的身份，和大家完全平等。这个地位咱们又接受不了，非要有点知识分子特色不可。照我看这个特色就是中古特色。 ^10500316-7BmHX7Fqh 💭 用自己的道德体系批判别人，这还不要紧，还会傲慢地认为自己是知识分子，所以有权力有身份这么去批判别人。 ⏱ [[2022-08-08]] 22:52 三、中国知识分子该不该放弃中古遗风 划线评论 📌 最典型的是他自以为道德清高（士有百行），地位崇高（四民之首），有资格教训别人（教化于民）。这就是说，我们是这样看自己的。问题是别人怎样看我们。我所见到的事，实属可怜，“脱裤子割尾巴”地混了这么多年，才混到工人阶级队伍里，可谓“心比天高，命比纸薄”！在这种情况下，我建议咱们把“士”的传统忘掉为好，因为不肯忘就是做白日梦了。如果我们讨论社会问题，就讲硬道理：有什么事，我知道，别人还不知道；或者有什么复杂的问题，我想通了，别人想不通；也就是说，按现代的标准来表现知识分子的能力。这样虽然缺少了中国特色，但也未见得不好。 ^10500316-7BmI6jEii 💭 空有身份，没有真才实学的『知识分子』，真让人讨论。 ⏱ [[2022-08-08]] 22:54 我是哪一种女权主义者 划线评论 📌 作为一个男人，我同意自由女权主义，并且觉得这就够了。从这种认同里，我能获得一点平常心，并向其他男人推荐这种想法。我承认男人和女人很不同，但这种差异并不意味着别的：既不意味着某个性别的人比另一种性别的人优越，也不意味着某种性别的人比另一种性别的人高明。一个女孩子来到人世间，应该像男孩一样，有权利寻求她所要的一切。假如她所得到的正是她所要的，那就是最好的——假如我是她的父亲，我也别无所求了。 ^10500316-7BmJqYkgv 💭 agree with you。 ⏱ [[2022-08-08]] 23:15 男人眼中的女性美 划线评论 📌 对于妇女在外貌方面的焦虑情绪，男人的平常心是一副解毒剂。另外，还该提到女权主义者的看法，她们说：我们干吗要给男人打扮？这话有些道理，也有点过激。假如修饰自己意味着尊重对方，还是打扮一下好。 ^10500316-7BmJDkvAJ 💭 化妆不是为了臭美，而是为了尊重对方。这条男女通用。对于男生来说，化妆的意思更广义一些，通指捯饬一下自己。 ⏱ [[2022-08-08]] 23:18 本书评论</description></item><item><title>没有完美的分类</title><link>https://clickear.github.io/%E6%B2%A1%E6%9C%89%E5%AE%8C%E7%BE%8E%E7%9A%84%E5%88%86%E7%B1%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B2%A1%E6%9C%89%E5%AE%8C%E7%BE%8E%E7%9A%84%E5%88%86%E7%B1%BB/</guid><description>up:: [[§ flomo101 - 思维方式目录]]
我的理解 [[文件夹和标签]]的分类方式，是人们对物理世界的映射模仿，非常直观和迎合直觉。这么做本身也没错，只要某个知识点和领域是相对固定的，就用一个文件夹或压缩包将其圈起来。但现实往往所有的知识点都会存在发散和领域互通，不断生长。那么这种传统的分类方式，会导致到后面越来越累。
所以我的总结是：分类，可以。但让你感到累的分类，肯定就没必要了，此时用链接的方式，使自己的笔记自然生长即可。反正现在搜索能力这么强了。做笔记时与其考虑怎么分类，不如考虑如何命名以对自己的搜索习惯做优化，让自己将来更容易搜索到现在写下的笔记。
整理不是目的，是路径
# 🌳 没有完美的分类 很多 flomo 用户会问：我该如何分类；我该如何打标签。但这并不是真问题 —— 真正的问题是，我们该如何「组织」我们的信息。
# 为什么文件夹是一种古典的思维方式 无论是亚历山大图书馆，今日的维基百科，从历史的演进来看，知识管理一直伴随着两个亘古不变的话题「存储对象」以及「组织方式」 。</description></item><item><title>活着-余华</title><link>https://clickear.github.io/%E6%B4%BB%E7%9D%80-%E4%BD%99%E5%8D%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B4%BB%E7%9D%80-%E4%BD%99%E5%8D%8E/</guid><description>元数据 [!abstract] 活着
书名： 活着 作者： 余华 简介： 同名电影《活着》由张艺谋执导，葛优、巩俐两大影帝影后主演，1994年该片在第47届戛纳电影节上斩获评委会大奖、最佳男演员奖，同时还荣获了英国电影学院奖最佳外语片等重要奖项。由《活着》改编的电视剧《富贵》2005年开播，在第13届上海电视节上，摘得“白玉兰”奖——电视剧评委会大奖。《活着》是一篇读起来让人感到沉重的小说。那种只有阖上书本才会感到的隐隐不快，并不是由作品提供的故事的残酷造成的。毕竟，作品中的亡家，丧妻，失女以及白发人送黑发人这样的故事并不具备轰动性。同时，余华也不是一个具有很强煽动能力的作家，实际上，渲染这样的表达方式是余华一直所不屑的。余华所崇尚的只是叙述，用一种近乎冰冷的笔调娓娓叙说一些其实并不正常的故事。而所有的情绪就是在这种娓娓叙说的过程中中悄悄侵入读者的阅读。这样说来，《活着》以一种渗透的表现手法完成了一次对生命意义的哲学追问。本书荣获意大利格林扎纳·卡佛文学奖（1998年）、台湾《中国时报》十本好书奖（1994年），香港“博益”15本好书奖（1990年），中华图书特殊贡献奖（2005年），法国国际信使外国小说奖（2008年）；并入选香港《亚洲周刊》评选的“20世纪中文小说百年百强”；入选中国百位批评家和文学编辑评选的“九十年代最有影响的10部作品”，余华本人则于2004年荣获法兰西文学和艺术骑士勋章。 出版时间 2012-08-01 00:00:00 ISBN： 9787506365437 分类： 文学-经典作品 出版社： 作家出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>流浪地球-刘慈欣</title><link>https://clickear.github.io/%E6%B5%81%E6%B5%AA%E5%9C%B0%E7%90%83-%E5%88%98%E6%85%88%E6%AC%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B5%81%E6%B5%AA%E5%9C%B0%E7%90%83-%E5%88%98%E6%85%88%E6%AC%A3/</guid><description>元数据 [!abstract] 流浪地球
书名： 流浪地球 作者： 刘慈欣 简介： 刘慈欣的短篇小说构思巧妙，想象力纵横恣肆，将坚实的科学基础以及厚重的人文关怀隐藏在灵动精致的故事结构中。本集精选出刘慈欣的十一篇短篇小说，其中《朝闻道》《流浪地球》《乡村教师》《中国太阳》《全频带阻塞干扰》均获银河奖。《流浪地球》《乡村教师》已被改编为电影。《带上她的眼睛》入选人教版七年级下学期《语文》教材。本书封面插画为《流浪地球》同名电影海报。 出版时间 2019-02-01 00:00:00 ISBN： 9787536493759 分类： 文学-经典作品 出版社： 四川科技出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>测试效应</title><link>https://clickear.github.io/%E6%B5%8B%E8%AF%95%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B5%8B%E8%AF%95%E6%95%88%E5%BA%94/</guid><description>%%我的理解:: 及时刷题答题，对学习来说是多么多么重要啊。题海战术就是一种不需要太精巧的学习流程的设计，简单贯彻就能取得成绩的最简单粗暴的方法。%%
如果你努力回忆某个细节，那么这个行为本身会强化对细节的记忆。在学习上这么做时，被称作「提取练习」。
实验证明，即使在没有提供正确答案的情况下，甚至在给予应试者「开卷」以寻找正确答案的情况下，也会产生这种效应。这种效应已经在许多领域和许多年龄段上得到了证明。
这表明测试的作用明显不同。在典型的课堂上，教师和学生都认为学习是发生在讲课过程中，或在阅读材料时。测试是用来评估学习的。但事实上，测试本身就是学习过程中的一个重要部分。
与其他学习活动对比 尽管学生在练习过程中的成功率较低，但提取练习比单纯通过重复阅读学习材料能带来更持久的长期记忆 (Roediger, 2006)。相关文章： 合意困难（术语来自 Bjork）。
总体而言，单与基于[[精细编码]]的练习相比，测试效应似乎还能带来更持久的记忆 (Karpicke and Smith, 2012)，并改善学习表现 (Karpicke and Blunt, 2011)。</description></item><item><title>浙大夜惊魂-紫金陈</title><link>https://clickear.github.io/%E6%B5%99%E5%A4%A7%E5%A4%9C%E6%83%8A%E9%AD%82-%E7%B4%AB%E9%87%91%E9%99%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B5%99%E5%A4%A7%E5%A4%9C%E6%83%8A%E9%AD%82-%E7%B4%AB%E9%87%91%E9%99%88/</guid><description>元数据 [!abstract] 浙大夜惊魂
书名： 浙大夜惊魂 作者： 紫金陈 简介： 揭秘浙大校园不为人知的风水格局 出版时间 ISBN： 分类： 精品小说-悬疑推理 出版社： 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>浩荡两千年：中国企业公元前7世纪~1869年（十年典藏版）-吴晓波</title><link>https://clickear.github.io/%E6%B5%A9%E8%8D%A1%E4%B8%A4%E5%8D%83%E5%B9%B4%E4%B8%AD%E5%9B%BD%E4%BC%81%E4%B8%9A%E5%85%AC%E5%85%83%E5%89%8D7%E4%B8%96%E7%BA%AA~1869%E5%B9%B4%E5%8D%81%E5%B9%B4%E5%85%B8%E8%97%8F%E7%89%88-%E5%90%B4%E6%99%93%E6%B3%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B5%A9%E8%8D%A1%E4%B8%A4%E5%8D%83%E5%B9%B4%E4%B8%AD%E5%9B%BD%E4%BC%81%E4%B8%9A%E5%85%AC%E5%85%83%E5%89%8D7%E4%B8%96%E7%BA%AA~1869%E5%B9%B4%E5%8D%81%E5%B9%B4%E5%85%B8%E8%97%8F%E7%89%88-%E5%90%B4%E6%99%93%E6%B3%A2/</guid><description>元数据 [!abstract] 浩荡两千年：中国企业公元前7世纪~1869年（十年典藏版）
书名： 浩荡两千年：中国企业公元前7世纪~1869年（十年典藏版） 作者： 吴晓波 简介： 中国的工商文明为什么早慧而晚熟？中国的商人在社会进步中到底扮演了怎样的角色？中国的政商关系为何如此僵硬而对立？中国的市场经济体制终将以怎样的方式建成？在公元前7世纪到1869年长达两千多年的时间跨度里，财经作家吴晓波继续前两部作品的研究主题，再次探寻国家与资本、政策与商人之间的关系，并试图寻找出这些事关当代的问题的答案。作者的写作表明，在高度专制的集权制度下，权力与商业的对立、紧张关系，贯穿于两千余年的帝国时期。两千余年来，国家机器对商业的控制、干扰及盘剥，是阻碍工商文明发展的更重要的因素，长达两千多年的中国企业史，归根到底是一部政商博弈史。在本书中，以上问题有的已找到了答案，有的则还在大雾中徘徊。 出版时间 2017-12-01 00:00:00 ISBN： 9787508660721 分类： 经济理财-商业 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>浮动垃圾</title><link>https://clickear.github.io/%E6%B5%AE%E5%8A%A8%E5%9E%83%E5%9C%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B5%AE%E5%8A%A8%E5%9E%83%E5%9C%BE/</guid><description>[!NOTE] 浮动垃圾
并发标记阶段，进行多标会产生浮动垃圾。因为并发线程和用户线程是同时运行的，此时用户线程可能会多标记一些垃圾。
在并发标记和并发清理过程中，用户线程还在运行，就会产生新的垃圾。由于垃圾要在标记后才能清除，只能等到下一次轮回标记后才能清除，就会产生未及时处理的垃圾。</description></item><item><title>清醒思考的艺术-罗尔夫·多贝里</title><link>https://clickear.github.io/%E6%B8%85%E9%86%92%E6%80%9D%E8%80%83%E7%9A%84%E8%89%BA%E6%9C%AF-%E7%BD%97%E5%B0%94%E5%A4%AB%E5%A4%9A%E8%B4%9D%E9%87%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B8%85%E9%86%92%E6%80%9D%E8%80%83%E7%9A%84%E8%89%BA%E6%9C%AF-%E7%BD%97%E5%B0%94%E5%A4%AB%E5%A4%9A%E8%B4%9D%E9%87%8C/</guid><description>元数据 [!abstract] 清醒思考的艺术
书名： 清醒思考的艺术 作者： 罗尔夫·多贝里 简介： 本书作者罗尔夫·多贝里讲到自己曾与一名美国友人分享发现——小概率事件往往具有颠覆全局的破坏力。这个美国人后来据此写了一本书成为大畅销书，这本书就是《黑天鹅》，那个美国人叫纳西姆·塔勒布。于是，多贝里决定自己写一本书，这就是在德国率先超越《乔布斯传》登上畅销书排行榜榜首的《清醒思考的艺术》。 出版时间 2013-01-01 00:00:00 ISBN： 9787508637679 分类： 哲学宗教-哲学读物 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>清醒思考的艺术：你最好让别人去犯的52种思维错误-罗尔夫·多贝里</title><link>https://clickear.github.io/%E6%B8%85%E9%86%92%E6%80%9D%E8%80%83%E7%9A%84%E8%89%BA%E6%9C%AF%E4%BD%A0%E6%9C%80%E5%A5%BD%E8%AE%A9%E5%88%AB%E4%BA%BA%E5%8E%BB%E7%8A%AF%E7%9A%8452%E7%A7%8D%E6%80%9D%E7%BB%B4%E9%94%99%E8%AF%AF-%E7%BD%97%E5%B0%94%E5%A4%AB%E5%A4%9A%E8%B4%9D%E9%87%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B8%85%E9%86%92%E6%80%9D%E8%80%83%E7%9A%84%E8%89%BA%E6%9C%AF%E4%BD%A0%E6%9C%80%E5%A5%BD%E8%AE%A9%E5%88%AB%E4%BA%BA%E5%8E%BB%E7%8A%AF%E7%9A%8452%E7%A7%8D%E6%80%9D%E7%BB%B4%E9%94%99%E8%AF%AF-%E7%BD%97%E5%B0%94%E5%A4%AB%E5%A4%9A%E8%B4%9D%E9%87%8C/</guid><description>元数据 [!abstract] 清醒思考的艺术：你最好让别人去犯的52种思维错误
书名： 清醒思考的艺术：你最好让别人去犯的52种思维错误 作者： 罗尔夫·多贝里 简介： 《清醒思考的艺术》不仅指陈思考错误，更提出有效对抗妙招，预防掉入隐形思考陷阱，让你看清思考盲点，清除决策障碍，选对思考方法，做出正确选择。每个思考错误搭配一幅风格独特的插画，实用性与娱乐性兼具。罗尔夫·多贝里既有深邃的洞察能力，又有出色的讲故事能力，穿插生活趣事、名人轶事、历史故事、爱情关系、投资理财、股票买卖、心理学实验等，叙述丰富、幽默，耐人寻味。躁动的年代，我们需要一本锻炼独立思考的书！ 出版时间 2016-08-01 00:00:00 ISBN： 9787508663012 分类： 个人成长-认知思维 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>渐进阅读</title><link>https://clickear.github.io/%E6%B8%90%E8%BF%9B%E9%98%85%E8%AF%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B8%90%E8%BF%9B%E9%98%85%E8%AF%BB/</guid><description>02 渐进阅读 · 语雀</description></item><item><title>游戏笔记</title><link>https://clickear.github.io/%E6%B8%B8%E6%88%8F%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B8%B8%E6%88%8F%E7%AC%94%E8%AE%B0/</guid><description> [[§ 王者荣耀]] [[炉石传说]] [[天谕手游]]</description></item><item><title>游泳入门</title><link>https://clickear.github.io/%E6%B8%B8%E6%B3%B3%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B8%B8%E6%B3%B3%E5%85%A5%E9%97%A8/</guid><description>之前在游泳课学习的时候，太过于在乎别人的感受了，畏手畏脚，哪怕自己的动作，比如踢腿会踹到别人，以及怕换气失败的喝水，导致自己好长时间没学会。
真正学会的时候，反而是最后几节课的时候，深水区的人少了，我放开了自己的思想束缚，抱着多喝几口水的决心去，分分钟就学会了。
[[蛙泳入门]]
[[自由泳入门]]</description></item><item><title>游走</title><link>https://clickear.github.io/%E6%B8%B8%E8%B5%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B8%B8%E8%B5%B0/</guid><description/></item><item><title>滑动窗口</title><link>https://clickear.github.io/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</guid><description>滑动窗口 滑动窗口算法是在给定特定窗口大小的数组或字符串上执行要求的操作，它的原理与网络传输TCP协议中的滑动窗口协议（Sliding Window Protocol）基本一致。
这种技术可以将一部分问题中的嵌套循环转变为一个单循环，因此它可以减少时间复杂度。滑动窗口主要应用在数组和字符串上。
例如，设定滑动窗口（window）大小为 3，当滑动窗口每次划过数组时，计算当前滑动窗口中元素的和，可以得到一组结果 res。
因为滑动窗口是靠窗口起始、结束两个位置来表示的，所以滑动窗口也可以看作特殊的“双指针”。[[双指针法]]
例题 滑动窗口最大值（#239） [[堆]] 构建一个大顶堆（Max Heap），那么堆顶元素 heap[0] 永远是最大的。每次移动窗口的时候，我们只要维护这个堆、在里面插入删除元素，然后返回堆顶元素heap[0]就可以了。
在代码中，我们可以用一个优先队列（Priority Queue）来实现大顶堆
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public int[] maxSlidingWindow(int[] nums, int k) { int[] result = new int[nums.</description></item><item><title>滑雪入门</title><link>https://clickear.github.io/%E6%BB%91%E9%9B%AA%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%BB%91%E9%9B%AA%E5%85%A5%E9%97%A8/</guid><description>跟学 [[游泳]] 的时候差不多，骨子里的胆小，怯懦和小心翼翼，导致我学滑雪的时候好慢，因为非常害怕摔倒，害怕受伤。</description></item><item><title>激荡四十年：中国企业1978—2018（全三册）-吴晓波</title><link>https://clickear.github.io/%E6%BF%80%E8%8D%A1%E5%9B%9B%E5%8D%81%E5%B9%B4%E4%B8%AD%E5%9B%BD%E4%BC%81%E4%B8%9A19782018%E5%85%A8%E4%B8%89%E5%86%8C-%E5%90%B4%E6%99%93%E6%B3%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%BF%80%E8%8D%A1%E5%9B%9B%E5%8D%81%E5%B9%B4%E4%B8%AD%E5%9B%BD%E4%BC%81%E4%B8%9A19782018%E5%85%A8%E4%B8%89%E5%86%8C-%E5%90%B4%E6%99%93%E6%B3%A2/</guid><description>元数据 [!abstract] 激荡四十年：中国企业1978—2018（全三册）
书名： 激荡四十年：中国企业1978—2018（全三册） 作者： 吴晓波 简介： 本套装包含《激荡十年，水大鱼大》和《激荡三十年（上下册》），共三册。 出版时间 2017-12-01 00:00:00 ISBN： 分类： 经济理财-财经 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>热点代码</title><link>https://clickear.github.io/%E7%83%AD%E7%82%B9%E4%BB%A3%E7%A0%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%83%AD%E7%82%B9%E4%BB%A3%E7%A0%81/</guid><description>怎样判断为热点代码呢？即执行比较多的代码。
被多次调用的方法
被多次执行的循环体
判定方法: 基于采样的热点探测 基于计数器的热点探测</description></item><item><title>熟练的阅读一般都是非线性的</title><link>https://clickear.github.io/%E7%86%9F%E7%BB%83%E7%9A%84%E9%98%85%E8%AF%BB%E4%B8%80%E8%88%AC%E9%83%BD%E6%98%AF%E9%9D%9E%E7%BA%BF%E6%80%A7%E7%9A%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%86%9F%E7%BB%83%E7%9A%84%E9%98%85%E8%AF%BB%E4%B8%80%E8%88%AC%E9%83%BD%E6%98%AF%E9%9D%9E%E7%BA%BF%E6%80%A7%E7%9A%84/</guid><description>Thoughts Memo 汉化组译制
原文： Skillful reading is generally non-linear (andymatuschak.org)
书籍的结构几乎总是高度线性的，书籍这一媒介本身的形式也鼓励读者线性地阅读文本。但掌握阅读技巧的读者很少以线性方式阅读——他们要么带着目的阅读，寻找书中能帮他们解决问题的内容；要么在第一次阅读时理解这本书的结构（见 检视阅读）；或者从索引开始，只关注其中最重要的段落。
McCutcheon（2015）有一个有趣的反面观点：
古代作者将卷轴的线性特点作为文本解释中的一个维度（译者注：古代的西方解释学即是解释神话、圣经、法典等的技艺之学）。他们在卷轴上写就的诗集没有明确的线索来串连一首首诗歌，但是卷轴的特点迫使读者对内容变化做出解释，因为他们必须以线性方式来阅读诗集。
参考文献 Edwards, P.</description></item><item><title>牛魔</title><link>https://clickear.github.io/%E7%89%9B%E9%AD%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%89%9B%E9%AD%94/</guid><description/></item><item><title>狼人杀轻度入门</title><link>https://clickear.github.io/%E7%8B%BC%E4%BA%BA%E6%9D%80%E8%BD%BB%E5%BA%A6%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%8B%BC%E4%BA%BA%E6%9D%80%E8%BD%BB%E5%BA%A6%E5%85%A5%E9%97%A8/</guid><description/></item><item><title>猪八戒</title><link>https://clickear.github.io/%E7%8C%AA%E5%85%AB%E6%88%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%8C%AA%E5%85%AB%E6%88%92/</guid><description>打护盾不被视为伤害，因而没有回血效果。同理日暮这些也就不会叠被动。</description></item><item><title>现有的间隔重复系统不鼓励常青笔记的创作</title><link>https://clickear.github.io/%E7%8E%B0%E6%9C%89%E7%9A%84%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E7%B3%BB%E7%BB%9F%E4%B8%8D%E9%BC%93%E5%8A%B1%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E7%9A%84%E5%88%9B%E4%BD%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%8E%B0%E6%9C%89%E7%9A%84%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E7%B3%BB%E7%BB%9F%E4%B8%8D%E9%BC%93%E5%8A%B1%E5%B8%B8%E9%9D%92%E7%AC%94%E8%AE%B0%E7%9A%84%E5%88%9B%E4%BD%9C/</guid><description>%%我的理解:: 如果单纯使用anki，和常青笔记是割裂开的。前者更强调间隔重复记忆，后者更强调不断地更新和积累。%%
Thoughts Memo 汉化组译制
原文： Existing spaced repetition systems discourage evergreen notes (andymatuschak.org)
尽管[[间隔重复记忆系统]]中的笔记，与[[常青笔记]]一样都是原子化的（[[常青笔记应该是原子化的]]），但这些卡片在很多方面过于原子化（[[间隔重复卡片通常是原子化的，而助记媒介为其赋予结构]]）。这种形式不鼓励渐进式的综合和提炼。
卡片上的问答漂浮在均一的迷雾中，与它们内在的有意义的情境分离开来，不与相关的邻居相联系（[[常青笔记之间应该建立大量链接]]），而且看起来除了复习的时候都不适合阅读。这些问答的本意不是成为经久耐用，持续增长的单元，而是用之即弃的残片。如果它们与[[常青笔记]]的独立系统有明确的关系，这些问题并不是问题，但它们没有。
令人高兴的是：[[助记媒介可以扩展到个人笔记上]]。</description></item><item><title>理解概念需与其尽力较量</title><link>https://clickear.github.io/%E7%90%86%E8%A7%A3%E6%A6%82%E5%BF%B5%E9%9C%80%E4%B8%8E%E5%85%B6%E5%B0%BD%E5%8A%9B%E8%BE%83%E9%87%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%90%86%E8%A7%A3%E6%A6%82%E5%BF%B5%E9%9C%80%E4%B8%8E%E5%85%B6%E5%B0%BD%E5%8A%9B%E8%BE%83%E9%87%8F/</guid><description>%%我的理解:: 入门时可以用类比等手段简化概念以求理解，但真正理解肯定是要围绕领域的核心概念进行不断地提问，上下求索。%%
如果你想真正理解一个 idea，你必须与之斗争。
你不能只是读一些东西，听一节课，或在谈话中听一个概念。你得想：这在哪里适用，在哪里不适用？其含义是什么？假设是什么？这里代表的是谁的观点？这否定了什么？
正如斯蒂芬 · 考斯林特别指出的那样，
第一条格言是「思考清楚」。其关键思想非常简单：你越是把事情想清楚，越是注意你正在做的事情，你就越可能记住它。
这个概念是 #e/建构主义 的一个核心思想，这也回答了为什么传授主义不起作用。
还有叔本华：
我们读书时，是别人在代替我们思想，我们只不过重复他的思想活动的过程而已。……读书越多，留存在脑中的东西越少，两者适成反比，读书多，他的脑海就像一块密密麻麻、重重叠叠、涂抹再涂抹的黑板一样。读书而不加以思考，决不会有心得，即使稍有印象，也浅薄而不生根，大抵在不久后又会淡忘丧失。以人的身体而论，我们所吃的东西只有五十分之一能被吸收，其余的东西，则因呼吸、蒸发等等作用而消耗掉。精神方面的营养亦同。
Grant Sanderson (2019-11-28):</description></item><item><title>生成效应</title><link>https://clickear.github.io/%E7%94%9F%E6%88%90%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%94%9F%E6%88%90%E6%95%88%E5%BA%94/</guid><description>Thoughts Memo 汉化组译制
原文： Generation effect (andymatuschak.org)
「生成效应」是指，比起主动阅读或材料展示，人们能更好地记住自己生成的东西。
例如，效应的命名者 Slamecka 和 Graf（1978）研究表明，人们自己生成关联对（如:押韵：wave / c??e）时，比单纯阅读关联对（如：押韵：wave / cave）的记忆表现更好。
有时会很容易把这种效应与[[测试效应]]混淆：在让学生从记忆中提取答案时（如在自由回忆测试中），回忆质量会有一部分取决于答案的生成过程。但 Karpicke 和 Zaromb（2010）的实验表明，这两种影响是不同的，而且在一定程度上可能是彼此独立的。通过尝试生成目标来学习的人，最终比通过尝试回忆来学习的人回忆质量更差。</description></item><item><title>生死疲劳-莫言</title><link>https://clickear.github.io/%E7%94%9F%E6%AD%BB%E7%96%B2%E5%8A%B3-%E8%8E%AB%E8%A8%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%94%9F%E6%AD%BB%E7%96%B2%E5%8A%B3-%E8%8E%AB%E8%A8%80/</guid><description>元数据 [!abstract] 生死疲劳
书名： 生死疲劳 作者： 莫言 简介： 这是一部中国乡村社会的庞杂喧哗、充满苦难的蜕变历史，也是莫言在艺术上向中国古典章回体小说和民间叙事的伟大传统致敬的鸿篇巨制。《生死疲劳》是莫言以寓言的方式观照历史、借荒诞的想象书写现实，从而讲述一个农民家族半个多世纪以来悲欢离合、兴衰演变的长篇巨著。在小说中，被冤杀的地主西门闹经历了六道轮回，变成驴、牛、猪、狗、猴，最终又转世为一个大头婴儿，滔滔不绝地讲述着自己每一世的离奇经历。小说通过六道轮回的想象跨越生与死，悲悯着历史变迁之中无常的命运，也歌颂着生存于这片土地上的农民们世代相继、生生不息的执着生命力。亚洲周刊“2006年十大好书”，中国小说学会“2006年度小说排行榜”榜首，2008年香港浸会大学“世界华文长篇小说奖‘红楼梦奖’首奖。 出版时间 2017-01-01 00:00:00 ISBN： 9787533946678 分类： 文学-经典作品 出版社： 浙江文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>用手机收集和分流，而不是（通常）阅读</title><link>https://clickear.github.io/%E7%94%A8%E6%89%8B%E6%9C%BA%E6%94%B6%E9%9B%86%E5%92%8C%E5%88%86%E6%B5%81%E8%80%8C%E4%B8%8D%E6%98%AF%E9%80%9A%E5%B8%B8%E9%98%85%E8%AF%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%94%A8%E6%89%8B%E6%9C%BA%E6%94%B6%E9%9B%86%E5%92%8C%E5%88%86%E6%B5%81%E8%80%8C%E4%B8%8D%E6%98%AF%E9%80%9A%E5%B8%B8%E9%98%85%E8%AF%BB/</guid><description>%%我的理解:: 简直不能再认同，手机上的不做笔记的阅读，吸收率极低，看看娱乐文章和视频还行，如果看到那些深度好文，还是先放进inbox，坐到电脑旁边了再继续。%%
Thoughts Memo 汉化组译制
原文： Use phones to collect and triage, not (usually) to read (andymatuschak.org)</description></item><item><title>登门槛效应</title><link>https://clickear.github.io/%E7%99%BB%E9%97%A8%E6%A7%9B%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%99%BB%E9%97%A8%E6%A7%9B%E6%95%88%E5%BA%94/</guid><description>又称得寸进尺效应，指一个人一旦接受了他人的一个微不足道的要求，为了避免认知上的不协调，或想给他人以前后一致的印象，就有可能接受更大的要求。 [与“拆屋效应”类似，也是首次由 J.L.Freedman 和 S.C.Fraser 于 1966 年做的“无压力的屈从——登门槛技术”的现场实验中提出。具体区别：拆屋效应中的目标者，对满足行动者的要求有较大预期，而登门槛效应中的目标者，对满足行动者的要求较小预期，因此导致看似矛盾的差异。]
案例：嘟嘟不愿接受较高较难的要求，因为它费时费力又难以成功，相反，他却乐于接受较小的、较易完成的要求，在实现了较小的要求后，再慢慢地接受较大的要求。</description></item><item><title>白夜行-东野圭吾</title><link>https://clickear.github.io/%E7%99%BD%E5%A4%9C%E8%A1%8C-%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%99%BD%E5%A4%9C%E8%A1%8C-%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/</guid><description>元数据 [!abstract] 白夜行
书名： 白夜行 作者： 东野圭吾 简介： 1999年，东野圭吾41岁正值盛年，写作出道已14年，在笔力、技巧、体力和雄心上都炉火纯青，于是洋洋洒洒写出了这部鸿篇巨制《白夜行》。这种规模宏大的长篇作品在职业作家一生的创作中极为罕见，完成后基本都被视为生涯代表作。《白夜行》一经推出即成为东野圭吾的长篇小说代表作，被万千书迷视为东野圭吾作品中的无冕之·王，畅销至今。《白夜行》中文版发行量超600万册，和《嫌疑人X的献身》《恶意》《解忧杂货店》并称为东野圭吾四大杰作。 出版时间 2017-07-21 00:00:00 ISBN： 9787544291163 分类： 精品小说-悬疑推理 出版社： 南海出版公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>白帽子讲Web安全（纪念版）-吴翰清</title><link>https://clickear.github.io/%E7%99%BD%E5%B8%BD%E5%AD%90%E8%AE%B2Web%E5%AE%89%E5%85%A8%E7%BA%AA%E5%BF%B5%E7%89%88-%E5%90%B4%E7%BF%B0%E6%B8%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%99%BD%E5%B8%BD%E5%AD%90%E8%AE%B2Web%E5%AE%89%E5%85%A8%E7%BA%AA%E5%BF%B5%E7%89%88-%E5%90%B4%E7%BF%B0%E6%B8%85/</guid><description>元数据 [!abstract] 白帽子讲Web安全（纪念版）
书名： 白帽子讲Web安全（纪念版） 作者： 吴翰清 简介： 本书根据安全宝副总裁吴翰清之前在互联网公司若干年的实际工作经验而写成，在解决方案上具有极强的可操作性；深入分析诸多错误的方法及误区，对安全工作者有很好的参考价值；对安全开发流程与运营的介绍，同样具有深刻的行业指导意义。《纪念版》与前版内容相同，仅为纪念原作以多种语言在全球发行的特殊版本，请读者按需选用。 出版时间 2014-06-01 00:00:00 ISBN： 9787121234101 分类： 计算机-理论知识 出版社： 电子工业出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>皮格马利翁效应</title><link>https://clickear.github.io/%E7%9A%AE%E6%A0%BC%E9%A9%AC%E5%88%A9%E7%BF%81%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%9A%AE%E6%A0%BC%E9%A9%AC%E5%88%A9%E7%BF%81%E6%95%88%E5%BA%94/</guid><description>up:: [[∑ 常见心理学效应]]
其实就是自我暗示
皮格马利翁效应
联想记忆：pig 暗示 马，跑得快有肉吃，激励，暗示效应
亦称期望效应、罗森塔尔效应，指人们基于对某种情境的知觉而形成的期望或预言，会使该情境产生适应这一期望或预言的效应。你期望什么，你就会得到什么，很多当下所得其实是过去的“未来期待”产生的结果。简而言之，就是对期望的心理暗示，可以促使人们的认知和行为发生同向改变，进而使该期望得以实现。由美国心理学家、哈佛大学教授 RobertRosenthal（1933-）和他的学生 A. L. Jacobson，于 1968 年进行的 7 项小学教育实验后提出。
案例：小时候，由于班里同学平均颜值都很高，爸妈敏锐地发现妮妮对自己的外貌不是很自信，后来爸妈和老师都常对她说：“妮妮，你长得可真漂亮，而且成绩也在进步，真为你开心！”，于是妮妮自信心越来越足，每天照镜子的时候，也觉得自己变美了。渐渐地，妮妮真的越来越自信、漂亮了，而且对自己要求越来越高，连成绩也越来越好了。</description></item><item><title>直接内存</title><link>https://clickear.github.io/%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98/</guid><description>不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域,是堆外内存，直接向操作系统申请。也可能导致OOM异常
[!TIP] 技巧💡
堆外内存，直接向操作系统申请内存。
访问速度比堆快，可用在性能场景，如NIO JDK1.8后的[[元数据区]]，是存储在堆外内存的，方便不受jvm内存的分配大小影响，直接与本地内存相关。 来源于NIO，通过存在堆中的DirectByteBuffer操作Native内存。
通常，访问直接内存的速度会优于Java堆，即读写性能高。
因此出于性能考虑，读写频繁的场合可能会考虑使用直接内存
Java的NIO库允许Java程序使用直接内存，用于数据缓冲区
直接内存大小可以通过MaxDirectMemorySize设置。
如果不指定，默认与堆的最大值-Xmx参数值一致</description></item><item><title>知识定义与管理</title><link>https://clickear.github.io/%E7%9F%A5%E8%AF%86%E5%AE%9A%E4%B9%89%E4%B8%8E%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%9F%A5%E8%AF%86%E5%AE%9A%E4%B9%89%E4%B8%8E%E7%AE%A1%E7%90%86/</guid><description>up:: [[§ flomo101 - 思维方式目录]]
我的理解 知识的定义跟[[🔡DIKW]]提到的模型相似，书本提供的是信息和数据，而只有经过特殊的工作和行动去运用它们，才产生了知识。技术是知识的一种。
而知识管理，以及个人知识管理，即[[∑ PKM|PKM]]，其实就是能学会系统性地去获取、分配和利用知识。就像员工和员工管理的定义。少楠认为这边重要的有4点：
高质量信息获取 高效率知识转化 规范的系统运作 创建连接激发新知识
我的[[∑ 工作和生活的效率体系建设]]也要注重这4个方面。
此外，对知识的划分，有利于我们更好的学习和理解。 显性知识，容易通过media传授 know-how，know-who 隐形知识，需要经验积累和悟性 know-why，know-what # 什么是知识 知识是用于生产的信息（有意义的信息） —— 1998年，世界银行《1998年世界发展报告－知识促进发展》</description></item><item><title>知识工作应能聚沙成塔</title><link>https://clickear.github.io/%E7%9F%A5%E8%AF%86%E5%B7%A5%E4%BD%9C%E5%BA%94%E8%83%BD%E8%81%9A%E6%B2%99%E6%88%90%E5%A1%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%9F%A5%E8%AF%86%E5%B7%A5%E4%BD%9C%E5%BA%94%E8%83%BD%E8%81%9A%E6%B2%99%E6%88%90%E5%A1%94/</guid><description>%%我的理解:: 曾经没有足够稳定和持久坚持的笔记库和知识库，一直在玩沙，建不成知识宝塔。以前为忙碌的工作写过太多短暂的工作日志，却鲜有为自己的知识增长写常青笔记。短期看确实工作效率高了，长期看积累和沉淀下来的就少了，有点低头看路，却不曾仰望星空的感觉。%%
Thoughts Memo 汉化组译制
原文： Knowledge work should accrete (andymatuschak.org)
知识工作中很多活动似乎十分短效，其产出在活动完成后大多弃置一旁。
面对一篇很难回复的邮件，你可能突然想起，这封邮件和你最近萦绕心头的一件事可以挂上钩。你也许花了一个小时仔细地写了篇回信，其中记录了你最近的思绪……然后，这些思考的结晶就躺在「已发送」的文件夹里，或许在你和你的同事脑中留下了短暂的印象。你花费的心血只不过能微妙地影响了你和你同事的思考。
同样，[[大多数人只写临时的笔记]]，尽管通过有效的实践，这些临时笔记打下了重要基础；见[[常青笔记是知识工作的基本单位]]。
我们应该竭力设计这样的实践体系，基于我们点滴积累的努力而赢取复利。
[[间隔重复记忆系统]]为记忆实现了这一点：当你发现信息有用时，可以投入一点点精力，便能确保这条信息对你而言随时可用。随着时间推移，间隔重复图书馆便积累了成千上万的问题，（我强烈认为）这些知识可能使你以后更容易成为一个有效的知识工作者。</description></item><item><title>破窗效应</title><link>https://clickear.github.io/%E7%A0%B4%E7%AA%97%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%A0%B4%E7%AA%97%E6%95%88%E5%BA%94/</guid><description>指不良现象如果被放任存在，会诱使人们仿效，甚至变本加厉的现象。源自美国斯坦福大学心理学家 Philip Zimbardo 于 1969 年进行了一项汽车实验的结果证明。根据此实验，政治学家 James Q. Wilson 和犯罪学家 George L. Kelling 正式提出该理论，并通过《Broken Windows》一文发表于 1982 年 3 版《The Atlantic Monthly》杂志。</description></item><item><title>禁手规则</title><link>https://clickear.github.io/%E7%A6%81%E6%89%8B%E8%A7%84%E5%88%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%A6%81%E6%89%8B%E8%A7%84%E5%88%99/</guid><description>禁手类型 长连禁手 若黑棋再下一步，就可以连成 5 子，但 5 子所在横纵斜线上，有另 1 个棋子，会导致连成不止 5 子，甚至 6、7 子，则黑棋不能下这个地方。
长连禁手的出现，让白棋多了很多防守可能。
四四禁手 前置知识
活 4：2 边都没堵住</description></item><item><title>科技想要什么-凯文·凯利</title><link>https://clickear.github.io/%E7%A7%91%E6%8A%80%E6%83%B3%E8%A6%81%E4%BB%80%E4%B9%88-%E5%87%AF%E6%96%87%E5%87%AF%E5%88%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%A7%91%E6%8A%80%E6%83%B3%E8%A6%81%E4%BB%80%E4%B9%88-%E5%87%AF%E6%96%87%E5%87%AF%E5%88%A9/</guid><description>元数据 [!abstract] 科技想要什么
书名： 科技想要什么 作者： 凯文·凯利 简介： 凯文·凯利向我们介绍了一种全新的科技观。他认为，作为整体，科技不是由线路和金属构成的一团乱麻，而是有生命力的自然形成的系统，它的起源完全可以回溯到生命的初始时期。正如生物进化呈现出无意识的趋势，科技也是如此。通过追踪这些长期趋势，我们可以对“科技想要什么”有所理解。 出版时间 2011-11-01 00:00:00 ISBN： 9787508630373 分类： 科学技术-自然科学 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>程序计数器</title><link>https://clickear.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8/</guid><description>每个线程有一个独立的程序计数器，线程之间互不影响。是当前线程所执行的字节码的行号指示器，这样线程切换回来后，也能继续执行字节码。因为存储的是一个字节码行号地址，所以是唯一不会出现OOM的区域，没有垃圾回收。</description></item><item><title>穷查理宝典：查理·芒格智慧箴言录（全新增订本）-彼得·考夫曼</title><link>https://clickear.github.io/%E7%A9%B7%E6%9F%A5%E7%90%86%E5%AE%9D%E5%85%B8%E6%9F%A5%E7%90%86%E8%8A%92%E6%A0%BC%E6%99%BA%E6%85%A7%E7%AE%B4%E8%A8%80%E5%BD%95%E5%85%A8%E6%96%B0%E5%A2%9E%E8%AE%A2%E6%9C%AC-%E5%BD%BC%E5%BE%97%E8%80%83%E5%A4%AB%E6%9B%BC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%A9%B7%E6%9F%A5%E7%90%86%E5%AE%9D%E5%85%B8%E6%9F%A5%E7%90%86%E8%8A%92%E6%A0%BC%E6%99%BA%E6%85%A7%E7%AE%B4%E8%A8%80%E5%BD%95%E5%85%A8%E6%96%B0%E5%A2%9E%E8%AE%A2%E6%9C%AC-%E5%BD%BC%E5%BE%97%E8%80%83%E5%A4%AB%E6%9B%BC/</guid><description>元数据 [!abstract] 穷查理宝典：查理·芒格智慧箴言录（全新增订本）
书名： 穷查理宝典：查理·芒格智慧箴言录（全新增订本） 作者： 彼得·考夫曼 简介： 他是巴菲特的导师与人生合伙人，他是当今最伟大的投资思想家，他是伯克希尔·哈撒韦51年间19.2%年复合增长率的奇迹缔造者。理解商业社会和投资本质，必读这本书！本书全面收录了查理·芒格的个人传记与投资哲学，以及过去20年来芒格主要的公开演讲和媒体访谈，是每一个投资者不可不读的必备工具书。查理·芒格在商业社会取得了巨大的成功，他的独特思维方式，他对商业伦理的“洁癖”，他对终身学习的强调，可以给我们每一个普通人带来启迪。 出版时间 2021-07-01 00:00:00 ISBN： 9787521730401 分类： 个人成长-励志成长 出版社： 中信出版社 高亮划线 文前的话 📌 《穷查理宝典》效仿的对象当然是本杰明·富兰克林的《穷理查年鉴》。许多人知道，富兰克林是个通才。他生于波士顿，除了是美国独立战争领袖之外，还是新闻记者、出版家、作家、慈善家、废奴主义者、人民公仆、科学家、图书馆学家、外交家和投资家。富兰克林以穷理查为笔名，在1733年到1758年间出版了他的《年鉴》。它的内容丰富多彩，不仅包括许多后来很著名的富兰克林名言，还有日历、天气预报、天文信息、占星资料等等。《年鉴》这本书在当年的殖民地美国极受欢迎，每年能卖出大概10万本。 ^5-420-714 ⏱ [[2022-06-11]] 08:51 中文版序言 书中自有黄金屋 📌 查理对我而言，不仅是合伙人，是长辈，是老师，是朋友，是事业成功的典范，也是人生的楷模。我从他的身上不仅学到了价值投资的道理，也学到了很多做人的道理。他让我明白，一个人的成功并不是偶然的，时机固然重要，但人的内在品质更重要。 ^8-9172-9283 ⏱ [[2022-06-11]] 09:04 📌 比如，有人问查理如何才能找到一个优秀的配偶。查理说最好的方式就是让自己配得上她/他，因为优秀配偶都不是傻瓜。 ^8-11762-11816 ⏱ [[2022-06-11]] 09:07 读书笔记 本书评论</description></item><item><title>笔记写作实践大多是无效的</title><link>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E5%AE%9E%E8%B7%B5%E5%A4%A7%E5%A4%9A%E6%98%AF%E6%97%A0%E6%95%88%E7%9A%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E5%AE%9E%E8%B7%B5%E5%A4%A7%E5%A4%9A%E6%98%AF%E6%97%A0%E6%95%88%E7%9A%84/</guid><description>%%我的理解:: 为了写而写，为了记录而记录，这些笔记和写作思想，都走远了，做笔记，首先应该是为了思考。如果根本目标没搞对，在此基础上的方法和实践就可能走错路，比如很多人照搬柳比歇夫的类似[[间歇式日记]]的方法，却不先分析自己的生活和工作特点，最后只能草草了之放弃。还有[[番茄工作法]]等等，都有它的适用范围和局限性。%%
Thoughts Memo 汉化组译制
原文： Note-writing practices are generally ineffective (andymatuschak.org)
[[知识工作应能聚沙成塔]]，但[[大多数人只写临时的笔记]]。
部分原因是[[笔记写作的反馈不足]]，人们甚至没有注意到他们的笔记写作实践是多么的无效。他们发展了一些基本的笔记写作技巧，并大多停留在那里（ 人们通常把技能发展到一个平台期，然后就停下来）。专业的表现没有得到很好的定义，所以人们表现不佳的情况并不明显（ 改善的显著性推动了技能的发展）。所有这些对其他核心知识工作技能来说也是如此： 知识工作的核心实践往往是临时性的。</description></item><item><title>笔记写作的反馈不足</title><link>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E7%9A%84%E5%8F%8D%E9%A6%88%E4%B8%8D%E8%B6%B3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E7%9A%84%E5%8F%8D%E9%A6%88%E4%B8%8D%E8%B6%B3/</guid><description>%%我的理解:: 任何努力，有反馈才能帮助我们不断改进，避免闭门造车，做笔记也是如此。所以[[数字花园]]这种形式很吸引我，能让我的笔记被看到。但现在由于缺少积累，很少人给我反馈，哎。%%
Thoughts Memo 汉化组译制
原文： Note-writing practices provide weak feedback (andymatuschak.org)
[[笔记写作实践大多是无效的]]，其中一个原因可能是由于笔记系统一般提供的反馈不足。
开始进行间隔重复练习的人每天都会得到强反馈：如果他写了一个糟糕的问题，这个问题便会立刻且此后长期地困扰着他；他会感觉到（在某种程度上）自己对某一主题的记忆保留率的增长。
相比之下，笔记写作的反馈非常迟缓：通常，当你写了一个笔记，你可能在几周内都不会去看它。这样的反馈也模棱两可：如果一个笔记能（或不能）帮助你提炼出一些深刻见解，它通常都不会特别明显。
一般来说，人们并不清楚一个笔记应该是什么样子，所以也就不清楚某个笔记是否符合这个标准。
[[常青笔记]]提供了更紧密和更强的反馈回路，这是因为你在不断地修改和参考过去的笔记。如果之前的笔记难以修改，你也会更容易注意到。使用[[可执行的写作策略]]也会对一个人的笔记系统产生更强的反馈。</description></item><item><title>笔记应该让你吃惊</title><link>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E5%BA%94%E8%AF%A5%E8%AE%A9%E4%BD%A0%E5%90%83%E6%83%8A/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E5%BA%94%E8%AF%A5%E8%AE%A9%E4%BD%A0%E5%90%83%E6%83%8A/</guid><description>%%我的理解:: 就像看一篇小说、看一部电影。我们不是影评家，我们没有必要每一个细节和每一帧都做笔记。我的原则是，让自己产生情绪波动的，感到惊喜的内容，去做笔记即可。%%
Thoughts Memo 汉化组译制
原文： Notes should surprise you (andymatuschak.org)
如果阅读和写笔记不能带来惊喜，那还有什么意义？
如果我们只是想记住一些东西，我们有间隔重复。如果我们只是想在某个局部环境中彻底理解某个特定的想法，我们就不会费心去维持一个长期的笔记系统。
这就是为什么我们有密集的链接网络（[[常青笔记之间应该建立大量链接]]）：这样，搜索可以帮助我们看到意外的联系。
这就是为什么我们遵循[[常青笔记应面向概念]]：这样，当写到一个看似新鲜的想法时，我们会偶然发现我们已经写过的东西（也许是出乎意料的）。
参考文献 Luhmann, N.</description></item><item><title>笔记标题建议使用完整的句子，避免模糊主张</title><link>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E6%A0%87%E9%A2%98%E5%BB%BA%E8%AE%AE%E4%BD%BF%E7%94%A8%E5%AE%8C%E6%95%B4%E7%9A%84%E5%8F%A5%E5%AD%90%E9%81%BF%E5%85%8D%E6%A8%A1%E7%B3%8A%E4%B8%BB%E5%BC%A0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E6%A0%87%E9%A2%98%E5%BB%BA%E8%AE%AE%E4%BD%BF%E7%94%A8%E5%AE%8C%E6%95%B4%E7%9A%84%E5%8F%A5%E5%AD%90%E9%81%BF%E5%85%8D%E6%A8%A1%E7%B3%8A%E4%B8%BB%E5%BC%A0/</guid><description>%%我的理解:: #todo 需要学习和养成这个习惯。%%
在[[常青笔记]]的写作过程中，我发现使用完整的句子作为笔记标题，有助于笔记保持面向概念（[[常青笔记应面向概念]]）。例如：[[教育计划往往会自我颠覆]]，[[常青笔记实现顺畅而渐进的写作（「渐进写作」）]]。
这些笔记标题通常是陈述句或者祈使句，明确地表达主张。主张明确的标题驱使我在笔记的主体部分充分围绕标题进行分析，以支持标题提出的主张。如果我写了一则笔记，但是却很难用精准的标题总结它，那么这通常表明我的想法不清晰，或者这则笔记涉及多个主题（违背了[[常青笔记应该是原子化的]]的原则）。在这两种情况下，解决办法都是将想法分解，然后先写自己最理解的部分。
问题也是很好的笔记标题，因为这个位置能驱使我提出触及笔记的核心的问题。有些问题确实是历久弥新的（[[卓越的能力在多大程度上是可以遗传的？]]）；而其他问题笔记则更偏向于短期的启发式卡片（ 助记媒介如何助力非专业知识的学习？ ）。第二类问题的目标是摆脱问号，将其重构为以陈述句/祈使句为标题的笔记。
这一策略的几个常见例外：
我只在定义核心术语术语时使用名词或名词短语（其他笔记一般围绕这些术语展开）。例子：[[可执行的写作策略]]，[[设赋体验]]，[[赋能环境]] 提纲式笔记（见[[在写作时创建推测性大纲]]）如[[§ 笔记写作系统]] 更多内容请见[[笔记类型体系]] 开始写笔记时，我通常不知道标题会是什么。标题往往涌现在笔记正文的写作过程中。当一则笔记使我联想到一个清晰而强有力的标题时，这表明说明我开始理解这则笔记了。相关文章：[[常青笔记的标题就像 API]]</description></item><item><title>笔记标题建议正面表述，以促进说理系统化</title><link>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E6%A0%87%E9%A2%98%E5%BB%BA%E8%AE%AE%E6%AD%A3%E9%9D%A2%E8%A1%A8%E8%BF%B0%E4%BB%A5%E4%BF%83%E8%BF%9B%E8%AF%B4%E7%90%86%E7%B3%BB%E7%BB%9F%E5%8C%96/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E6%A0%87%E9%A2%98%E5%BB%BA%E8%AE%AE%E6%AD%A3%E9%9D%A2%E8%A1%A8%E8%BF%B0%E4%BB%A5%E4%BF%83%E8%BF%9B%E8%AF%B4%E7%90%86%E7%B3%BB%E7%BB%9F%E5%8C%96/</guid><description>Thoughts Memo 汉化组译制
原文： Prefer positive note titles to promote systematic theory (andymatuschak.org)
在写[[常青笔记]]时，很容易写出类似「X 不好」或「Y 不行」的笔记。更可取的做法，则是让笔记标题正面地表达事物属性或要求。
仔细想来，主旨含有否定意味的笔记，通常包含一个描述性的理论，说明为什么缺失/缺憾的属性是重要的。把内隐的说理摆在明面上，更易于在更系统的上下文下审视主张，进一步阐释也不在话下。</description></item><item><title>笔记的误区</title><link>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E7%9A%84%E8%AF%AF%E5%8C%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E7%9A%84%E8%AF%AF%E5%8C%BA/</guid><description>up:: [[§ flomo101 - 思维方式目录]]
我的理解 没有完美契合的笔记方法论，都需要自己根据实际情况长期实践摸索和归纳出来。虽然说好的工具自带方法论，但方法论的优先级肯定高于工具的，这也是为什么有些大神通过txt写笔记也能获得很高的成就的原因。
做笔记首先是为了让自己更好的思考，就像工作台一样，把已知的材料摆在明面上，而后大脑能更高效地去思考，反之若不这么做，大脑可能要分担很大一部分精力去记忆和回忆线索，耗时耗力且不可靠。
没有人从零开始写作，常规的做法是写作之前，临时大量地搜集相关材料。而有了卡片笔记写作法，当下写的笔记[[增援未来]]，可以让我们在写作之前，不必完全依赖临时的搜集，大脑和笔记库已经有了相应的知识组块可供调用了。
未来的知识资本，将通过科技产生显著的放大效应，越发重要，甚至超过金融资本的重要程度，这更要求我们要拥有一个自己的知识数据库。在当下来说，知识资本也是稳定性和可靠性更高的，更别提其未来的潜力。
# 🖍 笔记的误区 其实仔细想想，我们很少有专门学过如何做笔记。即使知道一些方法，却也没思考过属于自己的方法是什么样的。
这里不会提供「最好的笔记方法」，相反，我们更鼓励你寻找并创造属于自己的方式。生产力专家，提供的思路仅仅是「如何写出来更好地生产力效率文章」，而不是你真实工作/生活环境。所以这些建议，并不一定符合你的真实世界。
真正的创造笔记方法的人，根本就没提过这套方法是什么，而是聚焦在产生丰硕的研究成果，比如卢曼（Luhmann），他几乎没写过关于 Zettelkasten （卡片盒笔记法）的文章，仅仅是在职业生涯快结束的时候写了一些小的实践分享。
所以在开始你的创造前，先来看看我们日常「默认」的思维盲区。
# 在你掌握了生产力技能之前，生产力工具都是无用的 我们不仅是在使用工具，还是在改进自己的工作流。多数时候不是工具不好用，而是缺少工作流程管理。</description></item><item><title>笔记类型体系</title><link>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E7%B1%BB%E5%9E%8B%E4%BD%93%E7%B3%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%AC%94%E8%AE%B0%E7%B1%BB%E5%9E%8B%E4%BD%93%E7%B3%BB/</guid><description>笔记类型体系 - 知乎</description></item><item><title>第七天-余华</title><link>https://clickear.github.io/%E7%AC%AC%E4%B8%83%E5%A4%A9-%E4%BD%99%E5%8D%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%AC%AC%E4%B8%83%E5%A4%A9-%E4%BD%99%E5%8D%8E/</guid><description>元数据 [!abstract] 第七天
书名： 第七天 作者： 余华 简介： 《第七天》讲述了一个普通人死后的七日见闻：叫杨飞的人死去了，但他的灵魂似乎还没走远，他接到一通电话，殡仪馆的人抱怨他火化迟到，而即将被火化的竟是杨飞自己……他在去殡仪馆的路上经历了一系列光怪陆离的事件，以及与生前亲友的爱恨离别。生活的不易、爱情的曲折、亲情的温暖……让活着的人无从找寻出口，只能在死后的世界里得到和解与救赎。余华用拙朴简白的手法写出了深沉的悲痛和感人的温情，写尽了中国人的善良与悲哀。 出版时间 2018-08-01 00:00:00 ISBN： 9787513331418 分类： 精品小说-社会小说 出版社： 新星出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>第九个寡妇-严歌苓</title><link>https://clickear.github.io/%E7%AC%AC%E4%B9%9D%E4%B8%AA%E5%AF%A1%E5%A6%87-%E4%B8%A5%E6%AD%8C%E8%8B%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%AC%AC%E4%B9%9D%E4%B8%AA%E5%AF%A1%E5%A6%87-%E4%B8%A5%E6%AD%8C%E8%8B%93/</guid><description>元数据 [!abstract] 第九个寡妇
书名： 第九个寡妇 作者： 严歌苓 简介： 《第九个寡妇》是著名女作家严歌苓的重要代表作，也是她的转型作。作品讲述了中原地区一个叫王葡萄的寡妇在土改时期藏匿其地主公爹的传奇故事，时间跨越二十世纪四十至八十年代。宏大的历史叙事与个人的传奇经历相结合，深远的济世情怀与浓郁的生活气息相结合。王葡萄是严歌苓笔下最光彩照人的女性角色之一，强大而嚣张、坚忍而娇媚，其浑然不分的仁爱与包容一切的宽厚使其超越了人世间一切利害之争。小说的情节从葡萄以童养媳身份掩护公爹尽孝与作为寡妇以强烈情欲与不同男人偷欢之间的落差展开，写出了人性的灿烂，体现了民间大地的真正的能量和本原。作者简介：严歌苓，女，1986年发表第一部长篇小说，1989年赴美留学。代表作有：长篇小说《第九个寡妇》、《小姨多鹤》、《一个女人的史诗》、《扶桑》、《人寰》、《雌性的草地》等。短篇小说《天浴》、《少女小渔》、《女房东》等。中篇小说《金陵十三钗》、《白蛇》、《谁家有女初长成》等。作品被翻译成英、法、荷、西、日等多国文字。多部作品被拍成电影或电视剧，最近几年的有《一个女人的史诗》、《小姨多鹤》等。 出版时间 2016-09-01 00:00:00 ISBN： 9787506390491 分类： 精品小说-社会小说 出版社： 作家出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>简约至上：交互式设计四策略-Giles Colborne</title><link>https://clickear.github.io/%E7%AE%80%E7%BA%A6%E8%87%B3%E4%B8%8A%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%AE%BE%E8%AE%A1%E5%9B%9B%E7%AD%96%E7%95%A5-Giles-Colborne/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%AE%80%E7%BA%A6%E8%87%B3%E4%B8%8A%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%AE%BE%E8%AE%A1%E5%9B%9B%E7%AD%96%E7%95%A5-Giles-Colborne/</guid><description>元数据 [!abstract] 简约至上：交互式设计四策略
书名： 简约至上：交互式设计四策略 作者： Giles Colborne 简介： 国际知名交互式设计专家力作，UI设计经典教程，从策略看设计心理学，经典的产品经理沉思录！本书介绍交互式设计的技术与技巧，讲述如何从目标用户的需求和期望出发，结合人类本身的心理特征和行为特点，用最简单的方法创建易用、有效而且让用户愉悦的设计。书中阐释了合理删除、分层组织、适时隐藏和巧妙转移这四个令交互式设计成果最大程度简单易用的策略。本书适合Web应用、互联网产品、移动应用及其他交互设计人员阅读。 出版时间 2011-01-01 00:00:00 ISBN： 9787115243249 分类： 计算机-理论知识 出版社： 人民邮电出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>算法</title><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid><description>算法 大O表示法 渐进符号 线性结构 线性存储 数组 一维数组 &amp;amp; 二维数组 FIRST_ADDR 首先地址 N行M列数组, L 每个元素大小
按行存储: ai,j = FIRST_ADDR + (i * M + j) * L</description></item><item><title>类加载器</title><link>https://clickear.github.io/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8/</guid><description>::我的理解 类加载器，主要是类在加载阶段，将class文件加载到JVM内存的过程，最终会在内存中生成一个代表这个类的java.lang.Class对象。
那存在的意义呢？能想到的有几点，不一定对。
为了对class的处理方式，如class来源于网络、class加密等 为了对加载的路径优先级问题，比如同一个类，在系统也有，用户目录也有，怎么处理？这就涉及到了类加载器的[[双亲委派机制]] 分类 启动类加载器（引导类加载器，Bootstrap ClassLoader） 这个类加载使用C/C++ 语言实现，嵌套在JVM 内部 它用来加载Java的核心库（JAVA_HOME/jre/lib/rt.jar、resource.jar或sun.boot.class.path路径下的内容），用于提供JVM自身需要的类 并不继承自 java.lang.ClassLoader，没有父加载器 加载扩展类和应用程序类加载器，并指定为他们的父类加载器 出于安全考虑，Boostrap 启动类加载器只加载名为java、Javax、sun等开头的类 扩展类加载器（Extension ClassLoader） java语言编写，由sun.</description></item><item><title>类的生命周期</title><link>https://clickear.github.io/%E7%B1%BB%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%B1%BB%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid><description>1 2 3 加载 --&amp;gt; 验证 --&amp;gt; 准备 --&amp;gt; 解析 --&amp;gt; 初始化 --&amp;gt; 使用 --&amp;gt; 卸载 |&amp;lt;------- 连接 -------&amp;gt;| |&amp;lt;------------- 类加载 -----------&amp;gt;| 类的生命周期，主要有[[加载]]到内存，[[校验]]是否是非法的class文件， [[准备]]、[[解析]]、[[初始化]]后，就形成了常用的JAVA类。</description></item><item><title>精益创业-埃里克·莱斯</title><link>https://clickear.github.io/%E7%B2%BE%E7%9B%8A%E5%88%9B%E4%B8%9A-%E5%9F%83%E9%87%8C%E5%85%8B%E8%8E%B1%E6%96%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%B2%BE%E7%9B%8A%E5%88%9B%E4%B8%9A-%E5%9F%83%E9%87%8C%E5%85%8B%E8%8E%B1%E6%96%AF/</guid><description>元数据 [!abstract] 精益创业
书名： 精益创业 作者： 埃里克·莱斯 简介： 我们正处在一个空前的全球创业兴盛时代，但无数创业公司都黯然收场，以失败告终。精益创业代表了一种不断形成创场推出极简的原型产品，然后在不断地试新的新方法，它源于“精益生产”的理念，提倡企业进行“验证性学习”，先向市验和学习中，以最小的成本和有效的方式验证产品是否符合用户需求，灵活调整方向。如果产品不符合市场需求，能“快速地失败、廉价地失败”，而不要“昂贵地失败”；如果产品被用户认可也应该不断学习，挖掘用户需求，迭代优化产品。 出版时间 2012-08-01 00:00:00 ISBN： 9787508622019 分类： 经济理财-管理 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>精细编码</title><link>https://clickear.github.io/%E7%B2%BE%E7%BB%86%E7%BC%96%E7%A0%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%B2%BE%E7%BB%86%E7%BC%96%E7%A0%81/</guid><description>%%我的理解:: 看描述，其实就是[[记忆宫殿]]所采用的助记法。%%
「精细编码」描述了将知识与现有记忆或经历建立联系的过程。一般认为，建立这样的联系有助于回忆，特别是与十分独特或有情感连接的目标建立联系时。
精细编码最常用于助记法：记忆数字时，将数字与名人、地点、气味等事物建立联系。
一些[[间隔重复记忆系统]]的用户会特意写出卡片，以促进精细编码。Karpicke 和 Smith 的实验（2012）表明，与只进行提取练习相比，这样做的好处并不大。相关文章： 提取练习似乎是一种比精细编码更有效的学习活动。
参考文献 Karpicke, J. D., &amp;amp; Blunt, J. R. (2011). Retrieval Practice Produces More Learning than Elaborative Studying with Concept Mapping.</description></item><item><title>精进：如何成为一个很厉害的人（新版）-采铜</title><link>https://clickear.github.io/%E7%B2%BE%E8%BF%9B%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%BE%88%E5%8E%89%E5%AE%B3%E7%9A%84%E4%BA%BA%E6%96%B0%E7%89%88-%E9%87%87%E9%93%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%B2%BE%E8%BF%9B%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%BE%88%E5%8E%89%E5%AE%B3%E7%9A%84%E4%BA%BA%E6%96%B0%E7%89%88-%E9%87%87%E9%93%9C/</guid><description>元数据 [!abstract] 精进：如何成为一个很厉害的人（新版）
书名： 精进：如何成为一个很厉害的人（新版） 作者： 采铜 简介： 盲目的努力，只是一种缓慢的叠加。在《精进：如何成为一个很厉害的人》中，作者提出了一种更有效的提升自我的方法：用持续精确的努力，撬动更大的可能，这便是精进。这本书为大家提供了时间、选择、行动、学习、思维、才能、成功七个方面的精进路径，只要依循书中的方法反复磨练，便可以日益精进，成为一个很厉害的人，找到实现自我的那条成功之道。这本书将帮助你做“时间”的掌控者，而不只是使用者。权衡本末轻重，做出比好更好的“选择”摈弃“过度准备”，即刻“行动”，在行动中增长智慧。 出版时间 2019-06-01 00:00:00 ISBN： 9787559435835 分类： 个人成长-人生哲学 出版社： 江苏凤凰文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>索引</title><link>https://clickear.github.io/%E7%B4%A2%E5%BC%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%B4%A2%E5%BC%95/</guid><description>[!INFO] 索引，排好序的查找结构
索引的目的在于提高查询效率，可以类比字典、 火车站的车次表、图书的目录等。 本质上，是一种排好序的快速查找数据结构。
优势:
提高数据检索效率，降低数据库IO成本 降低数据排序的成本，降低CPU的消耗 劣势:
索引也是一张表，保存了主键和索引字段，并指向实体表的记录，所以也需要占用内存 虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE。 因为更新表时，MySQL不仅要保存数据，还要保存一下索引文件每次更新添加了索引列的字段， 都会调整因为更新所带来的键值变化后的索引信息 索引分类 数据结构角度 B+树索引 Hash索引, [[memory |meory引擎]] Full-Text全文索引 R-Tree索引 从物理存储角度 聚集索引（clustered index）[[innodb]] 非聚集索引（non-clustered index），也叫辅助索引（secondary index）[[myisam]]</description></item><item><title>索引下推</title><link>https://clickear.github.io/%E7%B4%A2%E5%BC%95%E4%B8%8B%E6%8E%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%B4%A2%E5%BC%95%E4%B8%8B%E6%8E%A8/</guid><description>[!NOTE] 笔记
减少了回表与返回MySQL Server层的记录交互开销
在MySQL 5.6之前，并不区分Index Filter与Table Filter，统统将Index First Key与Index Last Key范围内的索引记录，回表读取完整记录，然后返回给MySQL Server层进行过滤。
而在MySQL 5.6之后，Index Filter与Table Filter1分离，Index Filter下降到InnoDB的索引层面进行过滤，减少了回表与返回MySQL Server层的记录交互开销，提高了SQL的执行效率。</description></item><item><title>索引覆盖</title><link>https://clickear.github.io/%E7%B4%A2%E5%BC%95%E8%A6%86%E7%9B%96/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%B4%A2%E5%BC%95%E8%A6%86%E7%9B%96/</guid><description> [!TIP] 技巧💡
如果一个索引包含（或者说覆盖）所有需要查询的字段的值。我们称之为“覆盖索引”。如果索引的叶子节点中已经包含要查询的数据，那么还有什么必要再回表查询呢？ 索引覆盖的优先级比索引下推高。 从普通索引中就可以得到查询的记录，不需要查询聚簇索引中的记录了。可以减少大量的IO操作
使用explain，可以通过输出的extra列来判断，对于一个索引覆盖查询，显示为using index，MySQL查询优化器在执行查询前会决定是否有索引覆盖查询。
索引覆盖的优先级比[[索引下推]]高（此规则，不确定与优化器优化是否有关联） ^4dfc81
[!TIP] 技巧💡
当可以进行索引覆盖，和 server层过滤时，会优先使用索引覆盖。只有当索引覆盖满足不了时，才会进行索引下推。原因，是因为索引下推要回表查询，导致比较慢？还是因为优化器的问题？
1 2 3 4 5 6 7 ```sql -- 索引下推(复合索引情况下使用)， using index condition select * from user where name = &amp;#39;xx&amp;#39; and age &amp;gt; 12; -- using index, using where 这个为什么不是索引下推，很迷惑。我理解是这里不需要回表，可以进行索引覆盖，优先级比索引下推高。 select name from user where name = &amp;#39;xx&amp;#39; and age &amp;gt; 12;</description></item><item><title>紫金陈：高智商犯罪（全集）-紫金陈</title><link>https://clickear.github.io/%E7%B4%AB%E9%87%91%E9%99%88%E9%AB%98%E6%99%BA%E5%95%86%E7%8A%AF%E7%BD%AA%E5%85%A8%E9%9B%86-%E7%B4%AB%E9%87%91%E9%99%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%B4%AB%E9%87%91%E9%99%88%E9%AB%98%E6%99%BA%E5%95%86%E7%8A%AF%E7%BD%AA%E5%85%A8%E9%9B%86-%E7%B4%AB%E9%87%91%E9%99%88/</guid><description>元数据 [!abstract] 紫金陈：高智商犯罪（全集）
书名： 紫金陈：高智商犯罪（全集） 作者： 紫金陈 简介： 《高智商犯罪1 设局》：毕业于浙大数学系的徐策在本科期间就有“逻辑王子”的美誉，他关于数理逻辑的论文多次上过刊物。其后拿到全额奖学金，赴美国加州大学获心理学博士，此后一直担任美国某投行的区域高管。徐策的单亲老妈在家乡的拆迁中被落石砸中，当场死亡。几名施工队员被判缓刑，现场指挥官员无一受惩。在其母一周年的忌日前，徐策却突然离职回国了……《高智商犯罪2 化工女王的逆袭》：何建生得罪了派出所所长的小舅子，被诬陷进了派出所拘留，十天后，妻子甘佳宁收到一个骨灰盒，原来何建生在派出所拘押期间，心脏病突发死亡。突遭惊天变故，顷刻之间家破人亡，甘佳宁看着一夜白头的婆婆和懵懂无知的四岁幼子，痛哭一场后，却笑了。他们不知道，昔年有“化工女王”称号的甘佳宁会为夫报仇设计炸药陷阱，与仇人同归于尽。甘佳宁死后，由于她的行为，何家老少都遭到了受害人家属的打击报复。在美国生活十多年的化学博士陈进悄悄回国，他挚爱着初恋女友甘佳宁，却不能给她幸福。此时的陈进已经身患绝症，他准备凭借一己之力完成复仇，保护甘佳宁的家人。很快，一起离奇绑架案发生了，精准的复仇，完美无瑕的谋杀，警方意识到，前所未有的对手来了。警方深知凶手很有可能还会继续作案，现在侦破工作如同与凶手赛跑，谁能更胜一筹？《高智商犯罪3 物理教师的时空诡计》：县检察院检察长王宝国被人割喉于自家别墅门口，一刀毙命，还被凶手一脚踢出了两米远；法院院长胡海平在自家单元楼下掏钥匙，一块巨石从天而降，头颅直接开花，当场殒命；公安局局长邵小兵失踪多日，在悬崖下的海里捞出了尸体，一切线索均指向自杀……宁县公、检、法三位高官的离奇被害，不符合时空的案件逻辑，不成立的死亡原因，全省尖端的犯罪心理学专家高栋再次出手，种种矛盾的原因结果，频频走入死胡同的调查进展，背后到底是谁在操控？《高智商犯罪4 死神代言人》：突发恶性案件，工商所员工在旅行途中被绑架，所有人员连同司机在内，全部凭空消失了。在高速监控调查中，看到了这辆商务车驶入监控，却再没有看到此车驶出监控。警方把这段高速及周边寻了个遍，始终找不到车子的半点踪迹。有什么办法能让一辆车和整车人集体在高速上消失得无影无踪？案件陷入僵局，视线转移到以前的一起命案：一次聚餐中，还是这家工商所的队长在众目睽睽之下被人毒杀。现场至少有十多位目击者亲眼看到了全过程，却无一人知道凶手是谁。背叛、忠贞、公义、邪恶，仇杀？情杀？命案在调查过程中发现了更大的隐情！牵一发而动全身，真相归于何处？难道真的是死神在出手？ 出版时间 2021-07-01 00:00:00 ISBN： 分类： 精品小说-悬疑推理 出版社： 天津博集新媒科技有限公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>红蓝双方地形及ban and pick - bp方法</title><link>https://clickear.github.io/%E7%BA%A2%E8%93%9D%E5%8F%8C%E6%96%B9%E5%9C%B0%E5%BD%A2%E5%8F%8Aban-and-pick-bp%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%BA%A2%E8%93%9D%E5%8F%8C%E6%96%B9%E5%9C%B0%E5%BD%A2%E5%8F%8Aban-and-pick-bp%E6%96%B9%E6%B3%95/</guid><description>红蓝双方的地形差异
红色方，发育路在下路，靠近红区。射手拿红角度而言，算是小优势方。
路人局单排，一般 ban 掉恶心的辅助类英雄即可。
红蓝双方的 bp 顺序
从线上对线角度分析，一般哪个分路先选比较好？</description></item><item><title>线程池</title><link>https://clickear.github.io/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</guid><description>为什么阿里巴巴要禁用Executors创建线程池 [!TIP] 技巧💡
线程池，主要是用来线程复用。是一个[[池化]]的思想。
线程池演进之路 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 public class AsyncExecutorV4 implements Executor { private BlockingQueue&amp;lt;Runnable&amp;gt; workQueue; private List&amp;lt;WorkThread&amp;gt; workThreadList = new ArrayList&amp;lt;&amp;gt;(); private RejectedExecutionHandler handler; public AsyncExecutorV4(int corePoolSize, BlockingQueue&amp;lt;Runnable&amp;gt; workQueue, RejectedExecutionHandler handler, ThreadFactory threadFactory) { this.</description></item><item><title>结构性改革-黄奇帆</title><link>https://clickear.github.io/%E7%BB%93%E6%9E%84%E6%80%A7%E6%94%B9%E9%9D%A9-%E9%BB%84%E5%A5%87%E5%B8%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%BB%93%E6%9E%84%E6%80%A7%E6%94%B9%E9%9D%A9-%E9%BB%84%E5%A5%87%E5%B8%86/</guid><description>元数据 [!abstract] 结构性改革
书名： 结构性改革 作者： 黄奇帆 简介： 恰逢百年未有之大变局，经济转型发展、中美贸易摩擦、新冠疫情暴发等问题交相叠加，无不考验着我国面对复杂问题的智慧和勇气，供给侧结构性改革的重要性与紧迫性空前凸显。这本书从基础性、结构性、机制性、制度性等多个维度，深入剖析我国供给侧关键矛盾并对症下药。 全书一共七章。第 一章详解如何紧抓供给侧结构性改革主线；第二章聚焦去杠杆与金融风险防范；第三章解读新时代下我国资本市场高质量发展之路；第四章讲述“数字化”如何重塑经济社会生态；第五章对房地产长效调控机制开出药方，并预判今后十年房地产行业六大趋势；第六章着眼于国有企业资本运作与地方政府营商环境改善；第七章阐释新局面、新特征下，我国对国际形势与中美关系的应对之道，深入剖析“双循环”新格局。 出版时间 2020-08-01 00:00:00 ISBN： 9787521718645 分类： 经济理财-财经 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>网络是怎样连接的-户根勤</title><link>https://clickear.github.io/%E7%BD%91%E7%BB%9C%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%9E%E6%8E%A5%E7%9A%84-%E6%88%B7%E6%A0%B9%E5%8B%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%BD%91%E7%BB%9C%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%9E%E6%8E%A5%E7%9A%84-%E6%88%B7%E6%A0%B9%E5%8B%A4/</guid><description>元数据 [!abstract] 网络是怎样连接的
书名： 网络是怎样连接的 作者： 户根勤 简介： 本书以探索之旅的形式，从在浏览器中输入网址开始，一路追踪了到显示出网页内容为止的整个过程，以图配文，讲解了网络的全貌，并重点介绍了实际的网络设备和软件是如何工作的。目的是帮助读者理解网络的本质意义，理解实际的设备和软件，进而熟练运用网络技术。同时，专设了“网络术语其实很简单”专栏，以对话的形式介绍了一些网络术语的词源，颇为生动有趣。本书图文并茂，通俗易懂，非常适合计算机、网络爱好者及相关从业人员阅读。 出版时间 2017-01-01 00:00:00 ISBN： 9787115441249 分类： 计算机-计算机综合 出版社： 人民邮电出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>置身事内：中国政府与经济发展-兰小欢</title><link>https://clickear.github.io/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85%E4%B8%AD%E5%9B%BD%E6%94%BF%E5%BA%9C%E4%B8%8E%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95-%E5%85%B0%E5%B0%8F%E6%AC%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85%E4%B8%AD%E5%9B%BD%E6%94%BF%E5%BA%9C%E4%B8%8E%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95-%E5%85%B0%E5%B0%8F%E6%AC%A2/</guid><description>元数据 [!abstract] 置身事内：中国政府与经济发展
书名： 置身事内：中国政府与经济发展 作者： 兰小欢 简介： 本书是复旦大学经济学院副教授兰小欢多年教学与研究内容的凝练，将经济学原理与中国经济发展的实践有机融合，以地方政府投融资为主线，深入浅出地论述了中国经济的发展，广泛采纳各领域学者全新研究成果。全书分上下两篇。上篇解释微观机制，包括地方政府的基本事务、收支、土地融资和开发、投资和债务等；下篇解释这些微观行为与宏观现象的联系，包括城市化和工业化、房价、地区差异、债务风险、国内经济结构失衡、国际贸易冲突等。最后一章通过对中国政治经济体系的论述，作者简明地刻画了地方政府进行经济治理的基本方式，指出中国政府通过深度介入工业化和城市化的进程，在发展经济的同时逐步推动了市场机制的建立和完善。 出版时间 2021-01-01 00:00:00 ISBN： 9787208171336 分类： 经济理财-财经 出版社： 上海人民出版社 高亮划线 第一节 政府治理的特点 📌 按照历史学家葛剑雄的统计，从公元前221年秦统一六国到1911年清朝结束，我国“统一”（即基本恢复前朝疆域且保持中原地区相对太平）的时间不过950年，占这一历史阶段的45%，而分裂时间则占55%，可见维持大一统国家并不容易。 ^8-1862-1974 ⏱ [[2022-06-12]] 20:02 📌 条块分割，多重领导。我国政治体系的一个鲜明特点是“层层复制”：中央的主要政治架构，即党委、政府、人大、政协等，省、市、县三级都完全复制，即所谓“四套班子”。中央政府的主要部委，除外交部等个别例外，在各级政府中均有对应部门，比如中央政府有财政部、省政府有财政厅、市县政府有财政局等。这种从上到下的部门垂直关系，被称为“条条”，而横向的以行政区划为界的政府，被称为“块块”。大多数地方部门都要同时接受“条条”和“块块”的双重领导。拿县教育局来说，既要接受市教育局的指导，又要服从县委、县政府的领导。通常情况下，“条条”关系是业务关系，“块块”关系才是领导关系，因为地方党委和政府可以决定人事任免。 ^8-2823-3123 ⏱ [[2022-06-12]] 20:05 读书笔记 前言 从了解现状开始 划线评论 📌 在我国，政府不但影响“蛋糕”的分配，也参与“蛋糕”的生产，所以我们不可能脱离政府谈经济。必须深入了解这一政治经济机体如何运作，才可能对其进行判断。我们生活在这个机体中，我们的发展有赖于对这个机体的认知。要避免把舶来的理论化成先入为主的判断——看到现实与理论不符，便直斥现实之非，进而把要了解的现象变成了讥讽的对象——否则就丧失了“同情的理解”的机会。 ^10500316-7BkAIaFvr 💭 理解国家背景和前提，并要意识到国家经济的复杂程度，自己掌握的不足，才去有限地评论国家经济，不然就是啥也不懂还爱瞎BB的无知者。 ⏱ [[2022-08-07]] 13:28 本书评论 书评 No.</description></item><item><title>股票作手回忆录-埃德温·利非弗 杰西·利弗莫尔</title><link>https://clickear.github.io/%E8%82%A1%E7%A5%A8%E4%BD%9C%E6%89%8B%E5%9B%9E%E5%BF%86%E5%BD%95-%E5%9F%83%E5%BE%B7%E6%B8%A9%E5%88%A9%E9%9D%9E%E5%BC%97-%E6%9D%B0%E8%A5%BF%E5%88%A9%E5%BC%97%E8%8E%AB%E5%B0%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%82%A1%E7%A5%A8%E4%BD%9C%E6%89%8B%E5%9B%9E%E5%BF%86%E5%BD%95-%E5%9F%83%E5%BE%B7%E6%B8%A9%E5%88%A9%E9%9D%9E%E5%BC%97-%E6%9D%B0%E8%A5%BF%E5%88%A9%E5%BC%97%E8%8E%AB%E5%B0%94/</guid><description>元数据 [!abstract] 股票作手回忆录
书名： 股票作手回忆录 作者： 埃德温·利非弗 杰西·利弗莫尔 简介： 股票作手回忆录&amp;ndash;巴菲特指定股市赢利必读书全新升级；史上最牛散户从5元本金到月入1亿的、唯一一个影响了三代股神的股票大师“百年美股第一人”利弗莫尔·索罗斯、格雷厄姆、彼得林奇、王亚伟等倾情注解或盛赞。 出版时间 2015-01-01 00:00:00 ISBN： 9787540470111 分类： 经济理财-理财 出版社： 湖南文艺出版社 高亮划线 序 百年美股第一人：他凭什么把巴菲特和格雷厄姆比下去 📌 如果说格雷厄姆（巴菲特的老师）是“教父”，巴菲特是“股神”，索罗斯是“股魔”，王亚伟是“股佛”，彼得·林奇是“股圣”，那么利弗莫尔就只能叫做“股痴”了。为什么呢？在只有一百多年的股票历史中，他在股市待了半个世纪 ^4-1682-1787 ⏱ [[2022-06-11]] 10:05 读书笔记 本书评论 书评 No.</description></item><item><title>脏读</title><link>https://clickear.github.io/%E8%84%8F%E8%AF%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%84%8F%E8%AF%BB/</guid><description>事务A读取到了事务B已经修改但尚未提交的数据，还在这个数据基础上做了操作。此时，如果B事务回滚，A读取的数据无效，不符合一致性要求</description></item><item><title>自主思考</title><link>https://clickear.github.io/%E8%87%AA%E4%B8%BB%E6%80%9D%E8%80%83/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%87%AA%E4%B8%BB%E6%80%9D%E8%80%83/</guid><description>%%我的理解:: 也就是独立思考，既不人云亦云，也不作者云我亦云。这也是[[学会提问（原书第12版）-尼尔·布朗 斯图尔特·基利]]中表达的核心思想之一。%%
Thoughts Memo 汉化组译制
原文： Do your own thinking (andymatuschak.org)
当心：任由他人想法和图式（schema）支配自己的思考，非常容易。 听到自己在想什么，很难。
阅读时的默认模式是由作者替你思考。据叔本华所言：
当我们阅读时，是别人替我们思考：我们只是重现他的心理过程。……因此，在阅读中，我们在很大程度上免受思考的劳累。……由此可见，如果人读了很多书，甚至几乎整天都在读书，却在读书之间，通过不加思索的消遣来恢复精神，他就会逐渐失去自主思考的能力——就像总是骑马的人最终会忘记如何走路一样。可是许多学者就是这样：他们把自己读傻了。因为他们一有空闲就去阅读，这样甚至比持续的体力劳动更让人精神麻痹，因为在后者中我们还可以思考自己的想法。但是，就像受挤压的弹簧，由于外物持续施加压力，最终会失去弹性一样，我们也会因为他人思想的持续施力，而失去思考的能力。</description></item><item><title>自动拆装箱</title><link>https://clickear.github.io/%E8%87%AA%E5%8A%A8%E6%8B%86%E8%A3%85%E7%AE%B1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%87%AA%E5%8A%A8%E6%8B%86%E8%A3%85%E7%AE%B1/</guid><description>拆装箱，是将java中的原始数据类型、包装类进行装换的过程。是一种语法糖，主要是在编译阶段进行装换。生成了一样的字节码。
转换过程，以int和Integer为例 .java
1 2 Integer integer = 1; // --&amp;gt; Integer.valueOf(0) int unboxing = integer ++; // --&amp;gt; Integer.</description></item><item><title>自增主键</title><link>https://clickear.github.io/%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AE/</guid><description>存储位置 MyISAM引擎 写在文件上 [[innodb]]记录在内存中 &amp;lt;=5.7 新增持久化能力（记录在[[redolog]]） &amp;gt;=8.0 自增值为什么不能回退（性能考虑）? 如果回退，需要使用以下2种思路，都会导致性能问题.
遍历全表，找到最大值 自增id的锁范围扩大，必须等到一个事务执行完成并提交，下一个事务才能再申请自增id 自增锁优化(申请自增值加锁，避免竞争) 建议配置成innodb_autoinc_lock_mode=2并且 binlog_format=row
innodb_autoinc_lock_mode：</description></item><item><title>自私的基因（40周年增订版）-理查德·道金斯</title><link>https://clickear.github.io/%E8%87%AA%E7%A7%81%E7%9A%84%E5%9F%BA%E5%9B%A040%E5%91%A8%E5%B9%B4%E5%A2%9E%E8%AE%A2%E7%89%88-%E7%90%86%E6%9F%A5%E5%BE%B7%E9%81%93%E9%87%91%E6%96%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%87%AA%E7%A7%81%E7%9A%84%E5%9F%BA%E5%9B%A040%E5%91%A8%E5%B9%B4%E5%A2%9E%E8%AE%A2%E7%89%88-%E7%90%86%E6%9F%A5%E5%BE%B7%E9%81%93%E9%87%91%E6%96%AF/</guid><description>元数据 [!abstract] 自私的基因（40周年增订版）
书名： 自私的基因（40周年增订版） 作者： 理查德·道金斯 简介： 《自私的基因》以充满想象力的叙述回答了这些重要命题。道金斯在本书中提出大胆创见：我们生来是自私的，任何生物，包括我们自己，都只是求生的机器。这本书是实实在在的认知科学，复制、变异和淘汰这简单的三种机制可以演变出大千世界所有生命现象的林林总总。 《自私的基因》更为我们提供了一种新的世界观。道金斯在书中将进化论从基因层面升华至文化层面，创造了“觅母”（meme，即文化基因）这一新型的复制因子名词，特指人类社会发展中的文化进化，并提出：在这个世界上，只有我们，我们人类，能够反抗自私的复制因子的暴政。 《自私的基因》出版之后，在社会各界引发了重大争议。本书为40周年增订版，在30周年版的基础上，新增道金斯对于这些争议的回应，共计6万余字，主要探讨了人们在基因决定论、基因选择论，以及基因适应性上存在的普遍误解，进而从基因的视角正确理解生命及其意义，更加完善了道金斯对于“自私的基因”的经典论述，形成这本特别的“延伸的”40周年增订版《自私的基因》。 出版时间 2018-11-01 00:00:00 ISBN： 9787508694498 分类： 社会文化-社科 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>舌尖-瑞幸门店服务设计-门店下单</title><link>https://clickear.github.io/%E8%88%8C%E5%B0%96-%E7%91%9E%E5%B9%B8%E9%97%A8%E5%BA%97%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1-%E9%97%A8%E5%BA%97%E4%B8%8B%E5%8D%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%88%8C%E5%B0%96-%E7%91%9E%E5%B9%B8%E9%97%A8%E5%BA%97%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1-%E9%97%A8%E5%BA%97%E4%B8%8B%E5%8D%95/</guid><description>创建订单时序图 分布式事务方案 下单操作对一致性要求较高，最终一致性并不适用下单场景，原因如下：
假如用户下单成功后，锁定优惠券的mq没有消费及时，用户可能会再次使用该优惠券，会造成一些较严重问题。 需要人工干预进行数据修复，及时性及效率不高。 使用saga模式：
订单系统作为事务管理者，负责分布式事务统一调度，保证数据一致性 关联系统作为事务参与者，需要提供取消rpc 长事务问题 下单流程存在很多数据库事务内穿插多个RPC 同步调用，导致事务提交缓慢，连接池被占用，事务线程无法释放。订单核心流程同时需要保证订单库，咖啡券，库存等系统数据完整统一。其中任何环节异常，都需要保证其他系统状态一致。
优化方案：</description></item><item><title>舌尖-瑞幸门店服务设计-门店配送</title><link>https://clickear.github.io/%E8%88%8C%E5%B0%96-%E7%91%9E%E5%B9%B8%E9%97%A8%E5%BA%97%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1-%E9%97%A8%E5%BA%97%E9%85%8D%E9%80%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%88%8C%E5%B0%96-%E7%91%9E%E5%B9%B8%E9%97%A8%E5%BA%97%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1-%E9%97%A8%E5%BA%97%E9%85%8D%E9%80%81/</guid><description>舌尖一期系统交互图 存在的问题 配送商信息维护在配置中心中，随着系统对接的三方配送商越来越多以及多租户设计使得配送商的配置信息结构变的复杂化，基于配置中心配置配送商信息的方式存在很大的安全隐患和高复杂度。 配送单的创建依赖于订单系统的同步调用，不符合系统的解耦设计。 操作日志依赖于订单系统，不仅使状态流转MQ消息结构臃肿，而且由于订单消费MQ时需先处理内部逻辑后再提交Bizlog，可能因为日志提交延迟导致日志顺序错乱。 djdispatch-service系统中存在外卖配送单和快递配送单两张主表，每张主表又各自关联一套子表，配送单流转过程节点在表结构中也是平铺设计不易于扩展。系统中对外是两种类型的配送单各有一套创建，重发，取消RPC接口 舌尖二期系统交互图 改动点一：引入配送商及租户配置后台管理服务 用户通过djdispatch-web系统页面对租户配送商等信息进行配置，由djdispatch-admin持久化数据到MySQL和Redis，djdispatch-service中通过查询Redis或Mysql获取配置信息。
配送商信息表 CREATETABLE`t_distributor_info`(`id`bigint(20)unsignedNOTNULLAUTO_INCREMENTCOMMENT&amp;#39;id&amp;#39;,`name`varchar(16)DEFAULTNULLCOMMENT&amp;#39;配送商名称&amp;#39;,`distributor_no`varchar(16)DEFAULTNULLCOMMENT&amp;#39;配送商编号&amp;#39;,`partner_id`varchar(16)DEFAULTNULLCOMMENT&amp;#39;电子面单客户账户或月结账号&amp;#39;,`partner_key`varchar(16)DEFAULTNULLCOMMENT&amp;#39;电子面单密码&amp;#39;,`partner_secret`varchar(64)DEFAULTNULLCOMMENT&amp;#39;电子面单密钥&amp;#39;,`distributor_code`varchar(32)DEFAULTNULLCOMMENT&amp;#39;快递公司的编码&amp;#39;,`subscribe`int(4)DEFAULTNULLCOMMENT&amp;#39;是否开启订阅 0-否 1-是&amp;#39;,`call_back_url`varchar(256)DEFAULTNULLCOMMENT&amp;#39;跟踪回调url&amp;#39;,`pay_type`varchar(16)DEFAULTNULLCOMMENT&amp;#39;支付方式:SHIPPER:寄方付（默认） CONSIGNEE：到付 MONTHLY：月结 THIRDPARTY：第三方支付&amp;#39;,`exp_type`varchar(16)DEFAULTNULLCOMMENT&amp;#39;产品类型:如标准快递 顺丰标快陆运 EMS经济&amp;#39;,`code`varchar(32)DEFAULTNULLCOMMENT&amp;#39;电子面单承载编号 顺丰必填&amp;#39;,`scan_support`int(4)DEFAULTNULLCOMMENT&amp;#39;手持设备扫描设置&amp;#39;,`distribute_minutes`varchar(8)DEFAULTNULLCOMMENT&amp;#39;提前推单时长&amp;#39;,`distribute_base_time`varchar(8)DEFAULTNULLCOMMENT&amp;#39;配送时间基数,单位: 分钟&amp;#39;,`distribute_base_distance`varchar(8)DEFAULTNULLCOMMENT&amp;#39;配送距离基数 单位: 米&amp;#39;,`create_time`datetime(3)NOTNULLDEFAULTCURRENT_TIMESTAMP(3)COMMENT&amp;#39;新建时间&amp;#39;,`modify_time`datetime(3)DEFAULTCURRENT_TIMESTAMP(3)ONUPDATECURRENT_TIMESTAMP(3)COMMENT&amp;#39;修改时间&amp;#39;,`create_emp`varchar(30)DEFAULTNULLCOMMENT&amp;#39;创建人&amp;#39;,`modify_emp`varchar(30)DEFAULTNULLCOMMENT&amp;#39;修改人&amp;#39;,`deleted`tinyint(1)DEFAULT&amp;#39;0&amp;#39;COMMENT&amp;#39;删除标记&amp;#39;,PRIMARYKEY(`id`)USINGBTREE,KEY`idx_tenant_code`(`tenant_code`)USINGBTREE,KEY`idx_dispatch_way_id`(`dispatch_way_id`)USINGBTREE)ENGINE=InnoDBDEFAULTCHARSET=utf8mb4COMMENT=&amp;#39;配送商信息表&amp;#39;;SQL-- 配送业务树表 CREATETABLE`t_dispatch_tree`(`id`bigint(20)unsignedNOTNULLAUTO_INCREMENTCOMMENT&amp;#39;id&amp;#39;,`code`varchar(32)DEFAULTNULLCOMMENT&amp;#39;编码&amp;#39;,`name`varchar(16)DEFAULTNULLCOMMENT&amp;#39;名称&amp;#39;,`parent_code`varchar(32)DEFAULTNULLCOMMENT&amp;#39;上级编码&amp;#39;,`parent_codes`varchar(32)DEFAULTNULLCOMMENT&amp;#39;树节点编码集合&amp;#39;,`type`int(4)DEFAULTNULLCOMMENT&amp;#39;树节点类型 1-租户 2-配送类型 3-配送方式&amp;#39;,`is_need_child`tinyint(4)DEFAULT&amp;#39;1&amp;#39;COMMENT&amp;#39;是否需配置下级类目,0-否，1-是&amp;#39;,`distribute_base_time`varchar(8)DEFAULTNULLCOMMENT&amp;#39;默认配送时间基数,单位: 分钟&amp;#39;,`distribute_base_distance`varchar(8)DEFAULTNULLCOMMENT&amp;#39;默认配送距离基数 单位: 米&amp;#39;,`create_time`datetime(3)NOTNULLDEFAULTCURRENT_TIMESTAMP(3)COMMENT&amp;#39;新建时间&amp;#39;,`modify_time`datetime(3)DEFAULTCURRENT_TIMESTAMP(3)ONUPDATECURRENT_TIMESTAMP(3)COMMENT&amp;#39;修改时间&amp;#39;,`create_emp`varchar(30)DEFAULTNULLCOMMENT&amp;#39;创建人&amp;#39;,`modify_emp`varchar(30)DEFAULTNULLCOMMENT&amp;#39;修改人&amp;#39;,`deleted`tinyint(1)DEFAULT&amp;#39;0&amp;#39;COMMENT&amp;#39;删除标记&amp;#39;,PRIMARYKEY(`id`)USINGBTREE,UNIQUEKEY`uniq_tenant_code`(`tenant_code`)USINGBTREE)ENGINE=InnoDBDEFAULTCHARSET=utf8mb4COMMENT=&amp;#39;配送业务树表&amp;#39;;SQL-- 租户配送商关联表 CREATETABLE`t_distributor_rel`(`id`bigint(20)unsignedNOTNULLAUTO_INCREMENTCOMMENT&amp;#39;id&amp;#39;,`tree_code`varchar(32)DEFAULTNULLCOMMENT&amp;#39;业务树叶子节点编码&amp;#39;,`distributor_id`varchar(32)DEFAULTNULLCOMMENT&amp;#39;配送商信息表id&amp;#39;,`create_time`datetime(3)NOTNULLDEFAULTCURRENT_TIMESTAMP(3)COMMENT&amp;#39;新建时间&amp;#39;,`modify_time`datetime(3)DEFAULTCURRENT_TIMESTAMP(3)ONUPDATECURRENT_TIMESTAMP(3)COMMENT&amp;#39;修改时间&amp;#39;,`create_emp`varchar(30)DEFAULTNULLCOMMENT&amp;#39;创建人&amp;#39;,`modify_emp`varchar(30)DEFAULTNULLCOMMENT&amp;#39;修改人&amp;#39;,`deleted`tinyint(1)DEFAULT&amp;#39;0&amp;#39;COMMENT&amp;#39;删除标记&amp;#39;,PRIMARYKEY(`id`)USINGBTREE,UNIQUEKEY`uniq_tenant_code`(`tenant_code`)USINGBTREE)ENGINE=InnoDBDEFAULTCHARSET=utf8mb4COMMENT=&amp;#39;业务树表&amp;#39;;SQL-- **配送面单模板表** CREATETABLE`t_distributor_template`(`id`bigint(20)unsignedNOTNULLAUTO_INCREMENTCOMMENT&amp;#39;id&amp;#39;,`tree_code`varchar(32)NOTNULLCOMMENT&amp;#39;租户编码&amp;#39;,`distributor_name`varchar(16)DEFAULTNULLCOMMENT&amp;#39;配送商名称&amp;#39;,`distributor_no`varchar(16)DEFAULTNULLCOMMENT&amp;#39;配送商编号&amp;#39;,`distributor_logo`varchar(256)DEFAULTNULLCOMMENT&amp;#39;配送商logo图片url&amp;#39;,`template_no`varchar(64)DEFAULTNULLCOMMENT&amp;#39;模板编号&amp;#39;,`template_name`varchar(64)DEFAULTNULLCOMMENT&amp;#39;模板名称&amp;#39;,`template_img`varchar(256)DEFAULTNULLCOMMENT&amp;#39;模板示例图片url&amp;#39;,`height`varchar(8)DEFAULTNULLCOMMENT&amp;#39;模板示例图片url&amp;#39;,`width`varchar(8)DEFAULTNULLCOMMENT&amp;#39;模板示例图片url&amp;#39;,`create_time`datetime(3)NOTNULLDEFAULTCURRENT_TIMESTAMP(3)COMMENT&amp;#39;新建时间&amp;#39;,`modify_time`datetime(3)DEFAULTCURRENT_TIMESTAMP(3)ONUPDATECURRENT_TIMESTAMP(3)COMMENT&amp;#39;修改时间&amp;#39;,`create_emp`varchar(30)DEFAULTNULLCOMMENT&amp;#39;创建人&amp;#39;,`modify_emp`varchar(30)DEFAULTNULLCOMMENT&amp;#39;修改人&amp;#39;,`deleted`tinyint(1)DEFAULT&amp;#39;0&amp;#39;COMMENT&amp;#39;删除标记&amp;#39;,PRIMARYKEY(`id`)USINGBTREE,KEY`idx_tenant_code`(`tenant_code`)USINGBTREE,KEY`idx_dispatch_way_id`(`dispatch_way_id`)USINGBTREE)ENGINE=InnoDBDEFAULTCHARSET=utf8mb4COMMENT=&amp;#39;配送面单模板表&amp;#39;; 改动点二：通过MQ解耦订单服务和配送服务 订单支付完成后通过MQ通知djdispatch-service创建配送单，配送单创建成功后MQ通知订单</description></item><item><title>舌尖-瑞幸门店服务设计-附近门店列表</title><link>https://clickear.github.io/%E8%88%8C%E5%B0%96-%E7%91%9E%E5%B9%B8%E9%97%A8%E5%BA%97%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1-%E9%99%84%E8%BF%91%E9%97%A8%E5%BA%97%E5%88%97%E8%A1%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%88%8C%E5%B0%96-%E7%91%9E%E5%B9%B8%E9%97%A8%E5%BA%97%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1-%E9%99%84%E8%BF%91%E9%97%A8%E5%BA%97%E5%88%97%E8%A1%A8/</guid><description>背景 整理舌尖-瑞幸门店服务设计经验，用作我们方案设计的参考。
需求 分页查询门店列表，按用户离门店的距离排序
相关原型 舌尖附近门店列表：
瑞幸附近门店列表
方案一：Redis geo数据结构 缓存设计 同[[舌尖-瑞幸门店服务设计-首页推荐门店]]
使用Redis geo查询 georadius查询结果包含距离字段，并且按距离排序
使用数据库查询 需要使用数据库查询的场景： 入参用户经纬度为空，经纬度是georadius必要的参数 用户切换到其他城市，业务上没有必要算距离，也没有必要按距离排序 按门店名称模糊搜索，Redis geo中存放的member只有门店编号，无法实现模糊搜索需求 sql实现按照距离排序： 参考资料&amp;amp;优化方案： https://tech.</description></item><item><title>舌尖-瑞幸门店服务设计-首页推荐门店</title><link>https://clickear.github.io/%E8%88%8C%E5%B0%96-%E7%91%9E%E5%B9%B8%E9%97%A8%E5%BA%97%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1-%E9%A6%96%E9%A1%B5%E6%8E%A8%E8%8D%90%E9%97%A8%E5%BA%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%88%8C%E5%B0%96-%E7%91%9E%E5%B9%B8%E9%97%A8%E5%BA%97%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1-%E9%A6%96%E9%A1%B5%E6%8E%A8%E8%8D%90%E9%97%A8%E5%BA%97/</guid><description>背景 整理舌尖/瑞幸门店服务设计经验，用作我们方案设计的参考。
需求 用户进入小程序/app首页，根据业务过滤规则，自动推荐一家门店。
业务过滤规则包括：
取餐模式：自提，外送 距离：当取餐模式为自提时，取离用户当前坐标最近的门店。当取餐模式为外送时，取离用户默认配送地址坐标距离最近的门店 范围：用户当前坐标5公里范围内的门店 门店状态：营业中，配送中 用户习惯：用户常用下单门店 相关原型 瑞幸-到店取：
瑞幸-幸运送
舌尖-自提
舌尖-外送
舌尖-外送-快递</description></item><item><title>节奏与关键时间点</title><link>https://clickear.github.io/%E8%8A%82%E5%A5%8F%E4%B8%8E%E5%85%B3%E9%94%AE%E6%97%B6%E9%97%B4%E7%82%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%8A%82%E5%A5%8F%E4%B8%8E%E5%85%B3%E9%94%AE%E6%97%B6%E9%97%B4%E7%82%B9/</guid><description>正方形打野，无规则打野，都有搞笑成分，但也隐含了节奏的
定义:
前期:0-10 分钟 中期:10-20 分钟 后期:20 分钟后 前期节奏点: 开局 30 秒 野怪刷新，打野是红开还是蓝开，很大程度上决定了，1 分钟后的 1 分 30 秒那个时刻，打野会抓上路还是下路。所以获得对方红开还是蓝开的信息，对队友有很大帮助。 开局 60 秒 中路河蟹刷新，意味着打野如果要抢河蟹，需要在打第一个 buff 的时候，提前使用惩戒，不然 1 分钟到的时候，惩戒的 CD 还未结束。 开局 90 秒 打野平均升 4 级 + 红蓝双 buff 时间，此时一定要有意识地回撤，避免被对方打野抓现行。 开局 120 秒 2 个龙刷新的时间。S27 赛季版本的主宰龙非常容易让队友掉兵线，打这个龙甚至可能会亏，最好能打加伤害的暴君龙。 中期节奏点:</description></item><item><title>苏菲的世界-乔斯坦·贾德</title><link>https://clickear.github.io/%E8%8B%8F%E8%8F%B2%E7%9A%84%E4%B8%96%E7%95%8C-%E4%B9%94%E6%96%AF%E5%9D%A6%E8%B4%BE%E5%BE%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%8B%8F%E8%8F%B2%E7%9A%84%E4%B8%96%E7%95%8C-%E4%B9%94%E6%96%AF%E5%9D%A6%E8%B4%BE%E5%BE%B7/</guid><description>元数据 [!abstract] 苏菲的世界
书名： 苏菲的世界 作者： 乔斯坦·贾德 简介： 本书以小说的形式，通过一名哲学导师向一个叫苏菲的女孩传授哲学知识的经过，揭示了西方哲学发展的历程。由前苏格拉底时代到萨特，以及亚里士多德、笛卡儿、黑格尔等人的思想都通过作者生动的笔触跃然纸上，并配以当时的历史背景加以解释，引人入胜。评论家认为，对于那些从未读过哲学课程的人而言，此书是最为合适的入门书，而对于那些以往读过一些哲学而已忘得一干二净的人士，也可起到温故知新的作用。14岁的少女苏菲不断接到一些极不寻常的来信，世界像谜团一般在她眼前展开。在一位神秘导师的指引下，苏菲开始思索，她运用少女天生的悟性与后天知识，企图解开这些谜团。然而，事实真相远比她所想的更怪异、更离奇…… 出版时间 2007-10-01 00:00:00 ISBN： 9787506341271 分类： 文学-世界名著 出版社： 作家出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>草丛与视野</title><link>https://clickear.github.io/%E8%8D%89%E4%B8%9B%E4%B8%8E%E8%A7%86%E9%87%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%8D%89%E4%B8%9B%E4%B8%8E%E8%A7%86%E9%87%8E/</guid><description>高手进阶必备。学会了卡视野的全部规则，那就像鬼一样，是有高段位的碾压效果的。
草丛，塔，兵线，其实都是在塑造一种 [[信息不对称]]，从而能获得先手优势。</description></item><item><title>荣耀战力与巅峰赛</title><link>https://clickear.github.io/%E8%8D%A3%E8%80%80%E6%88%98%E5%8A%9B%E4%B8%8E%E5%B7%85%E5%B3%B0%E8%B5%9B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%8D%A3%E8%80%80%E6%88%98%E5%8A%9B%E4%B8%8E%E5%B7%85%E5%B3%B0%E8%B5%9B/</guid><description/></item><item><title>虚引用</title><link>https://clickear.github.io/%E8%99%9A%E5%BC%95%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%99%9A%E5%BC%95%E7%94%A8/</guid><description> 一个对象是否有虚引用的存在，完全不会对其生存时间构成影响。它仅仅是提供了一种确保对象被 finalize 以后，做某些事情的机制，比如，通常用来做所谓的 Post-Mortem 清理机制。 虚引用必须与ReferenceQueue一起使用，当GC准备回收一个对象，如果发现它还有虚引用，就会在回收之前，把这个虚引用加入到与之关联的ReferenceQueue中 ::使用场景 在[[NIO]]中，就运用了虚引用管理堆外内存</description></item><item><title>虚拟机栈</title><link>https://clickear.github.io/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88/</guid><description>[!TIP] 技巧💡
线程私有的，每个线程有一个虚拟机栈。生命周期与线程一致。 每调用1个方法，产生一个[[栈帧]]，进行压栈操作 调用方法结束后，会进行出栈操作 栈不存在垃圾回收，但是存在OOM 在运行过程中，每当调用进入一个 Java 方法，Java 虚拟机会在当前线程的 Java 方法栈中生成一个栈帧，用以存放局部变量以及字节码的操作数。这个栈帧的大小是提前计算好的，而且 Java 虚拟机不要求栈帧在内存空间里连续分布。当退出当前执行的方法时，不管是正常返回还是异常返回，Java 虚拟机均会弹出当前线程的当前栈帧，并将之舍弃</description></item><item><title>蛙-莫言</title><link>https://clickear.github.io/%E8%9B%99-%E8%8E%AB%E8%A8%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%9B%99-%E8%8E%AB%E8%A8%80/</guid><description>元数据 [!abstract] 蛙
书名： 蛙 作者： 莫言 简介： 2012年诺贝尔文学奖得主莫言最著名的作品之一，第八届茅盾文学奖获奖作品。作品以一个乡村女医生波澜壮阔的一生，反思中国六十年计划生育史，传达对生命强烈的人道关怀，呈现知识分子灵魂深处的矛盾与伤痛，完整展现莫言文学王国的丰富与奥义。 出版时间 2017-01-01 00:00:00 ISBN： 9787533946661 分类： 文学-经典作品 出版社： 浙江文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>蛤蟆先生去看心理医生-罗伯特·戴博德</title><link>https://clickear.github.io/%E8%9B%A4%E8%9F%86%E5%85%88%E7%94%9F%E5%8E%BB%E7%9C%8B%E5%BF%83%E7%90%86%E5%8C%BB%E7%94%9F-%E7%BD%97%E4%BC%AF%E7%89%B9%E6%88%B4%E5%8D%9A%E5%BE%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%9B%A4%E8%9F%86%E5%85%88%E7%94%9F%E5%8E%BB%E7%9C%8B%E5%BF%83%E7%90%86%E5%8C%BB%E7%94%9F-%E7%BD%97%E4%BC%AF%E7%89%B9%E6%88%B4%E5%8D%9A%E5%BE%B7/</guid><description>元数据 [!abstract] 蛤蟆先生去看心理医生
书名： 蛤蟆先生去看心理医生 作者： 罗伯特·戴博德 简介： 蛤蟆先生一向爱笑爱闹，如今却一反常态地郁郁寡欢。他一个人躲在屋里，连起床梳洗的力气都没有。朋友们非常担心他，建议他去做心理咨询。在10次心理咨询中，蛤蟆在咨询师苍鹭的带领下，勇敢地探索了自己的内心世界，也逐渐找回了信心与希望……为了向大众读者普及心理学知识，作者借用了英国文学经典《柳林风声》的故事主角，让蛤蟆先生和他的朋友们再次登场，演绎了这个关于心理咨询的故事。读者犹如亲临现场，体验心理咨询的每一个细节，见证疗愈和改变的发生。作者借由蛤蟆和心理咨询师苍鹭的互动，探索了蛤蟆自卑、软弱、爱炫耀的个性与抑郁的情绪究竟来源于何处，以及如何才能在心理上真正长大成人，独立、自信、充满希望地生活。 出版时间 2020-08-01 00:00:00 ISBN： 9787201161693 分类： 心理-心理学应用 出版社： 天津人民出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>蝴蝶效应</title><link>https://clickear.github.io/%E8%9D%B4%E8%9D%B6%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%9D%B4%E8%9D%B6%E6%95%88%E5%BA%94/</guid><description>1960 年，美国麻省理工学院教授洛伦兹研究“长期天气预报”问题时，出现了疑难问题：她在计算机上用一组简化数据模拟天气的演变，原本是想利用计算机的高速运算来提高天气预报的准确性。但是，事与愿违，多次计算表明，初始条件的极微小差异，会导致错误的结论。
心理情绪也是如此，有一组漫画显示，一个人在单位被领导训了一顿，心里很恼火，回家冲妻子发起了脾气，妻子无来由地被训，也很生气，就摔门而去。走在街上，一条宠物狗拦住了去路，“汪汪”狂吠，妻子更生气啦，就一脚踢过去，小狗受到踢打，狂奔路过一个老人面前，把老人吓了一跳。正巧这位老人有心脏病，被突然冲出的小狗一吓，当场心脏病发作，不治身亡。
洛伦兹发现了微小差异导致的巨大反差，她用一个形象的比喻来表达这个发现，一只小小的蝴蝶在巴西上空振动翅膀，它煽动起来的小小漩涡与其他气流汇合，可能在一个月后的美国得克萨斯州会引起一场风暴——这就是混沌学中著名的“蝴蝶效应”。</description></item><item><title>被索引的参考资料与标签</title><link>https://clickear.github.io/%E8%A2%AB%E7%B4%A2%E5%BC%95%E7%9A%84%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99%E4%B8%8E%E6%A0%87%E7%AD%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%A2%AB%E7%B4%A2%E5%BC%95%E7%9A%84%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99%E4%B8%8E%E6%A0%87%E7%AD%BE/</guid><description>%%我的理解:: 标签使用起来局限性很大，尤其是其能检索出的信息往往是非常粗粒度。索引[[TOC]]和[[MOC]]才重要，不仅可以检索细粒度，而且可以附加描述信息。%%
标签在当代信息系统中很常见，但[[标签是无效的关联结构]]。一个更有效的历史先例是出版业中的索引。
索引并不力求记录包含某一特定术语的所有相关页面；相反，它只记录少数几个最重要的页面在第几页。相比之下，带有特定标签的页面列表往往变得相当臃肿。
索引也可以包括其他编辑备注。例如，一个条目可能会注明「另见：……」
索引条目和复杂的标签系统都可以是分层的。
在卡片盒笔记系统中 卢曼把他的索引卡严密地整理起来。这里索引主要是作为跳板使用：笔记间的关联更为重要。
随着链接排名的可视化，笔记标签的做法应如何改变？
参考文献 Ahrens, S. (2017). How to Take Smart Notes: One Simple Technique to Boost Writing, Learning and Thinking – for Students, Academics and Nonfiction Book Writers.</description></item><item><title>被讨厌的勇气：“自我启发之父”阿德勒的哲学课-岸见一郎 古贺史健</title><link>https://clickear.github.io/%E8%A2%AB%E8%AE%A8%E5%8E%8C%E7%9A%84%E5%8B%87%E6%B0%94%E8%87%AA%E6%88%91%E5%90%AF%E5%8F%91%E4%B9%8B%E7%88%B6%E9%98%BF%E5%BE%B7%E5%8B%92%E7%9A%84%E5%93%B2%E5%AD%A6%E8%AF%BE-%E5%B2%B8%E8%A7%81%E4%B8%80%E9%83%8E-%E5%8F%A4%E8%B4%BA%E5%8F%B2%E5%81%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%A2%AB%E8%AE%A8%E5%8E%8C%E7%9A%84%E5%8B%87%E6%B0%94%E8%87%AA%E6%88%91%E5%90%AF%E5%8F%91%E4%B9%8B%E7%88%B6%E9%98%BF%E5%BE%B7%E5%8B%92%E7%9A%84%E5%93%B2%E5%AD%A6%E8%AF%BE-%E5%B2%B8%E8%A7%81%E4%B8%80%E9%83%8E-%E5%8F%A4%E8%B4%BA%E5%8F%B2%E5%81%A5/</guid><description>元数据 [!abstract] 被讨厌的勇气：“自我启发之父”阿德勒的哲学课
书名： 被讨厌的勇气：“自我启发之父”阿德勒的哲学课 作者： 岸见一郎 古贺史健 简介： 一名深陷自卑、无能与不幸福的青年，听到了一名哲人主张的“世界无比单纯，人人都能幸福”便来挑战，两人展开了你来我往的思考和辩论，在一夜一夜过去后，青年开始思考，为什么“所谓的自由，就是被别人讨厌”？问题不在于世界是什么样子，在于你是什么样子。 出版时间 2017-05-01 00:00:00 ISBN： 9787111495482 分类： 哲学宗教-伦理学 出版社： 机械工业出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>解忧杂货店-东野圭吾</title><link>https://clickear.github.io/%E8%A7%A3%E5%BF%A7%E6%9D%82%E8%B4%A7%E5%BA%97-%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%A7%A3%E5%BF%A7%E6%9D%82%E8%B4%A7%E5%BA%97-%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/</guid><description>元数据 [!abstract] 解忧杂货店
书名： 解忧杂货店 作者： 东野圭吾 简介： 东野圭吾当之无愧的长篇小说代表作。一本带给人无限温暖、安慰与感动的书。
东野圭吾特别寄语中国读者：“《解忧杂货店》能在中国拥有这么多读者，对我而言既是荣幸也是鼓励。我想在这本书中写的，是无论身处哪个国家、哪个时代的人都一定会抱有的‘梦想’与‘烦恼’。人之所以为人，正是因为这无尽的梦想与烦恼吧。”
我想再创作一部穿越的作品，但这次谁也不穿越。移动时空的不是人，而是信。如果可以和过去的人交换信件，自己要写些什么呢——这种想法成为创作《解忧杂货店》的契机。回顾写作过程，我发现自己始终在思考：站在人生的岔路口，人究竟应该怎么做？我希望读者能在掩卷时喃喃自语：我从未读过这样的小说。——东野圭吾 出版时间 2020-09-09 00:00:00 ISBN： 9787544298995 分类： 精品小说-悬疑推理 出版社： 南海出版公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>解读中国经济-林毅夫</title><link>https://clickear.github.io/%E8%A7%A3%E8%AF%BB%E4%B8%AD%E5%9B%BD%E7%BB%8F%E6%B5%8E-%E6%9E%97%E6%AF%85%E5%A4%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%A7%A3%E8%AF%BB%E4%B8%AD%E5%9B%BD%E7%BB%8F%E6%B5%8E-%E6%9E%97%E6%AF%85%E5%A4%AB/</guid><description>元数据 [!abstract] 解读中国经济
书名： 解读中国经济 作者： 林毅夫 简介： 本书是解读中国经济最权威著作，总结了中国与其他国家、地区经济发展和改革活动的经验，提出了一个经济发展和转型的一般理论，并以此理论分析中国在改革和发展过程中取得的各项成就，面临的主要经济、社会问题，探讨其原因和解决问题的办法。书中用通俗的语言和生动的实例，系统地回顾了中国经济的发展历程与改革经验，深入浅出地讲解了中国经济发展的热点问题。新版针对近年来此起彼伏的“唱衰中国”论调，专辟一章“危机后的世界经济形势和中国未来的经济发展”予以驳斥，对最新的国际经济形势以及我国未来改革发展前景进行了有理有据的分析与预测。 出版时间 2012-11-01 00:00:00 ISBN： 9787301211106 分类： 经济理财-财经 出版社： 北京大学出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>解释器</title><link>https://clickear.github.io/%E8%A7%A3%E9%87%8A%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%A7%A3%E9%87%8A%E5%99%A8/</guid><description>将java指令，一行行去执行，快速启动和执行，省去编译时间。(类比为 骑自行车)
执行慢，但是启动快。
适用条件:
偶尔才执行的代码，即非[[热点代码]] 与[[JIT|即时编译器]]相对的。</description></item><item><title>解释器与编译器</title><link>https://clickear.github.io/%E8%A7%A3%E9%87%8A%E5%99%A8%E4%B8%8E%E7%BC%96%E8%AF%91%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%A7%A3%E9%87%8A%E5%99%A8%E4%B8%8E%E7%BC%96%E8%AF%91%E5%99%A8/</guid><description>[[JIT|即时编译器]]，即[[动态编译]]，在碰到热点代码时，进行编译，损坏编译时间，增加执行效率。类比为 坐公交，速度快，但是需要&amp;quot;等公交&amp;quot;（编译））
[[解释器]] : (类比为 骑自行车)
很多JVM虚拟机都采用解释器和编译器并存的运行架构。当有些热点代码执行，符合编译条件时，会将这些代码使用即时编译器进行编译，某些场景下，如果需要，还可以通过 逆优化 退回到解释器执行。</description></item><item><title>计算机体系结构</title><link>https://clickear.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</guid><description>从 1 个经典问题展开：
[[x86架构和ARM架构]]</description></item><item><title>计算机基础知识</title><link>https://clickear.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid><description/></item><item><title>计算机学习知识图谱</title><link>https://clickear.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</guid><description>基于 一个仅供参考的CS学习规划 - CS自学指南 进行规划自己的学习计划
软知识 [[学会提问]] [[提问的智慧]] 计算机科普视频 计算机科学速成课 150 算法结构与算法 软件工程 数据库实现 Site Unreachable 150 小时 人工智能 机器学习</description></item><item><title>计算机操作系统</title><link>https://clickear.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid><description>从一个经典对比谈起：
[[Windows系统与MacOS系统]]</description></item><item><title>计算机组成与结构</title><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-00%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-00%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/</guid><description>计算机组成与结构 计算机系统知识 计算机硬件组成 运算器 控制器 存储器 (内部存储器（内存，容量小，速度快） 和外部存储器 (硬盘、光盘。容量大，速度慢)) 输入设备(鼠标、键盘) 输出设备(显示器) 中英处理单元（CPU） cpu如何执行程序？ cpu如何区分 0110 是地址还是数据还是指令？</description></item><item><title>计算机网络</title><link>https://clickear.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</guid><description>从 1 个经典面试问题谈起：
[[从浏览器输入一个网址到得到网站页面，中间发生了什么]]
[[hosts文件]]
[[七层网络模型]]</description></item><item><title>认知觉醒：开启自我改变的原动力-周岭</title><link>https://clickear.github.io/%E8%AE%A4%E7%9F%A5%E8%A7%89%E9%86%92%E5%BC%80%E5%90%AF%E8%87%AA%E6%88%91%E6%94%B9%E5%8F%98%E7%9A%84%E5%8E%9F%E5%8A%A8%E5%8A%9B-%E5%91%A8%E5%B2%AD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%A4%E7%9F%A5%E8%A7%89%E9%86%92%E5%BC%80%E5%90%AF%E8%87%AA%E6%88%91%E6%94%B9%E5%8F%98%E7%9A%84%E5%8E%9F%E5%8A%A8%E5%8A%9B-%E5%91%A8%E5%B2%AD/</guid><description>元数据 [!abstract] 认知觉醒：开启自我改变的原动力
书名： 认知觉醒：开启自我改变的原动力 作者： 周岭 简介： 为什么我们做事总是急于求成、避难趋易？所谓有耐心，就是要“咬牙坚持、死磕到底”？如何不再用“三分钟热情”和“打鸡血”的方式做事？如何保持极度专注？如何消除焦虑？如何提高学习能力？这是一部可以穿透时间的个人成长方法论。7大底层概念，20个成长关键词，助你彻底走出焦虑与迷茫，拥有清醒的认知、清楚的目标、清晰的路径、清爽的情绪。通过“大脑构造、潜意识、元认知”等思维规律，你将真正看清自己；通过“深度学习、关联、反馈”等事物规律，你将真正看清世界，提升自控力、专注力、学习力……只有洞悉底层的内在规律，我们才能真正开启自我改变的原动力。 出版时间 2020-06-01 00:00:00 ISBN： 9787115543424 分类： 心理-认知与行为 出版社： 人民邮电出版社 高亮划线 第三节 游戏心态：幸福的人，总是在做另外一件事 📌 家训练，当众立了一个规矩：每次体能课开始前先测试跑一次1 500米，凡是成绩达到优秀的，都可以免上后面2小时的体能课。而我，在很长一段时间内，都是唯一可以在全队近百人的目送中欣然离场的那个人。跑步并不是我的强项。刚入学的时候，我跑1 500米大概要用8分钟。在向5分10秒这个目标进发的过 ^26-502-672 ⏱ [[2022-03-13]] 11:57 读书笔记 本书评论 书评 No.</description></item><item><title>认知驱动：做成一件对他人很有用的事-周岭</title><link>https://clickear.github.io/%E8%AE%A4%E7%9F%A5%E9%A9%B1%E5%8A%A8%E5%81%9A%E6%88%90%E4%B8%80%E4%BB%B6%E5%AF%B9%E4%BB%96%E4%BA%BA%E5%BE%88%E6%9C%89%E7%94%A8%E7%9A%84%E4%BA%8B-%E5%91%A8%E5%B2%AD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%A4%E7%9F%A5%E9%A9%B1%E5%8A%A8%E5%81%9A%E6%88%90%E4%B8%80%E4%BB%B6%E5%AF%B9%E4%BB%96%E4%BA%BA%E5%BE%88%E6%9C%89%E7%94%A8%E7%9A%84%E4%BA%8B-%E5%91%A8%E5%B2%AD/</guid><description>元数据 [!abstract] 认知驱动：做成一件对他人很有用的事
书名： 认知驱动：做成一件对他人很有用的事 作者： 周岭 简介： 做成一件有价值的事，成为一个有价值的人；成长的根本是做成事情、创造价值。做到，是更高等级的成长。一个人的成长也是通过主动做成一件对他人很有用的事来实现的。但在现实生活中，很多人虽然内心强烈希望变好，行动也非常努力，却始终无法做成事情，这背后的原因通常是缺少价值意识、输出意识、创造意识、作品意识、利他意识……《认知驱动：做成一件对他人很有用的事》将通过“做成一件事”的心法和技法两部分内容，和大家一起探索如何通过创造个人价值获取人生的成功、幸福和意义。从“习惯养成”到“技能培养”，从“对内输入”到“对外输出”，从成为“更好的人”到成为“更有价值的人”，这些刻意的转变会让我们走出焦虑的怪圈。单纯依靠意志力的努力往往是盲目的，所以人们会反反复复地起念，又反反复复地失败。一个人只有了解做成一件事的来龙去脉、看清事情本质后，才能走出反复尝试却劳而无功的困境。学会用认知来驱动自己，我们才能更好地到达成长的彼岸——做成一件对他人很有用的事，成为一个有价值的人。 出版时间 2021-08-01 00:00:00 ISBN： 9787115569455 分类： 心理-认知与行为 出版社： 人民邮电出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>让思想和信念有机地涌现</title><link>https://clickear.github.io/%E8%AE%A9%E6%80%9D%E6%83%B3%E5%92%8C%E4%BF%A1%E5%BF%B5%E6%9C%89%E6%9C%BA%E5%9C%B0%E6%B6%8C%E7%8E%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%A9%E6%80%9D%E6%83%B3%E5%92%8C%E4%BF%A1%E5%BF%B5%E6%9C%89%E6%9C%BA%E5%9C%B0%E6%B6%8C%E7%8E%B0/</guid><description>%%我的理解:: 没有人从一张白纸开始写作。也没有人从一颗空白的大脑开始凝聚自己的思想和信念。%%
Thoughts Memo 汉化组译制
原文： Let ideas and beliefs emerge organically (andymatuschak.org)
谨防先入为主的观念。[[自主思考]]。
通过复用已有作品，更快地生产作品 [[常青笔记是知识工作的基本单位]] [[在写作时创建推测性大纲]] [[可执行的写作策略]] 认识论、原创性 [[使用笔记来避免先入为主的结论]] [[卓越洞见从之前的所思所想中涌现]] [[头脑风暴往往可以替代缺位的见解积累系统]] [[优先建立信息间的联系来分类，而非使用层级式分类法]] [[常青笔记是发展大胆想法的安全场所]] 士气： 对真实的兴趣和想法做出反应，而不是想着「我应该写 X」 不再有「我应该写什么？」</description></item><item><title>让我们灵魂激荡身体欢愉：一个男科医生的手记-任黎明</title><link>https://clickear.github.io/%E8%AE%A9%E6%88%91%E4%BB%AC%E7%81%B5%E9%AD%82%E6%BF%80%E8%8D%A1%E8%BA%AB%E4%BD%93%E6%AC%A2%E6%84%89%E4%B8%80%E4%B8%AA%E7%94%B7%E7%A7%91%E5%8C%BB%E7%94%9F%E7%9A%84%E6%89%8B%E8%AE%B0-%E4%BB%BB%E9%BB%8E%E6%98%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%A9%E6%88%91%E4%BB%AC%E7%81%B5%E9%AD%82%E6%BF%80%E8%8D%A1%E8%BA%AB%E4%BD%93%E6%AC%A2%E6%84%89%E4%B8%80%E4%B8%AA%E7%94%B7%E7%A7%91%E5%8C%BB%E7%94%9F%E7%9A%84%E6%89%8B%E8%AE%B0-%E4%BB%BB%E9%BB%8E%E6%98%8E/</guid><description>元数据 [!abstract] 让我们灵魂激荡身体欢愉：一个男科医生的手记
书名： 让我们灵魂激荡身体欢愉：一个男科医生的手记 作者： 任黎明 简介： 二十多年的从医临床经验，使得本书作者比男人更了解男人。作为网络大V、著名的段子手、逗逼、资深网红医生，任黎明（@成都下水道）被誉为“中国最有影响力的男科医生”，他用手术刀治疗的是男人肉体的疾病，用文字之刀剔除的是男人灵魂的瑕疵！在本书中，他以嬉笑怒骂、幽默风趣的文笔，解剖了男人遇到的各种“敏感”问题，如：阳痿、早泄、包皮过长、包茎、手淫成瘾、性高潮无快感、前列腺增生/肥大，等等。原本严肃、枯燥的医疗问题，在作者的笔下变得通俗易懂，有趣好玩，可读性更强，是一部男士必想拥有、女士想窥视其奥妙的经典作品。 出版时间 2019-07-01 00:00:00 ISBN： 9787557666262 分类： 医学健康-健康 出版社： 天津科学技术出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>记录锁</title><link>https://clickear.github.io/%E8%AE%B0%E5%BD%95%E9%94%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%B0%E5%BD%95%E9%94%81/</guid><description>单个行记录上的锁。对索引项加锁，锁定符合条件的行。其他事务不能修改和删除加锁项</description></item><item><title>许三观卖血记（第3版）-余华</title><link>https://clickear.github.io/%E8%AE%B8%E4%B8%89%E8%A7%82%E5%8D%96%E8%A1%80%E8%AE%B0%E7%AC%AC3%E7%89%88-%E4%BD%99%E5%8D%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%B8%E4%B8%89%E8%A7%82%E5%8D%96%E8%A1%80%E8%AE%B0%E7%AC%AC3%E7%89%88-%E4%BD%99%E5%8D%8E/</guid><description>元数据 [!abstract] 许三观卖血记（第3版）
书名： 许三观卖血记（第3版） 作者： 余华 简介： 本书在国内外引起了巨大轰动！小说以博大的温情描绘了磨难中的人生，以激烈的故事形式表达了人在面对厄运时求生的欲望。讲述了许三观靠着卖血渡过了人生的一个个难关，战胜了命运强加给他的惊涛骇浪，而当他老了，知道自己的血再也没有人要时，他哭了。法国《读书》杂志在评论《许三观卖血记》时说道：这是一部精妙绝伦的小说，是朴实简洁和内涵意蕴深远的完美结合。本书获美国巴恩斯-诺贝尔新发现图书奖，入选中国百位批评家和文学编辑评选的“20世纪90年代最有影响的10部作品”。 出版时间 2012-09-01 00:00:00 ISBN： 9787506365680 分类： 文学-经典作品 出版社： 作家出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>论自由-约翰·穆勒</title><link>https://clickear.github.io/%E8%AE%BA%E8%87%AA%E7%94%B1-%E7%BA%A6%E7%BF%B0%E7%A9%86%E5%8B%92/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%BA%E8%87%AA%E7%94%B1-%E7%BA%A6%E7%BF%B0%E7%A9%86%E5%8B%92/</guid><description>元数据 [!abstract] 论自由
书名： 论自由 作者： 约翰·穆勒 简介： 本书清晰地阐明了自由主义的核心思想：个人只要在不伤害他人的范围内，就应该拥有完全的思想自由、言论自由和个性自由（行动自由），而这一原则的实施，有赖于对政府及社会权力的界定和限制。这也正是本书最早的中译者严复先生将其译为“群己权界”的渊源所在。对每一个迈向现代社会的国家来说，这种思考仍然至关重要。《论自由》虽只薄薄一册，却是一部划时代的思想巨著，它第一次赋予自由主义完整而全面的理论形式，将对自由问题的探讨从国家与个人延伸到社会领域，以其清晰的逻辑和富含的充沛激情成为捍卫自由的经典。 出版时间 2019-04-01 00:00:00 ISBN： 9787542665614 分类： 哲学宗教-哲学著作 出版社： 上海三联书店 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>该积累什么领域知识</title><link>https://clickear.github.io/%E8%AF%A5%E7%A7%AF%E7%B4%AF%E4%BB%80%E4%B9%88%E9%A2%86%E5%9F%9F%E7%9F%A5%E8%AF%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AF%A5%E7%A7%AF%E7%B4%AF%E4%BB%80%E4%B9%88%E9%A2%86%E5%9F%9F%E7%9F%A5%E8%AF%86/</guid><description>up:: [[§ flomo101 - 思维方式目录]]
我的思考总结 我们日常生活，就是在不断用时间积累知识，知识包含领域、项目、资源三个角度的理解，三个角度的内容是随着时间互相转化和迁移的。其中最重要的是领域，因为领域决定了我们精进的方向。通过项目驱动领域精进，通过资源支撑领域延伸。让自己痴迷的领域，更多的是创造性的，而非消费性的，是为人生前进之道。
其实第一次读少楠这篇[[PARA]]的文章时候，还没读过[[🧑Tiago Forte]]的英文原文。其实少楠这篇引申很广，原作者是指在信息搜集剪藏与组织这块儿领域，使用PARA方法或理念进行，从而使信息的搜集与组织更有行动性和目的性，而非吃灰剪藏。而少楠直接将其延伸至信息搜集以后的知识管理层面该如何做了，并上升至心法层面。
# 📚 何谓领域，该积累什么领域知识 在 2022 年初的计划中，我们提到了深度年（Depth Year）的概念，希望能用一年时间把一些已有的东西深入打磨。在 Android 完成离线，iOS 完成编辑器重构后，作为 flomo 重要的组成部分，flomo 101 （也就是 help.</description></item><item><title>请笑纳：我这28年的写作心法，全部都在这里了</title><link>https://clickear.github.io/%E8%AF%B7%E7%AC%91%E7%BA%B3%E6%88%91%E8%BF%9928%E5%B9%B4%E7%9A%84%E5%86%99%E4%BD%9C%E5%BF%83%E6%B3%95%E5%85%A8%E9%83%A8%E9%83%BD%E5%9C%A8%E8%BF%99%E9%87%8C%E4%BA%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AF%B7%E7%AC%91%E7%BA%B3%E6%88%91%E8%BF%9928%E5%B9%B4%E7%9A%84%E5%86%99%E4%BD%9C%E5%BF%83%E6%B3%95%E5%85%A8%E9%83%A8%E9%83%BD%E5%9C%A8%E8%BF%99%E9%87%8C%E4%BA%86/</guid><description>观点 / 刘润 主笔 / 二蔓 责编 / 莹莹
这是刘润公众号的第1599篇原创文章
“写点东西”这件事儿，困扰着不少同学。
工作汇报、年末总结、创意文案、个人简历……甚至发个微信，都涉及到了“写”这个动作。
可我经常听到一些同学说，
我觉得我写的东西，大气磅礴，我忍不住要给自己点个赞。
看的人却说，不知所云，你到底想说什么？
那我到底要怎样才能写出一篇好文章？有没有什么关于写作的心法？
好吧。“写”这个动作，我几乎天天都在做。虽然写得不怎么样，但也坚持了28年。
有时候，是洋洋洒洒，万字长文。有时候，是寥寥几笔，一点分享。
但不管怎么样，我还是坚持下来了。
因为写作，是一件非常有价值的事。</description></item><item><title>读写屏障</title><link>https://clickear.github.io/%E8%AF%BB%E5%86%99%E5%B1%8F%E9%9A%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AF%BB%E5%86%99%E5%B1%8F%E9%9A%9C/</guid><description>其实就是指在赋值操作前后或者读值时，加入一些处理（可以参考AOP的概念）。
赋前的部分的写屏障叫作写前屏障（Pre-Write Barrier）
在赋值后的部分的写屏障叫作写后屏障（PostWrite Barrier）
读操作叫作读屏障
读写屏障的应用，可参考 [[三色标记法]]</description></item><item><title>读已提交</title><link>https://clickear.github.io/%E8%AF%BB%E5%B7%B2%E6%8F%90%E4%BA%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AF%BB%E5%B7%B2%E6%8F%90%E4%BA%A4/</guid><description>脏读不可能，不可重复读/幻读都可能。解决脏读。
其它事务已提交，也能在当前事务读取到。如何使用？
[!TIP] 如何实现?💡
通过[[MVCC]],在每个[[快照读]]都会生成并获取最新的Read View</description></item><item><title>读未提交</title><link>https://clickear.github.io/%E8%AF%BB%E6%9C%AA%E6%8F%90%E4%BA%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AF%BB%E6%9C%AA%E6%8F%90%E4%BA%A4/</guid><description>脏读/不可重复读/幻读都可能</description></item><item><title>谁是卧底轻度入门</title><link>https://clickear.github.io/%E8%B0%81%E6%98%AF%E5%8D%A7%E5%BA%95%E8%BD%BB%E5%BA%A6%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%B0%81%E6%98%AF%E5%8D%A7%E5%BA%95%E8%BD%BB%E5%BA%A6%E5%85%A5%E9%97%A8/</guid><description/></item><item><title>谨防自动导入阅读收件箱</title><link>https://clickear.github.io/%E8%B0%A8%E9%98%B2%E8%87%AA%E5%8A%A8%E5%AF%BC%E5%85%A5%E9%98%85%E8%AF%BB%E6%94%B6%E4%BB%B6%E7%AE%B1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%B0%A8%E9%98%B2%E8%87%AA%E5%8A%A8%E5%AF%BC%E5%85%A5%E9%98%85%E8%AF%BB%E6%94%B6%E4%BB%B6%E7%AE%B1/</guid><description>%%我的理解:: 阅读inbox存放的一定要是值得精读，且我们会花时间去拆解做笔记的内容。%%
我们很容易把 RSS 订阅、电子邮件简讯等与自己的阅读收件箱混为一谈，但它们应该被明确分开。（见[[为有潜在价值的参考引用建立一个阅读收件箱]]）
[[收件箱需要可靠的清空流程才有效]]这意味“清空”非常重要——所有添加的内容要么被阅读，要么被删除。因此，如果你觉得一篇参考文献有意思，可以把它添加到列表中，并相信自己以后会回顾。确保该属性的一个有效方法是自己添加所有东西。
自动导入文章时，你会在阅读时看到很多与你不直接相关的内容。这些不相关的材料与那些你因为有强烈的情感联系而特意添加的内容混合在一起，冲淡了后者。
自动导入文章时，阅读收件箱可能间歇地长得令人生畏。这使你不愿意打开它，从而让收件箱不那么可靠。
自动导入文章时，梳理收件箱的成本就会变得更加高昂。为了决定是删除还是仔细阅读某篇文章，你必须首先了解它们是什么。相比之下，如果你手动添加一篇文章，你通常已经大体上了解文章讲了什么，比如了解表明文章价值的上下文。而在评估要阅读的文章和实际阅读它们之间来回切换会损耗阅读动力。
如果你手动添加内容，你会对自己造成反向压力：你会大概意识到你的收件箱变得多大——因此在添加一些价值可疑的东西之前，你会三思而行。
参考文献 在阅读网页和 RSS 时记笔记 • Zettelkasten 方法
网络上充满了噪音，我订阅的这部分网站也是如此。仅能靠自己找到有用的 信号。这意味着我必须决定我想知道什么，以及什么是可以忽略的。</description></item><item><title>贪婪的多巴胺-丹尼尔·利伯曼 迈克尔·E.朗</title><link>https://clickear.github.io/%E8%B4%AA%E5%A9%AA%E7%9A%84%E5%A4%9A%E5%B7%B4%E8%83%BA-%E4%B8%B9%E5%B0%BC%E5%B0%94%E5%88%A9%E4%BC%AF%E6%9B%BC-%E8%BF%88%E5%85%8B%E5%B0%94E.%E6%9C%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%B4%AA%E5%A9%AA%E7%9A%84%E5%A4%9A%E5%B7%B4%E8%83%BA-%E4%B8%B9%E5%B0%BC%E5%B0%94%E5%88%A9%E4%BC%AF%E6%9B%BC-%E8%BF%88%E5%85%8B%E5%B0%94E.%E6%9C%97/</guid><description>元数据 [!abstract] 贪婪的多巴胺
书名： 贪婪的多巴胺 作者： 丹尼尔·利伯曼 迈克尔·E.朗 简介： 为什么曾经浪漫的感情也会变淡？为什么成功人士通常不会觉得自己很成功？为什么几乎所有的节食计划后来功亏一篑？为什么聪明的人也经常会做出糟糕透顶的决定？这取决于大脑中的一种单分子结构——多巴胺。这种化学物质控制着你的欲望、想象、冲动、创造力，出乎意料地影响着我们生活的方方面面。我们的身体受到“向上”和“向下”两类物质的控制。“向下”指的是控制当下的神经递质，它们决定了我们当前的感受；“向上”则是指多巴胺，它们决定了我们的长远规划、愿景、未来期望。正因如此，多巴胺并不像很多人以为的，是一种快乐分子。它其实是一种欲望分子，在我们已经获得很多的同时，让我们有更高的期许、更大的目标。多巴胺让我们把眼光放得更长远，追求更高的目标，但也同时让人欲望无止境、不知道满足。它既能让你体会成功的喜悦，也让成功变得平淡无奇；它让你投入一段感情，但也能让当初的深情被岁月磨平；它能让你获得超高的智商，但也让你与疯狂一步之遥……了解这种物质是如何影响我们的情绪、决策和生活的，能够帮助我们充分发挥大脑的潜在功能，提高办事效率，在工作和生活中获得更好的表现。 出版时间 2021-09-01 00:00:00 ISBN： 9787521731583 分类： 科学技术-自然科学 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>资料</title><link>https://clickear.github.io/reactor%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/reactor%E6%A8%A1%E5%BC%8F/</guid><description>[!TIP] 技巧💡
基于事件模式的IO模型。非阻塞IO 几乎所有的网络连接都会经过
accept: 连接
read: 读取请求内容
decode: 解码
compute: 业务处理
encode: 编码
send: 发送，回复内容 发展史 [!</description></item><item><title>资料</title><link>https://clickear.github.io/redis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/redis/</guid><description>高性能 线程模型（核心读写操作 | 单线程 持久化、集群同步、处理网络请求 | 多线程） Redis 的网络 I/O 线程，以及键值的 SET 和 GET 等读写操作都是由一个线程来完成的。但 Redis 的持久化、集群同步等操作，则是由另外的线程来执行的。
虽然 Redis 一直是单线程模型，但是在 Redis 6.</description></item><item><title>资料</title><link>https://clickear.github.io/synchronized/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/synchronized/</guid><description>为什么说synchronized是重量级锁？ 我们知道，cpu会运行在用户态和内核态。如[[零拷贝]]就是为了减少在用户态的运行。[[synchronized]]效率低， 是因为synchronized是跑在jvm上，需要对操作系统进行申请资源。
在java中很多实现中, 很多都是轻量级锁, 比如JUC中的CAS. 所谓的轻量级锁和重量级锁的区别是什么呢? 轻量级锁都是在用户态直接完成, 不用惊动操作系统, 而重量级锁需要向操作系统申请. 在现在synchronized内部的执行过程中, 他会首先使用轻量级锁, 在用户态中完成, 如果完成不了才会去申请重量级锁, 即内核态的锁, 这就是synchronized的升级过程
跑在jvm上，会有资源损坏。比如dubbo的[[直接内存|堆外内存]]实现，就是为了减少jvm到c的heap的损坏。
锁的对象是什么？ [!</description></item><item><title>资料</title><link>https://clickear.github.io/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</guid><description>评估标准 问题 高可用问题：无论何时都要保证锁服务的可用性（这是系统正常执行锁操作的基础）。集群 + 自动故障转移 死锁问题：客户端一定可以获得锁，即使锁住某个资源的客户端在释放锁之前崩溃或者网络不可达（这是避免死锁的设计原则）。 redis: 超时自动解锁 + 守护进程自动延长锁超时时间
zk: 连接断开，自动释放 脑裂问题：集群同步时产生的数据不一致，导致新的进程有可能拿到锁，但之前的进程以为自己还有锁，那么就出现两个进程拿到了同一个锁的问题。 (大部分节点成功才算成功） redis使用realock算法， zk天然支持 可重入问题: 在客户端或者锁的时候，记录锁次数，与当前线程绑定，如TreadLocal实现，或者将线程上下文信息，报错在数据库的字段。 设计原则 互斥性：即在分布式系统环境下，对于某一共享资源，需要保证在同一时间只能一个线程或进程对该资源进行操作。 高可用：也就是可靠性，锁服务不能有单点风险，要保证分布式锁系统是集群的，并且某一台机器锁不能提供服务了，其他机器仍然可以提供锁服务。 锁释放：具备锁失效机制，防止死锁。即使出现进程在持有锁的期间崩溃或者解锁失败的情况，也能被动解锁，保证后续其他进程可以获得锁。 可重入：一个节点获取了锁之后，还可以再次获取整个锁资源。 解决方案 基于关系型数据库实现分布式锁(悲观锁) 先查询数据库是否存在记录，为了防止幻读取（幻读取：事务 A 按照一定条件进行数据读取，这期间事务 B 插入了相同搜索条件的新数据，事务 A 再次按照原先条件进行读取时，发现了事务 B 新插入的数据 ）通过数据库行锁 select for update 锁住这行数据，然后将查询和插入的 SQL 在同一个事务中提交。</description></item><item><title>资料</title><link>https://clickear.github.io/%E7%BC%93%E5%AD%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%BC%93%E5%AD%98/</guid><description>应用系统分层架构，为了加速数据访问，会把最常访问的数据，放在缓存(cache)里，避免每次都去访问数据库。
操作系统，会有缓冲池(buffer pool)机制，避免每次访问磁盘，以加速数据的访问。
MySQL作为一个存储系统，同样具有缓冲池(buffer pool)机制，以避免每次查询数据都进行磁盘IO。
[!TIP] 技巧💡
很多性能问题，可以增加缓存来处理。比如处理器，增加一级、二级缓存加快访问速度。
常见问题 缓存穿透(预设空值，如&amp;quot;NULL&amp;quot;) 查询缓存中不存在的数据时，每次都要查询数据库。
缓存并发(redis的setnx) 假设在缓存失效的同时，出现多个客户端并发请求获取同一个 key 的情况，此时因为 key 已经过期了，所有请求在缓存数据库中查询 key 不命中，那么所有请求就会到数据库中去查询，然后当查询到数据之后，所有请求再重复将查询到的数据更新到缓存中。</description></item><item><title>赡养人类-刘慈欣</title><link>https://clickear.github.io/%E8%B5%A1%E5%85%BB%E4%BA%BA%E7%B1%BB-%E5%88%98%E6%85%88%E6%AC%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%B5%A1%E5%85%BB%E4%BA%BA%E7%B1%BB-%E5%88%98%E6%85%88%E6%AC%A3/</guid><description>元数据 [!abstract] 赡养人类
书名： 赡养人类 作者： 刘慈欣 简介： 一个叫“滑膛”的顶级杀手，接到了一个特殊的任务。十三个世界上最富有的人，雇佣他去杀死世界上最贫困的一群人——拾荒者。那些拾荒者，不是伪装的间谍，没有隐藏宝藏，只是最单纯、最普通、最底层的那些穷人。他们从堆积如山的垃圾中寻找半腐烂的食物和蔽体的衣物。直到滑膛来到那些拾荒者中间，遇到一个来自“哥哥星球”的人，他才明白，这个荒诞不经的任务背后，一样隐藏着人类极端的自私与冷酷……刘慈欣短篇科幻小说。 出版时间 2015-01-01 00:00:00 ISBN： 分类： 精品小说-科幻经典 出版社： 山西春秋电子音像出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>跃迁：成为高手的技术（附赠高手秘籍和时间管理秘籍）-古典</title><link>https://clickear.github.io/%E8%B7%83%E8%BF%81%E6%88%90%E4%B8%BA%E9%AB%98%E6%89%8B%E7%9A%84%E6%8A%80%E6%9C%AF%E9%99%84%E8%B5%A0%E9%AB%98%E6%89%8B%E7%A7%98%E7%B1%8D%E5%92%8C%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E7%A7%98%E7%B1%8D-%E5%8F%A4%E5%85%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%B7%83%E8%BF%81%E6%88%90%E4%B8%BA%E9%AB%98%E6%89%8B%E7%9A%84%E6%8A%80%E6%9C%AF%E9%99%84%E8%B5%A0%E9%AB%98%E6%89%8B%E7%A7%98%E7%B1%8D%E5%92%8C%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E7%A7%98%E7%B1%8D-%E5%8F%A4%E5%85%B8/</guid><description>元数据 [!abstract] 跃迁：成为高手的技术（附赠高手秘籍和时间管理秘籍）
书名： 跃迁：成为高手的技术（附赠高手秘籍和时间管理秘籍） 作者： 古典 简介： 这个时代：信息变多、思考变浅，机会变多、竞争跨界，随时干扰、永远在线。每一个个体都在与外界的持续交换中，感受到能力进阶的压力与焦虑，希望获得适应自身成长节奏的知识，并将知识转变为价值，摆脱“听了那么多道理，还是过不好这一生”的梦魇。本书将为你呈现隐蔽个人爆发式成长的关键知识、方法和背后的逻辑：专注头部、外包大脑、终身提问、联机学习、知识IPO、升维思考。从这本书你可以得到：成为高手的思维模式和方法。找到最佳路径、借助趋势红利，撬动个人爆发式成长。 出版时间 2017-07-26 00:00:00 ISBN： 9787508678887 分类： 个人成长-人生哲学 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>身体由我：关于了不起的女性身体的一切-希拉·德利兹</title><link>https://clickear.github.io/%E8%BA%AB%E4%BD%93%E7%94%B1%E6%88%91%E5%85%B3%E4%BA%8E%E4%BA%86%E4%B8%8D%E8%B5%B7%E7%9A%84%E5%A5%B3%E6%80%A7%E8%BA%AB%E4%BD%93%E7%9A%84%E4%B8%80%E5%88%87-%E5%B8%8C%E6%8B%89%E5%BE%B7%E5%88%A9%E5%85%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BA%AB%E4%BD%93%E7%94%B1%E6%88%91%E5%85%B3%E4%BA%8E%E4%BA%86%E4%B8%8D%E8%B5%B7%E7%9A%84%E5%A5%B3%E6%80%A7%E8%BA%AB%E4%BD%93%E7%9A%84%E4%B8%80%E5%88%87-%E5%B8%8C%E6%8B%89%E5%BE%B7%E5%88%A9%E5%85%B9/</guid><description>元数据 [!abstract] 身体由我：关于了不起的女性身体的一切
书名： 身体由我：关于了不起的女性身体的一切 作者： 希拉·德利兹 简介： 这是一部女性健康科普著作，图书出版后在德国医学界和科普界收获了一致盛赞，长踞《明镜》周刊畅销榜，领衔各大健康百科及女性健康图书榜单。
许多女性对自己身体所持的态度是不确定的，其实，子宫、乳房、卵巢、生理期，它们存在于世界上半数人的体内，它们与生命密切相连，它们的健康直接决定了女性的生命质量，因此，它们是应当“被看见”、“被了解”的。在认知身体的旅途中，女性将意识到，很多心理的变化和情绪的起伏，都由体内的荷尔蒙所掌控。对荷尔蒙系统的深入认知，能够帮助我们理解抵御衰老和守护健康的准则。而所有的知识储备升级，都将带领我们，找到更加广阔的那个自己。 出版时间 2021-11-08 00:00:00 ISBN： 9787571418991 分类： 医学健康-两性 出版社： 北京科学技术出版社有限公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>转笔入门</title><link>https://clickear.github.io/%E8%BD%AC%E7%AC%94%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AC%E7%AC%94%E5%85%A5%E9%97%A8/</guid><description>正转 反转 转多圈</description></item><item><title>软件界面经常将破坏性操作作为最终决定，而不是视情况而定的选择</title><link>https://clickear.github.io/%E8%BD%AF%E4%BB%B6%E7%95%8C%E9%9D%A2%E7%BB%8F%E5%B8%B8%E5%B0%86%E7%A0%B4%E5%9D%8F%E6%80%A7%E6%93%8D%E4%BD%9C%E4%BD%9C%E4%B8%BA%E6%9C%80%E7%BB%88%E5%86%B3%E5%AE%9A%E8%80%8C%E4%B8%8D%E6%98%AF%E8%A7%86%E6%83%85%E5%86%B5%E8%80%8C%E5%AE%9A%E7%9A%84%E9%80%89%E6%8B%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E4%BB%B6%E7%95%8C%E9%9D%A2%E7%BB%8F%E5%B8%B8%E5%B0%86%E7%A0%B4%E5%9D%8F%E6%80%A7%E6%93%8D%E4%BD%9C%E4%BD%9C%E4%B8%BA%E6%9C%80%E7%BB%88%E5%86%B3%E5%AE%9A%E8%80%8C%E4%B8%8D%E6%98%AF%E8%A7%86%E6%83%85%E5%86%B5%E8%80%8C%E5%AE%9A%E7%9A%84%E9%80%89%E6%8B%A9/</guid><description>%%我的理解:: 删除、清空一些内容的操作就像鸡肋，食之无味，弃之可惜。现在有另一个选择就是使用间隔重复，丢到将来某天的箱子里，等待将来时机成熟，有确定的结论将其删除或使用上。%%
Thoughts Memo 汉化组译制
原文： Software interfaces often harmfully frame destructive operations as final decisions, not contingent preferences (andymatuschak.</description></item><item><title>软引用</title><link>https://clickear.github.io/%E8%BD%AF%E5%BC%95%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E5%BC%95%E7%94%A8/</guid><description>软引用是一种相对强引用弱化一些的引用，可以让对象豁免一些垃圾收集，只有当 JVM 认为内存不足时，才会去试图回收软引用指向的对象。JVM 会确保在抛出 OutOfMemoryError 之前，清理软引用指向的对象。软引用通常用来实现内存敏感的缓存，如果还有空闲内存，就可以暂时保留缓存，当内存不足时清理掉，这样就保证了使用缓存的同时，不会耗尽内存</description></item><item><title>软技能</title><link>https://clickear.github.io/%E8%BD%AF%E6%8A%80%E8%83%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E6%8A%80%E8%83%BD/</guid><description>主要是一些方法论沉淀
[[团队管理]] 技术相关 [[如何做技术评审]] [[如何codereview]] [[如何复盘]] 学习方法 + [[刻意练习]]</description></item><item><title>软考-待深入</title><link>https://clickear.github.io/%E8%BD%AF%E8%80%83-%E5%BE%85%E6%B7%B1%E5%85%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BD%AF%E8%80%83-%E5%BE%85%E6%B7%B1%E5%85%A5/</guid><description> 海明码 数字证书 词法、语法、语义区别 中缀等。。。</description></item><item><title>输出究竟是什么</title><link>https://clickear.github.io/%E8%BE%93%E5%87%BA%E7%A9%B6%E7%AB%9F%E6%98%AF%E4%BB%80%E4%B9%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BE%93%E5%87%BA%E7%A9%B6%E7%AB%9F%E6%98%AF%E4%BB%80%E4%B9%88/</guid><description>up:: [[§ flomo101 - 思维方式目录]]
我的理解 我对输出的理解，在[[输入驱动输出，输出倒逼输入]]中，将其理解成写作，演讲，创作等各种表达场景，其实现在我想，更广义的理解，输出就是：动起来。不管是手，脑，还是嘴。少楠还提到了输入本就应该多于输出。跟我想的[[80%时间输入，20%时间输出]]也是非常类似。
# 📃 输出究竟是指什么 许多刚开始用 flomo 的共建者们，很快就能感受到记录无压力的欣喜。但是随之而来的会有一些常见的困惑：
现在这么零零碎碎记下去，将来怎么输出啊？ 输出（写东西）好辛苦啊，有什么更简单的办法？ 我该如何和 xx 软件对接来输出啊？ 其实有许多词汇，背后都是一个复杂的概念，我们并非全然的理解，仅是有一个模糊的大众共识而已 —— 比如「输出」这个词。</description></item><item><title>边际效应</title><link>https://clickear.github.io/%E8%BE%B9%E9%99%85%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BE%B9%E9%99%85%E6%95%88%E5%BA%94/</guid><description>是指其他投入固定不变时，连续地增加某一种，所新增的产出或收益反而会逐渐减少。也就是说，当增加的投入超过某一水平之后，新增的每一个单位投入换来的产出量会下降。</description></item><item><title>运行时数据区</title><link>https://clickear.github.io/%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA/</guid><description>[!TIP] 注意💡
不同的JVM对于内存的划分方式和管理机制存在部分差异，后续针对HotSpot虚拟机进行介绍
[!TIP] 技巧💡
[[虚拟机栈]]，管运行代码，存储栈帧等
[[堆]]，管存储数据。存储的是对象实例数据
[[元数据区]]，可能叫[[方法区]]更好点，管类相关的数据
[[程序计数器]]，管代码运行的位置
JVM内存区域 java在执行一个方法之前，首先要先通过[[类加载子系统]]，将类相关数据加载到[[元数据区]],并进行类初始化。每个线程都会创建一个[[虚拟机栈]]，内部保存一个个[[栈帧]]，没调用1个java方法，就会生成一个[[栈帧]]，并进行压栈操作。调用结束后会进行出栈操作。实例化的对象，是存储在[[堆]]中的，这块也是垃圾回收的重点。
[[本地方法栈]]，主要用来存储本地方法的数据的。
[程序计数器]，这样线程切换回来之后，就可以加载[[线上上下文]]，继续之前的执行。 [[直接内存]]，（堆外内存），非jvm内存，直接向操作系统申请</description></item><item><title>连点成线记忆法，记忆时缩写，回忆时扩写</title><link>https://clickear.github.io/%E8%BF%9E%E7%82%B9%E6%88%90%E7%BA%BF%E8%AE%B0%E5%BF%86%E6%B3%95%E8%AE%B0%E5%BF%86%E6%97%B6%E7%BC%A9%E5%86%99%E5%9B%9E%E5%BF%86%E6%97%B6%E6%89%A9%E5%86%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BF%9E%E7%82%B9%E6%88%90%E7%BA%BF%E8%AE%B0%E5%BF%86%E6%B3%95%E8%AE%B0%E5%BF%86%E6%97%B6%E7%BC%A9%E5%86%99%E5%9B%9E%E5%BF%86%E6%97%B6%E6%89%A9%E5%86%99/</guid><description>拒绝机械复述或誊写，一定要自己转述或转写 除了古诗词背诵，单词背诵等要求精准的场景。现在越来越多的考试，都着重于我们对知识点的理解，而不是记忆。计算机早已经能几万倍几亿倍地精准存储记忆信息，我们要杜绝对精准记忆的盲目崇拜。
而学习的时候，用自己的话转述出来，不仅是自己的，而且是口语化一些的，更能让自己的这些刚刚掌握的知识点和大脑里原有的其他知识点产生联动和配合。而如果是机械复述，那些书面化的语言，都是作者自己的逻辑组织方式和语言表达系统，我们强行背下来，和自己的思考系统格格不入，后面恐怕也就只能强行背诵出来。
复述的方式就是提取关键词，用缩写来压缩记忆量。 比如这篇文章的主题，就直接压缩成：
拒绝机械复制，一定要用自己的话转述。转述的技巧是从材料中提取关键词，将其连成线。回忆的时候，基于自己的思维系统进行扩写，每次扩写不带重样的没关系，核心意思不变即可。记忆一大段内容，先从少记起，后面多次重复过程中，慢慢记多。
大段内容的记忆，采用信息编码，从少开始慢慢记得多 最经典的例子就是：一开始记忆英文单词，只记其最常见的 1 个意思，有些单词可能有十几种释义，先不管。这就是从少开始记。慢慢地，在应用过程中，会发现这些单词的其他意思，其实多少有些关联或规律，就能自然而然的记多扩容了。
其实这时候的记忆，是一种信息的 [[有损压缩]] 式的记忆方式，但没关系，损失一点点原本的信息，但却能极大扩充我们的记忆信息量。
还比如这篇文章。我的转述就是：用自己的话转写一遍，达到记忆目的。转写过程中，抓关键词以便压缩记忆量。如果有很长一大段内容要记忆，先不要慌，记少一点，漏掉几个分支没关系，先把主干记住。
口诀就是:
自说自话
连点成线
挑最少的记。</description></item><item><title>追风筝的人-卡勒德·胡赛尼</title><link>https://clickear.github.io/%E8%BF%BD%E9%A3%8E%E7%AD%9D%E7%9A%84%E4%BA%BA-%E5%8D%A1%E5%8B%92%E5%BE%B7%E8%83%A1%E8%B5%9B%E5%B0%BC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BF%BD%E9%A3%8E%E7%AD%9D%E7%9A%84%E4%BA%BA-%E5%8D%A1%E5%8B%92%E5%BE%B7%E8%83%A1%E8%B5%9B%E5%B0%BC/</guid><description>元数据 [!abstract] 追风筝的人
书名： 追风筝的人 作者： 卡勒德·胡赛尼 简介： 12岁的阿富汗富家少爷阿米尔与仆人哈桑情同手足。然而，在一场风筝比赛后，发生了一件悲惨不堪的事，阿米尔为自己的懦弱感到自责和痛苦，逼走了哈桑，不久，自己也跟随父亲逃往美国。成年后的阿米尔始终无法原谅自己当年对哈桑的背叛。为了赎罪，阿米尔再度踏上暌违二十多年的故乡，希望能为不幸的好友尽最后一点心力，却发现一个惊天谎言，儿时的噩梦再度重演，阿米尔该如何抉择？ 出版时间 2006-05-01 00:00:00 ISBN： 9787208061644 分类： 文学-外国文学 出版社： 上海人民出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>逃逸分析</title><link>https://clickear.github.io/%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90/</guid><description>[!TIP] 技巧💡
当一个对象在方法中定义后，对象只在方法内部使用，则认为没有发生逃逸。当一个对象在方法中被定义后，它被外部方法引用，则认为发生逃逸，例如作为调用参数传递到其他地方中
栈上分配
将堆分配转为栈分配，如果一个对象在子程序中被分配，要使指向该对象的指针永远不会逃逸，对象可能是栈分配的候选，而不是堆分配
同步策略
如果一个对象被发现只能从一个线程被访问到，对于这个对象的操作可以不考虑同步。 JIT编译器可以借助逃逸分析来判断同步块所使用的的锁对象，是否只能够被一个线程访问，而没有被发布到其他线程。如果没有，那么JIT编译器在编译这个同步块的时候，就会取消对这部分代码的同步。这样就大大提高并发性和性能，这个取消同步的过程就叫同步省略，也叫锁消除
分离对象或标量替换
有的对象可能不需要作为一个连续的内存结构存在，也可以被访问到，那么对象的部分（或全部）可以不存储在内存。而是存储在CPU寄存器中 标量是指一个无法再分解的更小的数据的数据。Java中原始数据类型就是标量 可以分解的数据叫聚合量，Java中的对象就是聚合量，因为他可以分解成其他聚合量和标量 标量替换参数：-XX:EliminateAllocations，默认打开</description></item><item><title>通过刻意练习，改变智识，让自己更聪明</title><link>https://clickear.github.io/%E9%80%9A%E8%BF%87%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E6%94%B9%E5%8F%98%E6%99%BA%E8%AF%86%E8%AE%A9%E8%87%AA%E5%B7%B1%E6%9B%B4%E8%81%AA%E6%98%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%80%9A%E8%BF%87%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E6%94%B9%E5%8F%98%E6%99%BA%E8%AF%86%E8%AE%A9%E8%87%AA%E5%B7%B1%E6%9B%B4%E8%81%AA%E6%98%8E/</guid><description>重视努力的价值，成长型思维 像[[习得性无助]]的另一面的例子。
对中位数天生智力的人而言，后天环境对人的塑造才是让人变聪明的最大因变量。 如果因为他绝顶聪明，所以随便学学就会了，那么我们也可以通过刻意练习，快速学学就会了 [[刻意练习：如何从新手到大师-安德斯·艾利克森 罗伯特·普尔]]的4个特点：
目标明确 做事时极其专注 需要及时看到反馈并调整 走出舒适区</description></item><item><title>遗传算法</title><link>https://clickear.github.io/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/</guid><description>#todo 排课系统</description></item><item><title>重来：更为简单有效的商业思维-贾森·弗里德 戴维·海涅迈尔·汉森</title><link>https://clickear.github.io/%E9%87%8D%E6%9D%A5%E6%9B%B4%E4%B8%BA%E7%AE%80%E5%8D%95%E6%9C%89%E6%95%88%E7%9A%84%E5%95%86%E4%B8%9A%E6%80%9D%E7%BB%B4-%E8%B4%BE%E6%A3%AE%E5%BC%97%E9%87%8C%E5%BE%B7-%E6%88%B4%E7%BB%B4%E6%B5%B7%E6%B6%85%E8%BF%88%E5%B0%94%E6%B1%89%E6%A3%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%87%8D%E6%9D%A5%E6%9B%B4%E4%B8%BA%E7%AE%80%E5%8D%95%E6%9C%89%E6%95%88%E7%9A%84%E5%95%86%E4%B8%9A%E6%80%9D%E7%BB%B4-%E8%B4%BE%E6%A3%AE%E5%BC%97%E9%87%8C%E5%BE%B7-%E6%88%B4%E7%BB%B4%E6%B5%B7%E6%B6%85%E8%BF%88%E5%B0%94%E6%B1%89%E6%A3%AE/</guid><description>元数据 [!abstract] 重来：更为简单有效的商业思维
书名： 重来：更为简单有效的商业思维 作者： 贾森·弗里德 戴维·海涅迈尔·汉森 简介： 《重来：更为简单的商业思维》呈现的是一种更好、更简单的商业思维和职场修炼之道。两位作者基于10年来创业实战的经验，就企业的创建、运营和发展发表了全新的观点，涉及项目管理、人才招聘、产品设计、市场营销、企业文化等方面。在《重来：更为简单的商业思维》一书中，作者用直截了当的语言和崇尚简约的方式，颠覆你崇尚或正在使用的商业模式。不管是精英企业家、小企业主，还是每日兢兢业业上班，但一直想自己做些事情的职场中人，抑或想要“脱贫”的艺术家，都能在这一页页中找到弥足珍贵的指引。你克制住把书中每页都撕下来，贴在墙上对照执行的冲动。 出版时间 2018-06-01 00:00:00 ISBN： 9787508687681 分类： 经济理财-管理 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>金字塔原理大全集-芭芭拉·明托</title><link>https://clickear.github.io/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E5%A4%A7%E5%85%A8%E9%9B%86-%E8%8A%AD%E8%8A%AD%E6%8B%89%E6%98%8E%E6%89%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E5%A4%A7%E5%85%A8%E9%9B%86-%E8%8A%AD%E8%8A%AD%E6%8B%89%E6%98%8E%E6%89%98/</guid><description>元数据 [!abstract] 金字塔原理大全集
书名： 金字塔原理大全集 作者： 芭芭拉·明托 简介： 麦肯锡40年经典培训教材，基础原理+实战训练 精进思考、分析和表达能力 管理者和各行各业职场人的实用工具，世界知名企业和院校用来培训成员的逻辑思考方法
●金字塔原理是一种重点突出、逻辑清晰的思维方式，可以帮助我们高效思考、表达、解决问题。
●深入浅出的原理解读+各种类型的案例分析，快速将金字塔原理用于实际工作，从容面对各种难题。
●运用金字塔原理，可以轻松做出精彩的策划方案、产品文案、PPT，不用再为写作绞尽脑汁。
●借助金字塔原理，项目陈述、演讲、工作汇报，清晰有力，说服上级和客户不再是难题。
●建立系统、高效的思维模式，将帮助每个职场人突破发展瓶颈，不断精进自我。 出版时间 2019-06-01 00:00:00 ISBN： 9787544294836 分类： 个人成长-沟通表达 出版社： 南海出版公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>金钱不能买什么-迈克尔·桑德尔</title><link>https://clickear.github.io/%E9%87%91%E9%92%B1%E4%B8%8D%E8%83%BD%E4%B9%B0%E4%BB%80%E4%B9%88-%E8%BF%88%E5%85%8B%E5%B0%94%E6%A1%91%E5%BE%B7%E5%B0%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%87%91%E9%92%B1%E4%B8%8D%E8%83%BD%E4%B9%B0%E4%BB%80%E4%B9%88-%E8%BF%88%E5%85%8B%E5%B0%94%E6%A1%91%E5%BE%B7%E5%B0%94/</guid><description>元数据 [!abstract] 金钱不能买什么
书名： 金钱不能买什么 作者： 迈克尔·桑德尔 简介： 作为哈佛大学最受欢迎的课程讲席教授之一，桑德尔曾在全球掀起过“公正”热潮。他教授的《公正》课程，是哈佛大学有史以来累计听课人数最多的课程，并成为哈佛大学首个免费公开课。在其新作《金钱不能买什么：金钱与公正的正面交锋》中，迈克尔·桑德尔论述了当下最为突出的道德问题之一：在我们这个世界，任何事物都可以出售，这个世界难道没有问题？如果是这样，我们又该如何防止市场价值观侵蚀本不该由它们主导的领域？市场的道德界限又何在？ 出版时间 2012-11-30 00:00:00 ISBN： 9787508636597 分类： 哲学宗教-伦理学 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>钉钉通知配置</title><link>https://clickear.github.io/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%A9%E5%B1%95%E5%8A%9F%E8%83%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%A9%E5%B1%95%E5%8A%9F%E8%83%BD/</guid><description>函数功能 函数功能主要用于 expression中，在写表达式中可进行参数的预处理。比如 【领导审批】节点的设置处理截止时间，该截止时间从流程上下文中获取 ${reachDate} 。
如果流程上下文中没有传递这个值，会进行抛出异常，导致流程走不下去。如果设置成 ${var:getOrDefault(reachDate, date:now())} 则获取不到则为默认值。
lowable默认提供一些函数方法，使用方法为 方法命名空间 + : + 方法名称 + (…参数)
比如 var: getOrDefault 获取默认值。详见 官方文档</description></item><item><title>钢铁是怎样炼成的-奥斯特洛夫斯基</title><link>https://clickear.github.io/%E9%92%A2%E9%93%81%E6%98%AF%E6%80%8E%E6%A0%B7%E7%82%BC%E6%88%90%E7%9A%84-%E5%A5%A5%E6%96%AF%E7%89%B9%E6%B4%9B%E5%A4%AB%E6%96%AF%E5%9F%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%92%A2%E9%93%81%E6%98%AF%E6%80%8E%E6%A0%B7%E7%82%BC%E6%88%90%E7%9A%84-%E5%A5%A5%E6%96%AF%E7%89%B9%E6%B4%9B%E5%A4%AB%E6%96%AF%E5%9F%BA/</guid><description>元数据 [!abstract] 钢铁是怎样炼成的
书名： 钢铁是怎样炼成的 作者： 奥斯特洛夫斯基 简介： 奥斯特洛夫斯基的长篇小说《钢铁是怎样炼成的》是苏联社会主义文学中一部最辉煌的名著，已成为世界文学中的经典作。它被译介到中国半个多世纪以来一直盛传不衰。它被视为生活教科书，人生的路标和精神补品，被一代代读者承传着。《钢铁是怎样炼成的》（1933）是作者根据自己亲身经历写成的一部优秀小说。主人公保尔·柯察金所走过的道路，反映了苏联第一代革命青年不怕困难、艰苦奋斗、勇于胜利的大无畏精神，鼓舞了一代又一代有志青年去实现自己的理想。 出版时间 2015-03-10 00:00:00 ISBN： 9787020102716 分类： 文学-世界名著 出版社： 人民文学出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>锁</title><link>https://clickear.github.io/%E9%94%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%94%81/</guid><description>[!TIP] 技巧💡
锁，是为了应对资源竞争的解决方案，为了提高效率， 可以分为读写锁。读读不互斥，读写互斥。
分类 加锁机制 [[乐观锁]],根据版本号控制
[[悲观锁]]，锁定表或者行，让其他数据操作等待。
锁粒度 表级锁 [!TIP] 技巧💡
元数据锁（Metadata Lock，[[MDL]]）
1.1 当对一个表做增删改查的时候，该表会被加MDL读锁</description></item><item><title>错误日志</title><link>https://clickear.github.io/%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97/</guid><description>[!TIP] 技巧💡
错误情况下，即日志
默认情况下, 错误日志是开启的, 且无法被禁止. 默认情况下, 错误日志是存储在数据库的数据文件目录中, 名称为hostname.err, 其中, hostname为服务器主机名.
参数 为了方便管理, 用户可以根据自己的需求来配置错误日志存储位置和日志级别, 配置参数如下:
log_error = on|文件路径 是否启用错误日志,on表示开启,文件路径表示指定自定义日志路径</description></item><item><title>长夜难明（廖凡、白宇主演《沉默的真相》原著）-紫金陈</title><link>https://clickear.github.io/%E9%95%BF%E5%A4%9C%E9%9A%BE%E6%98%8E%E5%BB%96%E5%87%A1%E7%99%BD%E5%AE%87%E4%B8%BB%E6%BC%94%E6%B2%89%E9%BB%98%E7%9A%84%E7%9C%9F%E7%9B%B8%E5%8E%9F%E8%91%97-%E7%B4%AB%E9%87%91%E9%99%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%95%BF%E5%A4%9C%E9%9A%BE%E6%98%8E%E5%BB%96%E5%87%A1%E7%99%BD%E5%AE%87%E4%B8%BB%E6%BC%94%E6%B2%89%E9%BB%98%E7%9A%84%E7%9C%9F%E7%9B%B8%E5%8E%9F%E8%91%97-%E7%B4%AB%E9%87%91%E9%99%88/</guid><description>元数据 [!abstract] 长夜难明（廖凡、白宇主演《沉默的真相》原著）
书名： 长夜难明（廖凡、白宇主演《沉默的真相》原著） 作者： 紫金陈 简介： 廖凡、白宇、谭卓主演热剧《沉默的真相》原著小说。嫌疑人杀人抛尸，却因意外在大庭广众之下被当场抓获。现场至少有几百个目击证人，嫌疑人对整个犯罪经过也供认不讳。人证、物证、口供，证据链齐全。就在检察机关对嫌疑人正式提起公诉之时，案情却陡然生变……这背后究竟隐藏着怎样惊天的罪行？为了查清真相，有一位检察官，历经十年光阴，付出了青春、事业、名声、前途、家庭等等无数代价，甚至，还包括生命。 出版时间 2017-01-01 00:00:00 ISBN： 9787222143975 分类： 精品小说-悬疑推理 出版社： 云南人民出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>长安的荔枝-马伯庸</title><link>https://clickear.github.io/%E9%95%BF%E5%AE%89%E7%9A%84%E8%8D%94%E6%9E%9D-%E9%A9%AC%E4%BC%AF%E5%BA%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%95%BF%E5%AE%89%E7%9A%84%E8%8D%94%E6%9E%9D-%E9%A9%AC%E4%BC%AF%E5%BA%B8/</guid><description>元数据 [!abstract] 长安的荔枝
书名： 长安的荔枝 作者： 马伯庸 简介： 天宝十四年，长安城的小吏李善德突然接到一个任务：要在贵妃诞日之前，从岭南运来新鲜荔枝。荔枝“一日色变，二日香变，三日味变”，而岭南距长安五千余里，山水迢迢，这是个不可能完成的任务，可为了家人，李善德决心放手一搏。在胡商等人的帮助下，李善德靠着精密计算和反复试验，确定了保存方法和转运路线，将时长控制在十一天，运鲜荔枝之事终得落实。万事俱备，李善德却没料到，横亘在他面前的一座大山，是官场。 李善德还是运来了鲜荔枝，为此，他失去了朋友，又险些丢掉性命，却始终没有失去为人为官的本心。官场诡谲，而初心未改，反使得他在乱世中得以保全。 出版时间 2021-11-26 00:00:00 ISBN： 分类： 历史-历史小说 出版社： 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>闭合开环</title><link>https://clickear.github.io/%E9%97%AD%E5%90%88%E5%BC%80%E7%8E%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%97%AD%E5%90%88%E5%BC%80%E7%8E%AF/</guid><description>Thoughts Memo 汉化组译制
原文： Close open loops (andymatuschak.org)
未完成的任务、未记录的观察、未写的回复…… —— 这些待办在我们脑海中盘旋，仿佛我们在反复排练，以确保它们不被遗忘。为了摆脱这种唠叨并创造一个「水流般的思维」（使用艾伦的术语，2015 年），需要建立一些系统，以可靠地方式来关闭这些开放的循环。
例如：如果一个待办事项具有可操作性，这意味着：（艾伦，2015）：
你应该能够在任何地方记录一项任务 你定期从这个清单中清空任务 你定期委托、重构或删除那些你无法确定优先次序的任务 综合看来，这些特性确保了当你记录一个任务时，**你可以不必一直惦记着它。**光有全面的记录方法是不够的，正如大多数待办系统所证明的那样，如果你不定期检查任务列表，并对徘徊不前的任务做决策（删除或重新规划），那连自己都不相信它们会被继续跟进。</description></item><item><title>间隔重复卡片通常是原子化的，而助记媒介为其赋予结构</title><link>https://clickear.github.io/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E5%8D%A1%E7%89%87%E9%80%9A%E5%B8%B8%E6%98%AF%E5%8E%9F%E5%AD%90%E5%8C%96%E7%9A%84%E8%80%8C%E5%8A%A9%E8%AE%B0%E5%AA%92%E4%BB%8B%E4%B8%BA%E5%85%B6%E8%B5%8B%E4%BA%88%E7%BB%93%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E5%8D%A1%E7%89%87%E9%80%9A%E5%B8%B8%E6%98%AF%E5%8E%9F%E5%AD%90%E5%8C%96%E7%9A%84%E8%80%8C%E5%8A%A9%E8%AE%B0%E5%AA%92%E4%BB%8B%E4%B8%BA%E5%85%B6%E8%B5%8B%E4%BA%88%E7%BB%93%E6%9E%84/</guid><description>%%我的理解:: 比如现在我自己在用的obsidian的[[spaced repetition]]插件，就是一种助记媒介，在review的卡片笔记的时候，能看到额外的结构信息，比如引用它的其他卡片，所在文件夹目录，标签等等。%%
原文： The mnemonic medium gives structure to normally-atomized spaced repetition memory prompts
[[单独的间隔重复记忆卡片是一种糟糕的交流媒介]]通过将卡片嵌入到散文叙述中，赋予卡片以秩序，并将其嵌入一个更大的整体。上下文使读者能够以一种创作的、结构化的方式建立理解。叙述也给了卡片一个更显著的目的，这很重要，因为《 深刻的理解需要强烈的个人联系（也是其结果）》 [3]。
也可参见「我们如何才能开发出变革性的思想技术？」中《 扩展记忆系统的使用范围：还可以用于哪些类型的理解？》 [4]一节的讨论。</description></item><item><title>间隔重复可以降低破坏性收件箱维护操作的风险</title><link>https://clickear.github.io/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E5%8F%AF%E4%BB%A5%E9%99%8D%E4%BD%8E%E7%A0%B4%E5%9D%8F%E6%80%A7%E6%94%B6%E4%BB%B6%E7%AE%B1%E7%BB%B4%E6%8A%A4%E6%93%8D%E4%BD%9C%E7%9A%84%E9%A3%8E%E9%99%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E5%8F%AF%E4%BB%A5%E9%99%8D%E4%BD%8E%E7%A0%B4%E5%9D%8F%E6%80%A7%E6%94%B6%E4%BB%B6%E7%AE%B1%E7%BB%B4%E6%8A%A4%E6%93%8D%E4%BD%9C%E7%9A%84%E9%A3%8E%E9%99%A9/</guid><description>%%我的理解:: 间隔重复相当于用时间换空间，让删除或清空操作从一次性操作，变成了经过多次考核的操作。%%
[[收件箱需要可靠的清空流程才有效]]，但[[收件箱维护的分流策略（如「收件箱归零」）往往不够稳健]]。在很大程度上，这是因为[[软件界面经常将破坏性操作作为最终决定，而不是视情况而定的选择]]。
如果你把这些破坏性操作按「不是现在」重新执行，它们带来的感觉就完全不同。那个你关闭的消息并没有真正消失，而是会在稍后回来。比如一开始会在一天后弹出，如果我还跳过，那就或许变成几天后、再是一个星期，以此类推，直到「不是现在」变为真正的「关闭」，但这样的「关闭」不会让你压力山大。这个概念可以应用于任务队列、阅读列表（[[为有潜在价值的参考引用建立一个阅读收件箱]]）、电子邮件收件箱，等等。[[收件箱维护的分流策略（如「收件箱归零」）往往不够稳健]]。
这是[[间隔重复系统可以用来编程注意力]]的一个例子。
参考文献 Matuschak, A. (2019, December). Taking knowledge work seriously. Presented at the Stripe Convergence, San Francisco.</description></item><item><title>间隔重复对于逐步完善灵光一闪可能有用</title><link>https://clickear.github.io/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E5%AF%B9%E4%BA%8E%E9%80%90%E6%AD%A5%E5%AE%8C%E5%96%84%E7%81%B5%E5%85%89%E4%B8%80%E9%97%AA%E5%8F%AF%E8%83%BD%E6%9C%89%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E5%AF%B9%E4%BA%8E%E9%80%90%E6%AD%A5%E5%AE%8C%E5%96%84%E7%81%B5%E5%85%89%E4%B8%80%E9%97%AA%E5%8F%AF%E8%83%BD%E6%9C%89%E7%94%A8/</guid><description>%%我的理解:: 现在我加入到[[spaced repetition]]插件中进行anki记忆的笔记标准还没定下来，数量也少。这里提供了一个思路，自己的闪念笔记，也可以加入到anki中，过几天之后再看这则闪念，可能会迸发出新想法。 #todo/某天 %%
在谈话或散步中间，我经常灵光一现，想出有趣的问题和想法。大部分时候，我当场是没办法围绕冒出的想法写出很有见地的东西的。我自然写不出高质量的[[常青笔记]]。对于这个想法我还无可置喙——只是它看起来特别有趣。
我现在应该怎么做？我应该如何安排行动，从而逐步完善这个灵光一闪？我可以创建一个「待办事项」，或者安排一段时间来思考这个问题，但完善灵感往往不该这么做。相反，我常常该让子弹飞一会：过几天再回顾，看看我又想出了什么。
我可以在[[为临时性的和不完整的笔记设置写作收件箱]]中记录这个概念，但收件箱中的内容会迅速变成一堆难以处理的碎片，而我会忽略这些碎片 ([[收件箱需要可靠的清空流程才有效]])。
[[间隔重复系统可以用来编程注意力]]，所以间隔重复在这里可能会有帮助。在这样一个系统中，我可能会：
坐下来进行晨间写作，阅读当天的写作卡片，这些卡片从写作收件箱中抽取，数量很少 我可以添加我目前对卡片内容的想法（也许这些想法让以前写的东西意图更模糊了，除非我添加新的材料） 完成之后，我就可以把卡片标记为「有成果」，这意味着它很快就会再次出现；或者标记成「无成果」，系统便大大增加其间隔时间。 另外，我可能会花点时间把一些卡片转换成一条或多条[[常青笔记]]。 任何我直接忽略的卡片，其间隔时间都会增加，但增加的间隔时间比起显然无用的卡片少。 利用间隔重复的指数性质，上百张卡片逐步推进便成为可能，而每天只消考虑其中的几张。
这将会构成「渐进思考」的系统。
实现 Rice Issa 已经发布了 一个简单实现。</description></item><item><title>间隔重复系统可以用来编程注意力</title><link>https://clickear.github.io/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E7%B3%BB%E7%BB%9F%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E7%BC%96%E7%A8%8B%E6%B3%A8%E6%84%8F%E5%8A%9B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E7%B3%BB%E7%BB%9F%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E7%BC%96%E7%A8%8B%E6%B3%A8%E6%84%8F%E5%8A%9B/</guid><description>#todo
[[间隔重复记忆系统让记忆成为一种选择]]，但交由计算机处理时间安排的价值，更在于动态地安排和选择要复习的问题。从某种意义上说，[[间隔重复记忆系统]]的功效来自于它编程注意力的能力（ 可编程的注意力）。不如把它想成「大脑的{cron}」（注：cron 是类 Unix 操作系统下的定期任务管理系统。）
每张卡片都手动决定何时复习，实在是太费力了。况且方方面面成本都很高。如果把安排复习这项工作大部分外包给机器，你就可以做粒度更大的决定——比如 10 分钟专注进行 SRS 复习——而分配好时间块后，一切就交由机器安排。
在传统的抽认卡式系统中，这一观察不仅仅能运用于记忆上：见《[[间隔重复记忆系统可用于促进应用、综合和创造]]》和《[[间隔重复可能是培养或改变习惯的有用工具]]》、《 间隔重复的卡片设计是为未来的自己设计任务》
但是间隔重复的核心理念——根据一定的时间表自动安排任务，并适时展示——可以在很多软件和领域中应用。我把这个概念叫做 间隔一切。
一些例子：
[[渐进阅读]] [[穿越时间的文本]] [[间隔重复对于逐步完善灵光一闪可能有用]] [[间隔重复可以降低破坏性收件箱维护操作的风险]]（待办事项清单、电子邮件、阅读清单等） [[Readwise]] 相关文章：</description></item><item><title>间隔重复记忆系统</title><link>https://clickear.github.io/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E8%AE%B0%E5%BF%86%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E8%AE%B0%E5%BF%86%E7%B3%BB%E7%BB%9F/</guid><description>#todo 又是一个大主题，脱离了[[常青笔记]]的范畴，抽时间另开一个专题。
间隔重复记忆系统 - 知乎
间隔重复记忆系统结合了 测试效应 [1]和 间隔效应 [2]，能够用于高效地记忆成千上万的事实（ 间隔重复记忆系统非常高效 [3]）。有些人还将它们用于更广泛的任务（见下文）。《 间隔重复记忆系统使记忆成为一种选择 [4]》，但它们不只是用于背诵事实：《 间隔重复记忆系统可用于加深概念理解》 [5]。
这类系统中，第一个面向消费者的是 Supermemo [6]，由 Piotr Wozniak [7] 创造。它使用并推广了「间隔重复」这一术语；之前的文献使用了各种术语（通常指的是基本现象更具体的方面）。</description></item><item><title>阿里巴巴java开发手册</title><link>https://clickear.github.io/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/</guid><description> try-with-resource，释放资源 Random，避免被多线程使用。虽然是线程安全，但是会因为竞争同一个seed，导致性能下降。推荐使用Math.random或者ThreadLocalRandom apache.common中RandomUtil实现: 使用的是Random hutool中RandomUtil实现: 使用的是 ThreadLocalRandom Instant，记日志用。与时区无关。不能自定义格式输出 LocalDateTime ，可以自定义格式。DateTiemFormtter.ofPattern. 带时区，默认系统时区。</description></item><item><title>陆犯焉识（陈道明、巩俐主演）-严歌苓</title><link>https://clickear.github.io/%E9%99%86%E7%8A%AF%E7%84%89%E8%AF%86%E9%99%88%E9%81%93%E6%98%8E%E5%B7%A9%E4%BF%90%E4%B8%BB%E6%BC%94-%E4%B8%A5%E6%AD%8C%E8%8B%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%99%86%E7%8A%AF%E7%84%89%E8%AF%86%E9%99%88%E9%81%93%E6%98%8E%E5%B7%A9%E4%BF%90%E4%B8%BB%E6%BC%94-%E4%B8%A5%E6%AD%8C%E8%8B%93/</guid><description>元数据 [!abstract] 陆犯焉识（陈道明、巩俐主演）
书名： 陆犯焉识（陈道明、巩俐主演） 作者： 严歌苓 简介： 【张艺谋最新电影《归来》原著小说】陆焉识本是上海大户人家才子，聪慧倜傥，会讨女人喜欢。父亲去世后，年轻无嗣的继母为了巩固其在家族中的地位，软硬兼施地使他娶了自己的娘家侄女婉喻。没有爱情的陆焉识很快出国留学。毕业回国后的陆焉识博士开始了风流得意的大学教授生活，也开始了在风情而精明的继母和温婉而坚韧的妻子夹缝间尴尬的家庭生活。五十年代，陆焉识因其出身、更因其不谙世事的张扬激越而成为&amp;quot;反革命“，在历次运动中，其迂腐可笑的书生气使他的刑期一次次延长，直至被判为无期。这位智商超群的留美博士由此揣着极高的学识在西北大荒漠上改造了二十年。枯寂中对繁华半生的反刍，使他确认了内心对婉喻的深爱。婉喻曾是他寡味的开端，却在回忆里成为他完美的归宿…… 出版时间 2011-10-01 00:00:00 ISBN： 9787506360876 分类： 精品小说-影视原著 出版社： 作家出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>集装箱改变世界（修订版）-马克·莱文森</title><link>https://clickear.github.io/%E9%9B%86%E8%A3%85%E7%AE%B1%E6%94%B9%E5%8F%98%E4%B8%96%E7%95%8C%E4%BF%AE%E8%AE%A2%E7%89%88-%E9%A9%AC%E5%85%8B%E8%8E%B1%E6%96%87%E6%A3%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%9B%86%E8%A3%85%E7%AE%B1%E6%94%B9%E5%8F%98%E4%B8%96%E7%95%8C%E4%BF%AE%E8%AE%A2%E7%89%88-%E9%A9%AC%E5%85%8B%E8%8E%B1%E6%96%87%E6%A3%AE/</guid><description>元数据 [!abstract] 集装箱改变世界（修订版）
书名： 集装箱改变世界（修订版） 作者： 马克·莱文森 简介： 《集装箱改变世界（修订版）》从集装箱的发明史娓娓道来，将一个看似平凡的主题衍变成一个个非同寻常的有趣故事，展现了一项技术的进步是如何改变世界经济形态的。它的价值不在于是什么，而在于怎样使用。在集装箱出现之前，美国的沃尔玛、法国的成衣绝对不会遍地开花。而在集装箱出现之后，货运变得如此便宜，以至于某件产品产自东半球，运至纽约销售，远比在纽约近郊生产该产品来得划算。中国也从此登上国际集装箱海运和世界工厂的舞台。读者在享受阅读的同时，还会有趣地发现，即便是一个简单的创新，也会彻底改变我们的生活。 出版时间 2014-01-01 00:00:00 ISBN： 9787111449966 分类： 经济理财-财经 出版社： 机械工业出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>零拷贝</title><link>https://clickear.github.io/%E9%9B%B6%E6%8B%B7%E8%B4%9D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%9B%B6%E6%8B%B7%E8%B4%9D/</guid><description>零拷贝(英语: Zero-copy) 技术是指计算机执行操作时, CPU不需要先将数据从某处内存复制到另一个特定区域. 这种技术通常用于通过网络传输文件时节省CPU周期和内存带宽.
➢零拷贝技术可以减少数据拷贝和共享总线操作的次数, 消除传输数据在存储器之间不必要的中间拷贝次数, 从而有效地提高数据传输效率
➢零拷贝技术减少了用户进程地址空间和内核地址空间之间因为上:下文切换而带来的开销
可以看出没有说不需要拷贝, 只是说减少冗余不必要的拷贝。
[!TIP] 技巧💡
将磁盘上的文件读取出来，然后通过网络协议发送给客户端。会有个内核态到用户控件态转换的过程。
DMA 省不了的步骤，即磁盘文件到内核态的缓存区。DMA是减少了CPU在磁盘文件到内核态缓存区的阻塞，即cpu这时候不是阻塞的。通过中断程序触发cpu处理 IO工作方式演进 传统IO，read + write 传统 I/O 的工作方式是，数据读取和写入是从用户空间到内核空间来回复制，而内核空间的数据是通过操作系统层面的 I/O 接口从磁盘读取或写入。</description></item><item><title>非公平锁</title><link>https://clickear.github.io/%E9%9D%9E%E5%85%AC%E5%B9%B3%E9%94%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%9D%9E%E5%85%AC%E5%B9%B3%E9%94%81/</guid><description>先到临界区的线程未必比后到的线程更快地获取得到锁。
实现思路 线程先尝试能不能获取得到锁，如果获取得到锁了就执行同步代码了。如果获取不到锁，那就再把这个线程放到队列呗
[[synchronized]]就属于非公平锁。
[!TIP] 技巧💡
synchronized无论处理哪种锁，都是先尝试获取，获取不到才升级|| 放到队列上的，所以是非公平的
偏向锁，如果当前线程ID与markword存储的不相等，则CAS尝试更换线程ID，CAS成功就获取得到锁了 轻量级锁实际上也是通过CAS来抢占锁资源（只不过多了拷贝Mark Word到Lock Record的过程），抢占成功到锁就归属给该线程了，但自旋失败一定次数后升级重量级锁 重量级锁通过monitor对象中的队列存储线程，但线程进入队列前，还是会先尝试获取得到锁，如果能获取不到才进入线程等待队列中</description></item><item><title>面试碰到问题</title><link>https://clickear.github.io/%E9%9D%A2%E8%AF%95%E7%A2%B0%E5%88%B0%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%9D%A2%E8%AF%95%E7%A2%B0%E5%88%B0%E9%97%AE%E9%A2%98/</guid><description>延迟双删 zk分布式锁实现。 临时顺序节点，watch机制 insert 加锁？ 线上连接报错 jvm 指纹科技 美图 美柚 他趣 公积金是百分6 五险也比较低 安踏 顺丰 天翼云 翼华</description></item><item><title>韭菜的自我修养-李笑来</title><link>https://clickear.github.io/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB-%E6%9D%8E%E7%AC%91%E6%9D%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB-%E6%9D%8E%E7%AC%91%E6%9D%A5/</guid><description>元数据 [!abstract] 韭菜的自我修养
书名： 韭菜的自我修养 作者： 李笑来 简介： 你不是韭菜，你从来都不是韭菜。真的很羡慕你，读过这本小册子！认真读，反复读，一个字也不要漏掉！你将一步一步得到很多很多颠倒乾坤的结论，你可以暂时放弃自己的智商（但同时你没有忘记锻炼自己的智商），你会渐渐变成一个有章有法的交易者，你能看到周期，你能判断自己应该在什么时候用什么样的频次交易，你有能力为自己的行为负责，你能透过表象研究实质，你总是尝试着去寻找能够更完整地解释这个世界的规律及其方法论，你甚至可以控制自己的情绪和行为……如果，你尚未冲进交易市场，却意外地先读到了这本小册子，你猜，你会不会避开书里提到的“几乎所有人都会犯的错误”？李笑来用这个小册子祝福你：好人一生平安。 出版时间 2018-09-01 00:00:00 ISBN： 9787559428639 分类： 经济理财-财经 出版社： 江苏凤凰文艺出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>项羽</title><link>https://clickear.github.io/%E9%A1%B9%E7%BE%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%A1%B9%E7%BE%BD/</guid><description/></item><item><title>顺风与逆风</title><link>https://clickear.github.io/%E9%A1%BA%E9%A3%8E%E4%B8%8E%E9%80%86%E9%A3%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%A1%BA%E9%A3%8E%E4%B8%8E%E9%80%86%E9%A3%8E/</guid><description>传统的博弈论模型，告诉我们。对抗或游戏的最优策略就是：
优势顺风局求稳，不要浪，让优势保持下去。 劣势逆风局要博，求个翻盘点，从而能寻找突破口打开局面。
具体到实操。因为单排，队友的实力和对面的实力，是一个变量，出于分析考虑，只能假设双方实力均衡。</description></item><item><title>预读</title><link>https://clickear.github.io/%E9%A2%84%E8%AF%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%A2%84%E8%AF%BB/</guid><description>磁盘读写，并不是按需读取，而是按页读取，一次至少读一页数据（一般是4K），如果未来要读取的数据就在页中，就能够省去后续的磁盘IO，提高效率。 提前把数据预读，就有个[[预读失效]]问题。</description></item><item><title>颜色指针</title><link>https://clickear.github.io/%E9%A2%9C%E8%89%B2%E6%8C%87%E9%92%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%A2%9C%E8%89%B2%E6%8C%87%E9%92%88/</guid><description>[!INFO] 颜色指针
以前的垃圾回收器的GC信息都保存在对象头中，而ZGC的[[ZGC]]信息保存在指针中
每个对象有一个64位指针，这64位被分为：
18位：预留给以后使用； 1位：Finalizable标识，次位与并发引用处理有关，它表示这个对象只能通过finalizer才能访问； 1位：Remapped标识，设置此位的值后，对象未指向relocation set中（relocation set表示需要GC的Region集合）； 1位：Marked1标识； 1位：Marked0标识，和上面的Marked1都是标记对象用于辅助GC； 42位：对象的地址（所以它可以支持2^42=4T内存） [!INFO] 颜色指针最大支持到16T</description></item><item><title>飞轮效应</title><link>https://clickear.github.io/%E9%A3%9E%E8%BD%AE%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%A3%9E%E8%BD%AE%E6%95%88%E5%BA%94/</guid><description>飞轮 2 个字容易误导我。
不如理解成推磨。启动难，转起来之后很轻松。
指做一件事一开始很难，可一旦我们挺过去这个难关后，只需付出很小的努力，甚至不废吹灰之力就能得到很大的收获。源自物理实验：为了使静止的飞轮转动起来，一开始须花很大的力气反复地推轮子，当达到一定的速度时，就不需要太大的力气，即使力量没有增加，轮子也会转得更快，后逐渐应用于商业和心理学分析中。
案例：嘟嘟创业前期，因为资金、人才等问题，发展艰难。后来慢慢步入正轨，资本厚了、招募到了优秀的人才，事业也越来越好，一天天壮大。
[[架构图-太难画了]]
[[数字时代如何更好地工作与生活 - 图]]</description></item><item><title>首因效应和近因效应</title><link>https://clickear.github.io/%E9%A6%96%E5%9B%A0%E6%95%88%E5%BA%94%E5%92%8C%E8%BF%91%E5%9B%A0%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%A6%96%E5%9B%A0%E6%95%88%E5%BA%94%E5%92%8C%E8%BF%91%E5%9B%A0%E6%95%88%E5%BA%94/</guid><description>首因效应 （第一印象很重要） 也称优先效应、第一印象效应、先入为主效应。指人们通常对一个人最初接触时的信息形成“先入为主”的鲜明印象，从而影响人们以后对此人的评价。是系列位置效应的一种类型。[由美国心理学家 A.S.Lochins（1907~1996）于 1957 年通过实验证明。]
案例：如小销售新手哆哆，谈业务时总是衣冠整洁、谈吐细致礼貌，虽然有些技术细节不熟，但给客户留下了良好的印象，深得客户好感，也让他顺利签了单。
近因效应（新印象是可以塑造的） 也称为“新颖效应”，是指最新出现的刺激物促使新印象形成的心理效果。与首因效应相反，是指在多种刺激一次出现的时候，印象的形成主要取决于后来出现的刺激，即对他人最新的认识掩盖了以往形成的评价。是系列位置效应的一种类型。[由心理学家 A·卢琴斯于 1957 年根据实验首次提出；1964 年，心理学家 C·梅约和 W·克劳克特通过实验进一步证明。]
案例：毕业后 10 年未见面的老同学，聚会上你一眼就认出了她/他；而且最熟悉的记忆除了最要好的时刻，多半是临别时的情景。</description></item><item><title>马太效应</title><link>https://clickear.github.io/%E9%A9%AC%E5%A4%AA%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%A9%AC%E5%A4%AA%E6%95%88%E5%BA%94/</guid><description>马太效应（英语：Matthew effect），指科学界的名声累加的一种 反馈现象，最早由美国社会学家 罗伯特·莫顿于1968年提出。其名称来自于《 新约圣经· 马太福音》中的 一则寓言。类似的有 道德经“天之道，损有余而补不足。人之道，则不然，损不足以奉有余”。</description></item><item><title>高效开发</title><link>https://clickear.github.io/%E9%AB%98%E6%95%88%E5%BC%80%E5%8F%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%AB%98%E6%95%88%E5%BC%80%E5%8F%91/</guid><description>热部署 [[jrebel]] [[idea]]</description></item><item><title>高效记忆的根本：主动加工和组块化记忆</title><link>https://clickear.github.io/%E9%AB%98%E6%95%88%E8%AE%B0%E5%BF%86%E7%9A%84%E6%A0%B9%E6%9C%AC%E4%B8%BB%E5%8A%A8%E5%8A%A0%E5%B7%A5%E5%92%8C%E7%BB%84%E5%9D%97%E5%8C%96%E8%AE%B0%E5%BF%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%AB%98%E6%95%88%E8%AE%B0%E5%BF%86%E7%9A%84%E6%A0%B9%E6%9C%AC%E4%B8%BB%E5%8A%A8%E5%8A%A0%E5%B7%A5%E5%92%8C%E7%BB%84%E5%9D%97%E5%8C%96%E8%AE%B0%E5%BF%86/</guid><description>主动加工 tags: review
就是比如背单词的时候，如果别人的口诀不适合自己，就尝试自己主动加工这个单词，将它赋予无意义的意义或者画面感。比如记忆 obsidian 这个单词，是黑曜石的意思，我的加工方式是：obs 是一个录播开源软件，像三体里的黑曜石一样，有 dian 牛逼。
这个加工出的意义，没有真实意义，但是它就是能让我们更快地记住。当前那些前缀后缀法，是有意义一些的加工方法，可能有时候更值得采用。
其他记忆场景同理，自己编码，用自己的既有的认知系统，对知识点进行主动联想思考和加工，然后记忆就是水到渠成的事情了。
组块化 组块化其实就是信息压缩编码，就是口诀。比如金庸小说 飞雪连天射白鹿，笑书神侠倚碧鸳。比如奇变偶不变，符号看象限。比如界门纲目科属种。比如氢氦锂铍硼碳氮。</description></item><item><title>魔鬼约会学-阮琦</title><link>https://clickear.github.io/%E9%AD%94%E9%AC%BC%E7%BA%A6%E4%BC%9A%E5%AD%A6-%E9%98%AE%E7%90%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%AD%94%E9%AC%BC%E7%BA%A6%E4%BC%9A%E5%AD%A6-%E9%98%AE%E7%90%A6/</guid><description>元数据 [!abstract] 魔鬼约会学
书名： 魔鬼约会学 作者： 阮琦 简介： 《魔鬼约会学》系统地从“两性的秘密”“交流的艺术”“约会的技巧”等多个角度，归纳、分析、总结了关于两性约会的本质、技巧与方法。为读者深入解析如何约会、约会前要注意什么、约会时要注意如何交流等问题，是一本围绕“约会”主题的实用指南。“魔鬼咨询师”阮琦潜心写就的约会宝典，教你从搭讪一步跨越到约会，更带你从约会开始，走向真正的亲密关系。 出版时间 2020-05-01 00:00:00 ISBN： 9787559627841 分类： 生活百科-情感 出版社： 北京联合出版公司 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>鲁班大师</title><link>https://clickear.github.io/%E9%B2%81%E7%8F%AD%E5%A4%A7%E5%B8%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%B2%81%E7%8F%AD%E5%A4%A7%E5%B8%88/</guid><description/></item><item><title>鲶鱼效应</title><link>https://clickear.github.io/%E9%B2%B6%E9%B1%BC%E6%95%88%E5%BA%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%B2%B6%E9%B1%BC%E6%95%88%E5%BA%94/</guid><description>从前，挪威人在海上捕得沙丁鱼后，如果能让它们活着抵港，卖价就会比死鱼高好几倍，但只有一条渔船能做到带活鱼回港。后来，人们发现这条船的鱼槽内不过是多了一条鲶鱼而已。原来当鲶鱼装入鱼槽后，由于环境陌生，就会四处游动，而沙丁鱼发现这一“异类”后，也会因紧张而加速游动。如此一来，沙丁鱼便延长了寿命。这就是“鲶鱼效应”。
运用鲶鱼效应，通过个体的“中途介入”，对群体起到竞争作用，它符合人才管理的运行机制。目前，一些机关单位实行的公开招考和竞争上岗，就是很好的典型。这种方法能够使人产生危机感从而更好地工作。</description></item><item><title>黑天鹅：如何应对不可预知的未来-纳西姆·尼古拉斯·塔勒布</title><link>https://clickear.github.io/%E9%BB%91%E5%A4%A9%E9%B9%85%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E4%B8%8D%E5%8F%AF%E9%A2%84%E7%9F%A5%E7%9A%84%E6%9C%AA%E6%9D%A5-%E7%BA%B3%E8%A5%BF%E5%A7%86%E5%B0%BC%E5%8F%A4%E6%8B%89%E6%96%AF%E5%A1%94%E5%8B%92%E5%B8%83/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%BB%91%E5%A4%A9%E9%B9%85%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E4%B8%8D%E5%8F%AF%E9%A2%84%E7%9F%A5%E7%9A%84%E6%9C%AA%E6%9D%A5-%E7%BA%B3%E8%A5%BF%E5%A7%86%E5%B0%BC%E5%8F%A4%E6%8B%89%E6%96%AF%E5%A1%94%E5%8B%92%E5%B8%83/</guid><description>元数据 [!abstract] 黑天鹅：如何应对不可预知的未来
书名： 黑天鹅：如何应对不可预知的未来 作者： 纳西姆·尼古拉斯·塔勒布 简介： 从次贷危机到东南亚海啸，从“9.11”事件到“泰坦尼克号”的沉没，黑天鹅存在于各个领域，无论金融市场、商业、经济还是个人生活，都逃不过它的控制。怎样才能真正认识这个社会的运行方式？怎样才能避免小概率事件带来的重大损失？怎样才能在不确定的世界中占得先机？升级版新增作者全新后记，深入分析不确定性带给我们的影响，教你以全新的视角理解现实世界，采取有效的策略防范未知风险，并把握黑天鹅带来的机会，从中受益。毋庸置疑，它将颠覆我们惯常的思维，让你重新掌握自己的命运。 出版时间 2011-10-01 00:00:00 ISBN： 9787508630304 分类： 经济理财-管理 出版社： 中信出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>黑客与画家（10万册纪念版）-保罗·格雷厄姆</title><link>https://clickear.github.io/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B610%E4%B8%87%E5%86%8C%E7%BA%AA%E5%BF%B5%E7%89%88-%E4%BF%9D%E7%BD%97%E6%A0%BC%E9%9B%B7%E5%8E%84%E5%A7%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B610%E4%B8%87%E5%86%8C%E7%BA%AA%E5%BF%B5%E7%89%88-%E4%BF%9D%E7%BD%97%E6%A0%BC%E9%9B%B7%E5%8E%84%E5%A7%86/</guid><description>元数据 [!abstract] 黑客与画家（10万册纪念版）
书名： 黑客与画家（10万册纪念版） 作者： 保罗·格雷厄姆 简介： 你无须改变太多，也能活出精彩一生。这是保罗给我们的心理安抚，同时他也用自己在世俗意义上的成功，明白地告诉我们这件事在现实世界的可行性。这是我们可以从阅读这本书的过程中得到的重要启示之一。而从内容层面来看，在这本充满了洞见的书里，保罗以黑客之眼和画家之心，为我们揭示了这个世界为何拥有今日之面貌，并预言了它的未来。在保罗眼里，黑客是创作者，是互联网之子，拥有一颗不安分的心，虽然经常被视为书呆子，却以自己的努力，为互联网新世界奠基。毫无疑问，我们生活于其中的世界，已经且必将继续被黑客深刻地改变，因此，了解黑客，我们也会更了解这个世界。在本书中，作者和我们谈论了与黑客有关的三个方面：第一，黑客如何成长及看待世界；第二，黑客如何工作及影响世界；第三，黑客的工具和工作方法。事实上，在全部15篇文章中，保罗所探讨的内容远远超出了黑客所关注的内容，并以幽默的笔触，在最广泛的可能性上展现了他对于人人关心且受其影响的重大议题的思考。不管是创造财富，还是如何设计出好产品，抑或如何在充满了异见的世界里自洽地活着。可以说，不管我们处在人生的什么阶段，都将从阅读本书的过程中得到启示。 出版时间 2022-05-01 00:00:00 ISBN： 9787115590862 分类： 文学-散文杂著 出版社： 人民邮电出版社 高亮划线 读书笔记 本书评论 书评 No.</description></item><item><title>默认面对自己写笔记，不要考虑有读者</title><link>https://clickear.github.io/%E9%BB%98%E8%AE%A4%E9%9D%A2%E5%AF%B9%E8%87%AA%E5%B7%B1%E5%86%99%E7%AC%94%E8%AE%B0%E4%B8%8D%E8%A6%81%E8%80%83%E8%99%91%E6%9C%89%E8%AF%BB%E8%80%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%BB%98%E8%AE%A4%E9%9D%A2%E5%AF%B9%E8%87%AA%E5%B7%B1%E5%86%99%E7%AC%94%E8%AE%B0%E4%B8%8D%E8%A6%81%E8%80%83%E8%99%91%E6%9C%89%E8%AF%BB%E8%80%85/</guid><description>%%我的理解:: 写笔记为为了让自己更好地思考。写长文是为了把思想和观点更准确地传递给读者。后者往往需要花很多精力去遣词造句视图更准确表达，毕竟人与人之间的知识面和三观永远是有差异的。但写笔记就不需要花额外时间做这些可能对自己是无用功的事情，毕竟核心是帮助自己更好地思考，而不是更好地表达。但写长文的技能可不能丢，毕竟交流能力是我们立足社会的元技能。写笔记对内，写长文对外，而80%以上的时间，我们的创作应该是对内的，自省的。%%
Thoughts Memo 汉化组译制
原文： Write notes for yourself by default, disregarding audience (andymatuschak.org)
如果你想公开一些作品，[[常青笔记]]可以作为一部分写作策略（[[可执行的写作策略]]）。因此，把笔记照着可发表的形式去写，无疑会「节省时间」。但这可能意味着，你必须提供所有必要的背景，来帮助读者理解（对你来说很无聊的）你的想法：或自我审查、或添加大量的修饰语、或在表达清晰度上花上很多精力。如果作为自我思考的过程，这些做法中的许多都有点用处 —— 例如，更清晰的写作通常需要更清晰的思考 —— 但我感到写作中的时间、精力开销会大大增加，往往会达到形成「阻塞」的程度。</description></item><item><title>🎬古董局中局</title><link>https://clickear.github.io/%E5%8F%A4%E8%91%A3%E5%B1%80%E4%B8%AD%E5%B1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%A4%E8%91%A3%E5%B1%80%E4%B8%AD%E5%B1%80/</guid><description>[[雷佳音]]已经成了马伯庸作品的御用演员了。[[《长安十二时辰》]] 也是这小子演的。</description></item><item><title>🎬少年派的奇幻漂流</title><link>https://clickear.github.io/%E5%B0%91%E5%B9%B4%E6%B4%BE%E7%9A%84%E5%A5%87%E5%B9%BB%E6%BC%82%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%B0%91%E5%B9%B4%E6%B4%BE%E7%9A%84%E5%A5%87%E5%B9%BB%E6%BC%82%E6%B5%81/</guid><description>开局与结尾 开局 成年派给一个作家讲故事，自己父亲是动物园园长，有个游泳健将叔叔教他，所以他也精通游泳。原名有 pissing 尿尿的含义被同学取消，但他寻求改变，解释成了派，还背了几千位。母亲教他信教信神，给他信仰，他信了印度的神，西方的神，以及穆斯林 3 个教，他吃素。 结局 作家得到了 2 个版本的故事，他回答他更相信有老虎的版本，他写出来的将是一个奇幻的故事。无论真实情况如何，将它奇幻化，可谓最好的结局。 触动点 少年派信神，导致其以为老虎也有灵魂，他去喂食老虎帕克，被父亲用小羊做实验，证明了老虎的凶残。 前面用了 35 分钟铺垫，是我见过最拖沓的电影，作家也一直强调，是来听一个能让他相信上帝的故事的。 船上第一天，猴子和狗就杀了斑马。接着狗杀了猴子，紧接着，老虎马上从隐藏的地方钻出来吃了狗。自此，船上立刻只剩下少年派和老虎了。 为了自保，学会钓鱼来喂老虎。 占据了优势的时候，没有选择杀老虎。并且还想办法把它捞上来。前期的铺垫，使得少年派的选择，这个时候就不违和了了。 用斧头敲死了一只大鱼以后，哭了，开始感谢印度神。莫名想起了，[[紧急避险]]，如果是神，应该也会认同法律上这个概念吧。 遇到了极度梦幻梦境化的场景，生存资料全部清空，就像马云失去了所有阿里的股票。 开始接受现实，并就事物短缺问题，勇敢直面老虎，以解决问题。 老虎的存在，令他时刻保持警醒，保持希望，这就是我们现实生活中的危机感驱动个人努力吧。 一场让老虎都感到恐惧的风暴，让仅有的生存工具丢失，完完全全一无所有。 靠在一个小岛上，全是树懒，仙境般动画般的景象和 bgm，肯定是假的，应该是梦。给小岛一个全局特写，好像平躺的女人。 靠岸时，瘦骨嶙峋的老虎，头也不回地，留少年派趴在原地，离开了。到此处，就感觉一定程度上暗示，老虎可能是假的，不存在。 有意思了，保险公司说要向公司和社会交代，要求故事是真实可信的，所以少年派向他们讲述了另一个故事，这个立马让人警醒，这个故事，可能才是真的，从来没有动物同船，从来没有帕克老虎。 一句话感想 面对苦难，需要能力，应对毁灭，需要信仰。</description></item><item><title>🎬彗星来的那一夜</title><link>https://clickear.github.io/%E5%BD%97%E6%98%9F%E6%9D%A5%E7%9A%84%E9%82%A3%E4%B8%80%E5%A4%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BD%97%E6%98%9F%E6%9D%A5%E7%9A%84%E9%82%A3%E4%B8%80%E5%A4%9C/</guid><description>牛逼之处 总成本 5 万美元，手持 DV，一个房间内拍摄。
剧情理解 前提： 剧情开始时，就存在多个 [[平行宇宙]]，由于彗星到来，产生相干性（电影英文名 Coherence），使得平行宇宙疯狂相交。 过程： 8 个角色，都是来自不同的平行宇宙，在过程中逐步明白身边的人都不是原来宇宙的人，[[细思极恐]]。短暂的黑屏意味着切屏到不同平行宇宙了。 结局 女主把握命运，闯入了他人的宇宙，因为那时，他人宇宙的电话信号已经接通。</description></item><item><title>🎬怦然心动</title><link>https://clickear.github.io/%E6%80%A6%E7%84%B6%E5%BF%83%E5%8A%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%80%A6%E7%84%B6%E5%BF%83%E5%8A%A8/</guid><description>第一次看是大二的英语课
开局与结尾 开局：
小男孩刚搬家来，新邻居小女孩对其非常主动，也就是一见钟情，怦然心动。但小男孩显然并不是。
女孩误以为男孩对自己也有意思。
3 个重要关联：树，鸡蛋，脑瘫的叔叔
结局：
男孩来女孩院子，种梧桐树，手相碰，和开局呼应上了。
touch me 男孩，女孩视角轮换进行讲述，很声动地展示了男女不同视角，以及人们交往可能产生的各种误解，这种误解，甚至贯穿剧情始终。 小女孩彻底爱上那棵梧桐树的绝美视野，对她来说，在这能看到全世界，那是属于她独有的小天地，她倔强地守护它，但最终还是被砍了。小女孩是一个用情至深的人。 盲猜画家老爸把那颗梧桐树画下来了 我靠，果然画出来送给女儿了。 因为女孩送鸡蛋，但男孩家人不喜欢，因为觉得女孩养鸡的院子很乱很可能鸡蛋有细菌。男孩偷偷扔了，结果女孩每周都送鸡蛋，男孩每次都扔了。女孩享受送鸡蛋敲门时刻，那片刻的独处时间。 鸡蛋问题被发现。现在男孩转换到另一个极端，之前怕被过多骚扰，现在难受她不理自己。 这里就太有意思了，现在角色完全颠倒转换了，以前是女追男，现在变成男追女了。 姐姐没敲门进弟弟房间，看小男孩紧张的样子，以为他在看花花公司，然后说了一句，代我向十月封面女郎问好。哈哈笑死我了。 男孩的地中海发型的老爸真的是充满了自我，刻薄，尖酸，偏见，傲慢。 一句话感想 因为颜值，她爱上他，因为人品，他爱上她。完美演绎了 [[始于颜值，陷于才华，忠于人品]] 的前 2 个阶段。女孩的家庭不富裕，但爸妈真的太棒了，导致女孩能正确处理早恋，但大部分人显然会迷失。</description></item><item><title>🎬星际穿越</title><link>https://clickear.github.io/%E6%98%9F%E9%99%85%E7%A9%BF%E8%B6%8A/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%98%9F%E9%99%85%E7%A9%BF%E8%B6%8A/</guid><description>开头:
未来某天，气候全面恶化，空气里全是沙子。世界又已经回到农民为主的时代。
女儿房间收到奇怪信号，指引了一个坐标，发现了 NASA 还幸存，然后领头博士邀请男主 cuper 去星际旅行 3 个星球，因为土星出现一个虫洞才使得星际旅行成为可能。A 计划是找到 3 个中的宜居地并回地球接走人类，B 计划是带着几万个受精卵建立新文明
结局:
水球，前人飞船已解体，
冰球，前人骗他们来。马特达蒙客串。
宜居球，女主只身前往。
ab 计划都成功了
男主库伯 5 维空间的骚操作结束后，被找到，得知女儿通过他传回来的数据，成功让地球移民至土星</description></item><item><title>🎬泰坦尼克号</title><link>https://clickear.github.io/%E6%B3%B0%E5%9D%A6%E5%B0%BC%E5%85%8B%E5%8F%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%B3%B0%E5%9D%A6%E5%B0%BC%E5%85%8B%E5%8F%B7/</guid><description>10 年前看去电影院看过 3d 高清重置版
开局 一伙人潜入到沉船，想找到钻石，却找到了个戴着海洋之心项链的卧躺女人的一副裸画。 100 岁的 rose 新闻看到这个消息，联系上了他们，以回忆的方式，开始讲故事。 touch me rose 身为笼中的金丝雀，被 jack 的各种自由的故事吸引了。说白了，jack 除了抽烟，基本没有底层人们的各种陋习，谈吐得体，第一次出入上流场合不慌张，还精通画画，rose 就喜欢毕加索和莫奈的画。所以击中了 rose。 上流社会与底层社会，关于吃饭和娱乐的大篇幅描写和对比。 大海就像宇宙 依旧妇女儿童优先。 前面学的吐口水，让 rose 成功挣脱未婚夫，能去找 jack 理智判断肯定充满危险，但浪漫主义感性的 rose，依旧选择拿到斧子去劈开 jack 的手铐 疯狂夺救生船的场景，拍得算克制的，这其实真实情况，肯定更血腥，就像三体里面描写的，人类听说光粒打击要来了，疯狂不等飞船冷却，直接人群中启动飞船一样。 jack 骗 rose 上救生船，到一半，rose 察觉到了，跳下来了。 沉船时刻，船的设计师和船长，都选择留在壁炉前和驾驶室里，也有不少人选择平静接受一切，平静地迎接死亡。 那个给 jack 礼服衣服，号召大家划回去接大家的贵族大妈，真的爱了爱了。 结局:rose 船头扔了海洋之心，并梦中梦到第一次和 jack 相约的时钟前，拥吻。 片尾曲: my heart will go on 为什么这种出轨，世人好像很能接受？ 穷小子和富家女，而不是反之。</description></item><item><title>🎬肖申克的救赎</title><link>https://clickear.github.io/%E8%82%96%E7%94%B3%E5%85%8B%E7%9A%84%E6%95%91%E8%B5%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%82%96%E7%94%B3%E5%85%8B%E7%9A%84%E6%95%91%E8%B5%8E/</guid><description>银行家安迪发现妻子和情夫，想杀但好像其实没杀，是别人啥的，然后被判了无期徒刑。
身陷囹圄
touch me:
安迪帮 狱警办事儿避税，不忘帮同伴要了 3 瓶啤酒。 狱警帮安迪打残废欺负安迪的人 看守图书馆的老头坐了 50 年牢，即将刑满释放，但不想离开，想搞点事继续留在监狱。没成功，但接着出去了，但我觉得他会格格不入，会想办法回去，或者说完全无法适应而在外面死去。 果然自杀了。。 安迪不停写信要图书馆的资助，终于成功了，他说，才花了 6 年。这就是 [[长期主义]] 啊 老黑申请假释 30 年都失败了，这次安迪送了他一个口风琴安慰她。这有点希望 hope 的感觉。就在这之前，老黑还告诉他，在监狱里，不要有希望的念头。 典狱长为了留住 andy，把唯一翻案机会的小帅编造逃狱理由，杀了。 老黑报告了 40 年，出狱后，打工的时候不自觉向经理打报告，申请要上厕所。 结局；老黑没有放弃生命和希望 hope，去找到 andy 了 我的一句话评价 令人流着泪深思的爽片</description></item><item><title>🎬花束般的恋爱</title><link>https://clickear.github.io/%E8%8A%B1%E6%9D%9F%E8%88%AC%E7%9A%84%E6%81%8B%E7%88%B1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%8A%B1%E6%9D%9F%E8%88%AC%E7%9A%84%E6%81%8B%E7%88%B1/</guid><description>最高赞的评论：
你的男朋友，本来读诗集，现在翻成功学；本来玩塞尔达，现在玩消消乐；本来豆瓣骨灰级别用户，现在永久退出豆瓣，加入 996 大军并且被成功洗脑 996 赛高；而你还在读诗歌还在玩塞尔达还在刷豆瓣 —— 所以怎么可能不分手呢？ 和百分百合拍的人说再见。</description></item><item><title>🎬这个杀手不太冷</title><link>https://clickear.github.io/%E8%BF%99%E4%B8%AA%E6%9D%80%E6%89%8B%E4%B8%8D%E5%A4%AA%E5%86%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BF%99%E4%B8%AA%E6%9D%80%E6%89%8B%E4%B8%8D%E5%A4%AA%E5%86%B7/</guid><description>的确没看懂为啥这么高分，找机会再看一遍。</description></item><item><title>📚三体 - 热门批注</title><link>https://clickear.github.io/%E4%B8%89%E4%BD%93-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%89%E4%BD%93-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</guid><description>热门标注 刘慈欣给电子书读者的寄语 《三体》表达了对广漠而寂静的宇宙的敬畏，和对宇宙中可能存在的智慧他者的想象。 6683
刘慈欣 2018 克拉克奖获奖感言 有历史学家说过，人类之所以能够超越地球上的其它物种建立文明，主要是因为他们能够在自己的大脑中创造出现实中不存在的东西。在未来，当人工智能拥有超过人类的智力时，想象力也许是我们对于它们所拥有的惟一优势。 9784
未来像盛夏的大雨，在我们还不及撑开伞时就扑面而来。 12351
他从未长大，但从未停止成长”。 26057
第一章 科学边界 “哼，根本不用做成刀，用那种材料做一根只有头发丝百分之一粗细的线，拦在路上，就能把过往的汽车像切奶酪那样切成两半……啥不能用于犯罪？刮鱼鳞的刀都能！” 1795
金属巨怪淹没在临时施工顶棚的阴影里，更透出那冷峻、粗糙的质感；而一束夕阳金色的光，透过顶棚的孔洞正好投在那个身影上，柔和的暖光照着她那柔顺的头发，照着工作服领口上白皙的脖颈，看上去就像一场狂暴的雷雨后，巨大的金属废墟上开出了一朵娇柔的花…… 3302
一切的一切都导向这样一个结果：物理学从来就没有存在过，将来也不会存在。我知道自己这样做是不负责任的，但别无选择。 2200</description></item><item><title>📚三重门</title><link>https://clickear.github.io/%E4%B8%89%E9%87%8D%E9%97%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%89%E9%87%8D%E9%97%A8/</guid><description/></item><item><title>📚刻意练习</title><link>https://clickear.github.io/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0/</guid><description>&amp;ndash; 写作，编程，总结，教学，表达。都需要我去刻意练习，达到熟练。</description></item><item><title>📚卡片笔记写作法 - 热门批注</title><link>https://clickear.github.io/%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E6%B3%95-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E6%B3%95-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</guid><description>封面 扉页 卡片笔记写作法：如何实现从阅读到写作 170
版权信息 卡片笔记写作法：如何实现从阅读到写作/（德）申克·阿伦斯著；陈琳译.&amp;ndash;北京：人民邮电出版社，2021.7 76
不写，就无法思考 “不写，就无法思考。” 5555
中文版序 卡片盒笔记依赖一种非线性的方式，即缓慢而稳定的改进，促进思维产生持续、微妙的变化，并且事物间相生相依。 4807
应用于不同的工具，并适应个性化的需求。 192
推荐序一 像卢曼一样写卡片 我写作时，手边会放着纸质的卡片。我一般会先在卡片上写下一些灵感，然后再用卡片写作软件将它们正式整合成文章。同样，在阅读时，我也会不断地使用纸质卡片盒与卡片写作软件写下读书心得。 1585
认知科学家将人的信息加工分为两大类，第一类是一阶操作，也就是“认知”本身，你感知的、你记忆的、你学习的、你思考的。第二类是二阶操作，称之为“元认知”，即对自己当前的认知进行监控：“我当前感知到了什么？我当前在记忆什么？我当前在学习什么？我当前在思考什么？”这就是元感知、元记忆、元学习、元思考等。“元认知”也就是认知的认知。 6180</description></item><item><title>📚史蒂夫·乔布斯传 - 热门批注</title><link>https://clickear.github.io/%E5%8F%B2%E8%92%82%E5%A4%AB%E4%B9%94%E5%B8%83%E6%96%AF%E4%BC%A0-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%8F%B2%E8%92%82%E5%A4%AB%E4%B9%94%E5%B8%83%E6%96%AF%E4%BC%A0-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</guid><description>版权信息 那些疯狂到以为自己能够改变世界的人，才能真正改变世界。
主要人物 乙川弘文（Kobun Chino）：加利福尼亚的一位曹洞宗禅师，乔布斯的灵魂导师。
蒂姆·库克（Tim Cook）：坚定，冷静，1998 年被乔布斯任命为苹果首席运营官， 2011 年 8 月接替乔布斯成为苹果 CEO。
比尔·盖茨（Bill Gates）：1955 年出生的另一位电脑天才。
前言 本书是如何诞生的 但后来，通过与他的对话，我发现自己被他的强烈情感所吸引，就如同其他很多人多年来受到的吸引一样。
苹果公司的标识是不是如同我女儿告诉我的一样，是在向伟大的英国计算机先驱阿兰·图灵（Alan Turing）致敬。图灵破译了战争时期德国的电码，最后却食用浸过氰化物的苹果自杀了。乔布斯回复我说，他希望自己曾经考虑过这一点，但实际上并没有。</description></item><item><title>📚围城 - 热门批注</title><link>https://clickear.github.io/%E5%9B%B4%E5%9F%8E-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9B%B4%E5%9F%8E-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</guid><description>版权信息 围在城里的人想逃出来， 城外的人想冲进去， 对婚姻也罢，职业也罢， 人生的愿望大都如此。
版权信息 书名：围城作者：钱钟书
重印前记 事情没有做成的人老有这类根据不充分的信念；我们对采摘不到的葡萄，不但想象它酸，也很可能想象它是分外地甜。
序 这本书整整写了两年。两年里忧世伤生，屡想中止。由于杨绛女士不断的督促，替我挡了许多事，省出时间来，得以锱铢积累地写完。照例这本书该献给她。不过，近来觉得献书也像“致身于国”、“还政于民”等等佳话，只是语言幻成的空花泡影，名说交付出去，其实只仿佛魔术家玩的飞刀，放手而并没有脱手。随你怎样把作品奉献给人，作品总是作者自己的。大不了一本书，还不值得这样精巧地不老实，因此罢了。
一 红海早过了，船在印度洋面上开驶着，但是太阳依然不饶人地迟落早起，侵占去大部分的夜。夜仿佛纸浸了油，变成半透明体；它给太阳拥抱住了，分不出身来，也许是给太阳陶醉了，所以夕照晚霞隐褪后的夜色也带着酡红。
孩子不足两岁，塌鼻子，眼睛两条斜缝，眉毛高高在上，跟眼睛远隔得彼此要害相思病，活像报上讽刺画里中国人的脸。
忠厚老实人的恶毒，像饭里的砂砾或者出骨鱼片里未净的刺，会给人一种不期待的伤痛。
有人叫她“熟食铺子”（charcuterie），因为只有熟食店会把那许多颜色暖热的肉公开陈列；又有人叫她“真理”，因为据说“真理是赤裸裸的”。鲍小姐并未一丝不挂，所以他们修正为“局部的真理”。
吾不惜重资，命汝千里负笈，汝埋头攻读之不暇，而有余闲照镜耶？汝非妇人女子，何须置镜？惟梨园子弟，身为丈夫而对镜顾影，为世所贱。吾不图汝甫离膝下，已濡染恶习，可叹可恨！且父母在，不言老，汝不善体高堂念远之情，以死相吓，丧心不孝，于斯而极！
常聪明地对同学们说：“世间哪有恋爱？压根儿是生殖冲动。”
这一张文凭，仿佛有亚当、夏娃下身那片树叶的功用，可以遮羞包丑；小小一方纸能把一个人的空疏、寡陋、愚笨都掩盖起来。
这事也许是中国自有外交或订商约以来唯一的胜利。</description></item><item><title>📚如何阅读一本书</title><link>https://clickear.github.io/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/</guid><description/></item><item><title>📚学会提问</title><link>https://clickear.github.io/%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE/</guid><description/></item><item><title>📚思考·快与慢</title><link>https://clickear.github.io/%E6%80%9D%E8%80%83%E5%BF%AB%E4%B8%8E%E6%85%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%80%9D%E8%80%83%E5%BF%AB%E4%B8%8E%E6%85%A2/</guid><description/></item><item><title>📚拆掉思维里的强 - 热门批注</title><link>https://clickear.github.io/%E6%8B%86%E6%8E%89%E6%80%9D%E7%BB%B4%E9%87%8C%E7%9A%84%E5%BC%BA-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%8B%86%E6%8E%89%E6%80%9D%E7%BB%B4%E9%87%8C%E7%9A%84%E5%BC%BA-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</guid><description>版权信息 插图 推荐序 让我们的生命有自己的价值 让我们的生命有自己的价值 67
。新东方真正吸引他的，应该是新东方从绝望中寻找希望的精神。 324
古典的理想不仅仅是成为一个新东方的优秀老师，他希望能够通过自己的努力，成为一名优秀的人生道路设计师，向青年人传播他的理念，传递他的生命价值。 216
这种自我剖析与自我超越并存的快感，使阅读这本书变得非常有趣。 93
拆掉思维的栅栏 我发现，有时候限制就是限制本身。你认为做不到，你就真的做不到；你觉得自己可以更强大，你就真的会变得更强大。 2217
受害者天堂的第一个法则叫推卸责任，保住面子。 927
事实上，这个世界根本没有让你舒服得一塌糊涂的环境，必须自己变得强大，才能勇敢地面对这个世界。 1205
但是，怎么办呢？其实核心就是自己去掌控。首先要承认一个残酷的现实——这个社会就是不那么公平，但这并不影响你在社会上快乐地工作。 1217</description></item><item><title>📚白夜行</title><link>https://clickear.github.io/%E7%99%BD%E5%A4%9C%E8%A1%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%99%BD%E5%A4%9C%E8%A1%8C/</guid><description/></item><item><title>📚置身事内</title><link>https://clickear.github.io/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/</guid><description>我的批注：[[置身事内：中国政府与经济发展-兰小欢]]
热门批注：[[📚置身事内 - 热门批注]]
我的感悟</description></item><item><title>📚置身事内 - 热门批注</title><link>https://clickear.github.io/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</guid><description>版权信息 版权信息 置身事内：中国政府与经济发展／兰小欢著．—上海：上海人民出版社，2021 113
献辞 献言 社会进程本是整体，密不可分。所谓经济，不过是研究者从这洪流中人工提炼出的部分事实。何谓经济，本身已然是种抽象，而之后大脑还须经过若干抽象，方能复刻现实。没有什么事是纯粹经济的，其他维度永远存在，且往往更为重要。 7217
前言 从了解现状开始 在我国，政府不但影响“蛋糕”的分配，也参与“蛋糕”的生产，所以我们不可能脱离政府谈经济。 16946
下篇解释这些微观行为对宏观现象的影响，包括城市化和工业化、房价、地区差异、债务风险、国内经济结构失衡、国际贸易冲突等 5006
复旦大学经济学院是研究中国经济问题的重镇，向来重视制度和历史分析，也积极参与现实和政策讨论，我对中国经济的深入学习和研究，是在这里开始的。 1502
上篇 微观机制 第二章介绍 1994 年分税制改革的前因后果。这次改革对地方政府影响深远，改变了地方政府发展经济的模式，催生了“土地财政”和“土地金融”，成为地方政府推动快速城市化和工业化的资金来源。 5353</description></item><item><title>📚解忧杂货店</title><link>https://clickear.github.io/%E8%A7%A3%E5%BF%A7%E6%9D%82%E8%B4%A7%E5%BA%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%A7%A3%E5%BF%A7%E6%9D%82%E8%B4%A7%E5%BA%97/</guid><description/></item><item><title>📚认知觉醒 - 热门批注</title><link>https://clickear.github.io/%E8%AE%A4%E7%9F%A5%E8%A7%89%E9%86%92-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%AE%A4%E7%9F%A5%E8%A7%89%E9%86%92-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</guid><description>版权信息 认知觉醒：开启自我改变的原动力 / 周岭著. &amp;ndash; 北京：人民邮电出版社，2020.9
自序 开启自我改变的原动力 所谓心智，通俗地说，就是我们看待人和事的态度，以及由此做出的判断与选择。
我发现每天有事情做不代表觉醒，每天都努力也不代表觉醒，真正的觉醒是一种发自内心的渴望，立足长远，保持耐心，运用认知的力量与时间做朋友；我发现人与人之间的根本差异是认知能力上的差异，因为认知影响选择，而选择改变命运，所以成长的本质就是让大脑的认知变得更加清晰；
实践和改变才是这本书的核心
人生没有什么定数，不折腾，时间同样会过去，所以，去做总比不做好，开始总比放弃强。只要你心中还有希望，什么时候都是开始的最好时机。
上篇 内观自己，摆脱焦虑 第一章 大脑——一切问题的起源 第一节 大脑：重新认识你自己 为了适应陆地生活，爬行动物演化出了最初的“本能脑”。本能脑的结构很简单，只有一个原始的反射模块，可以让爬行动物对环境快速做出本能反应，比如遇到危险就战斗或逃跑，遇到猎物就捕食，遇到心仪的异性就追求等。
哺乳动物的大脑里也发展出一个独特的情感区域（边缘系统），脑科学家称之为“情绪脑”。</description></item><item><title>📚这样读书就够了</title><link>https://clickear.github.io/%E8%BF%99%E6%A0%B7%E8%AF%BB%E4%B9%A6%E5%B0%B1%E5%A4%9F%E4%BA%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%BF%99%E6%A0%B7%E8%AF%BB%E4%B9%A6%E5%B0%B1%E5%A4%9F%E4%BA%86/</guid><description/></item><item><title>📚金字塔原理</title><link>https://clickear.github.io/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86/</guid><description>[[🔡MECE]]</description></item><item><title>📚金字塔原理 - 热门批注</title><link>https://clickear.github.io/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86-%E7%83%AD%E9%97%A8%E6%89%B9%E6%B3%A8/</guid><description>封面 版权信息 金字塔原理：思考、表达和解决问题的逻辑 中文版序 我们在与人沟通时，需要想清楚3件事：谁是我的听众？他们想听什么？他们想怎样听？ 448
我们都希望在思考、沟通交流、管理下属和解决问题时，重点突出，思路清晰，层次分明。 120
如何搭建框架结构、组织语句的顺序，用最短时间讲清观点，让受众有兴趣、能理解、记得住？ 148
金字塔原理的基本结构是：结论先行，以上统下，归类分组，逻辑递进。先重要后次要，先总结后具体，先框架后细节，先结论后原因，先结果后过程，先论点后论据。 963
前言 各项思想之间只有几种逻辑关系（向上、向下或横向联系） 122
思想才是句子和段落要表达的内容 103
金字塔原理适用于所有需要构建清晰逻辑框架的文章 66
今天的会议可以改在星期四上午11点开吗？因为这样对科林斯和约翰逊都更方便，唐·克利福德也能参加，并且本周只有这一天会议室还没有被预订。 21</description></item><item><title>📹storytelling</title><link>https://clickear.github.io/storytelling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/storytelling/</guid><description>视频内容和感谢 开篇问我们是否有听别人讲 ppt，或者自己讲 ppt，台下人瞌睡的经历。
引导出 原因在于差了 [[📹storytelling]] 讲故事这个环节。
01:16
storytelling 是非常大的概念，可以应用在很多场合。
01:34
只讲 sotrytelling 在 presentation 方面的应用。
[[📹storytelling]] 的 3 个方法 第一层次，演讲开始，用故事产生吸引力和画面感 &amp;ndash; 悬疑，数字，反常识等等 [[🔡SCQA]]：背景，冲突，问题，答案。 &amp;ndash; [[📚金字塔原理]] 冲突和问题，本身就自带故事性 第二层次，分享个人故事 楼下农夫山泉比哇哈哈贵，我却买了它，以这个个人故事展开。 分享错误或失败的经历，更有真实感 07:54 第三层次，想象一个场景 想象听众可能会面临的问题 想象某个严重错误或者灾难性后果 callback，跟脱口秀一样。但容易变成频繁提到自己。 有故事感地描述那个场景 &amp;ndash; 跟 [[📚史蒂夫·乔布斯传 - 热门批注]]，[[《大败局》]] 类似的方式，把历史数据，变成了一个个故事，大气磅礴 presetation 注意点 最终效果，取决于内容。</description></item><item><title>📹【何同学】我做了一个自己打字的键盘...</title><link>https://clickear.github.io/%E4%BD%95%E5%90%8C%E5%AD%A6%E6%88%91%E5%81%9A%E4%BA%86%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E6%89%93%E5%AD%97%E7%9A%84%E9%94%AE%E7%9B%98.../</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%BD%95%E5%90%8C%E5%AD%A6%E6%88%91%E5%81%9A%E4%BA%86%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E6%89%93%E5%AD%97%E7%9A%84%E9%94%AE%E7%9B%98.../</guid><description>【何同学】我做了一个自己打字的键盘&amp;hellip;_哔哩哔哩_bilibili
[[🧑何同学]]，算是[[🧑手工耿]]+软件+硬件+高超视频剪辑技巧的版本。做的都是不可商业量产的东西，没有工业量产的商业价值，但是有娱乐大众的流量价值。确实有趣，值得这么大的流量。</description></item><item><title>📹【罗翔】我们为什么要读书？</title><link>https://clickear.github.io/%E7%BD%97%E7%BF%94%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%AF%BB%E4%B9%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E7%BD%97%E7%BF%94%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%AF%BB%E4%B9%A6/</guid><description>观点理解 00:59 目前社会主流价值观 - 读书为了成功 [[书中自有黄金屋，书中自有颜如玉]]；。是皇帝说的，有种成功主义的功利性色彩。还有吃得苦中苦方为人上人，也类似。 02:15 更高级的目的应该是非功利性的读书，为什么要读非功利性的书 一个人真正的成功不是在他辉煌的时候，有多么风光。关键在，挫折低迷的时候，我们是否依然有勇气继续前行。 &amp;ndash; 逆境中更好地面对 非功利性的阅读，才能给我们真正的人生勇气去面对大风大浪。因为，每个人这一生，一定会遭受苦难。 &amp;ndash; 人生一定会有苦难，就像 [[墨菲定律]]，所以提前做好内心的准备。 聪明人不一定有智慧。非功利性的阅读，能带我们登上高楼，望断天涯路。非功利性的阅读，带我们抵制虚空和虚荣 &amp;ndash; 智慧，不是聪明，不是智能，它从哲学中来，到哲学中去。 06:48 非功利性的阅读，读哪些书 哲学类书籍，所有的哲学，都是为了我们的死亡做准备。 &amp;ndash; 估计罗翔在这里，是把非功利性的阅读 和 阅读哲学 基本画上等号了的。历史，艺术几乎没有提及。 08:29</description></item><item><title>📹回村3天，二舅治好了我的精神内耗 - 视频笔记</title><link>https://clickear.github.io/%E5%9B%9E%E6%9D%913%E5%A4%A9%E4%BA%8C%E8%88%85%E6%B2%BB%E5%A5%BD%E4%BA%86%E6%88%91%E7%9A%84%E7%B2%BE%E7%A5%9E%E5%86%85%E8%80%97-%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%9B%9E%E6%9D%913%E5%A4%A9%E4%BA%8C%E8%88%85%E6%B2%BB%E5%A5%BD%E4%BA%86%E6%88%91%E7%9A%84%E7%B2%BE%E7%A5%9E%E5%86%85%E8%80%97-%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/</guid><description>回村三天，二舅治好了我的精神内耗_哔哩哔哩_bilibili
飞书 - 登录
2022年7月31日 下午 10:40|11分钟27秒
关键词:
姥姥、老头、村里、隔壁村、结婚、村子、大姨、堂弟、木匠、生产队、房子、小孩、人生、北京、镇上、女人、姥爷、县城房子
文字记录:
这是我的二舅，村子里曾经的天才少年。这是我的姥姥，一个每天都在跳 poping 的老太太。他们在这个老屋生活。见他的时候还没美国。二舅上小学是全校第一，上了初中还是全校第一，全市通考。从农村一共收上去三份试卷，其中一份就是二舅的。有一天，二舅发高烧请假回家，隔壁村的医生一天在他屁股上打了四针，二舅就成了残疾。十几岁的二舅躺在床上，再也不想回到学校。老师们三次登门相劝，二舅闭着眼睛横躺在床上，一言不发，像一位断了腿的卧龙先生。
第一年，二舅拒绝下床，他不知道从哪找到了一本赤脚医生手册，疯狂地看了一年。但二舅的腿不是伤了，而是废了，所以久病并不能成医。于是第二年，二舅扔掉了手册，从床上爬了下来，呆坐在天井里观天，像一只大号的青蛙。第三年，二舅不看半天了，看家里来的一个木匠干活。木匠干了三天走了，二舅跟姥爷说他看会了，求姥爷去铁匠铺给自己打做木工的工具。三年来，二舅第一次走出了院门，去生产队给人做板凳，一天做两个，一个一毛钱，可以养活自己了。如是几年。有一天，二舅照常拄着拐来到生产队，队长告诉二舅以后不用来了，生产队没了。二舅问为什么？队长说改革开放了，于是二舅就开始改革开放，游走在镇上的各个村子给人做木工。
有天在路上遇到了当年的那个医生，他跟二舅说要是在今天我早被告倒了，得承包你一辈子。二舅笑着骂他一句，一瘸一拐地又给人干活去了。后来不知道什么手续上的原因，二舅的残疾证怎么都办不下来，他很失望，居然拄着拐辗转去了北京。他想去天安门广场的纪念堂说要去看看他。二舅说改革开放很好，他也好。为什么呢？二舅说他公平，很快，二舅的都屋里就没剩几个钱了。他的一个堂弟在北京当兵，二舅作为军人家属住进了部队，没想到居然混得风生水起。因为二舅不爱搭讪交际，只爱干活，他不知道从哪接到了木工工具。在那个部队条件还很艰苦的年代，给士兵们默默地做了很多的柜子和桌子。
哪个士兵会不喜欢这样的齁妹呢？有一天，二舅的堂弟去澡堂，看见一个老头和二舅正坐在一块泡澡，二舅的堂弟吓得一句话都说不出来，因为那个老头是他只见过几次的一位首长，此刻正蹲在池子里给二舅搓背。后来二舅回到村里，大家都问北京怎么样？二舅说北京人搓背搓得很好。
到了两个妹妹出嫁的年纪，二舅心里很不舍，二舅有自己的表达，大姨和我妈结婚时的所有家具，每一张图纸、每一块木板、每一块玻璃、每一根装饰条、每一个螺丝、每一片漆，都是二舅一个人完成的。你能想象在 80 年代，一个山村的女孩子结婚的时候能拥有这样的一套家具，是多么梦幻的事情吗？姥姥家这么穷，妹妹出嫁有这么一套家具，婆家也会高看一眼，也许就会更好地带自己的妹妹。你可能说我在吹牛，因为这是上海牌的家具，但你忘了这是我的二舅。二舅总有办法什么牌子他都能给你贴上，你还要什么牌子，他还有天津牌、北京牌、香港牌，超豪华。 OK 再后来，年轻的二舅领养了刚出生的宁宁，二舅拼命地在周边做工赚钱，大部分时间都把宁宁寄养在了大姨家里，很少陪伴他。宁宁小时候经常被人在背后议论，不懂礼貌，一个被抛弃了两次的小孩，对这个世界还能有什么礼貌呢？ 10 年前，宁宁和男朋友结婚了，20万出头的县城房子，二舅出了十几万，真不敢想象他是怎么攒下来的。二舅掏光了半辈子积蓄给宁宁买了房子，却开心得要死。这就是中国式的家长，中国式的可敬又可怜的家长卑微地伟大着。</description></item><item><title>📹放弃roam用obsidian的理由</title><link>https://clickear.github.io/%E6%94%BE%E5%BC%83roam%E7%94%A8obsidian%E7%9A%84%E7%90%86%E7%94%B1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E6%94%BE%E5%BC%83roam%E7%94%A8obsidian%E7%9A%84%E7%90%86%E7%94%B1/</guid><description> Why I chose Obsidian over Roam (as a Roam investor) - YouTube
概要 大姐很早期花了 1000 美元买了 10 年 roam，并且用了相当长时间，但当 obsidian 出来以后，依旧放弃了 roam，转用 obsidian。 理由如下 数据 data roam 需要联网才能用，而且数据不属于自己 obsidian 完全本地化，快速且安全 未来 future roam 用自己的专属文件格式，迁移不便，分享也不方便。 obsidian 纯 markdown 文本保存，通用性极强，将来 10 年永远都可以随时搜索到。而且直接给一个 md 文件给同事，他甚至都可以不知道你是用 obsidian 写的，同事用自己的 vscode，atom 等编辑器看 md 文件就行。 公开 public roam 的发布分享功能速度非常慢，而且只支持大纲笔记一种形式。 obsidian 的发布分享，既可以用官方的，也可以自己搞个博客分享。并且不仅支持大纲笔记，也支持传统文本笔记。 性能 perform roam 经常卡住 obsidian 性能是第 5 名的 100 倍 精英主义 ethic roam 的创始人和社区充满精英主义的傲慢。甚至有种传销组织邪教一样的感觉。 而 obsidian 的 2 位创始人，非常愿意倾听用户声音，obsidian 的整个社区也非常的活跃与和平。 价格 price roam 每月 8 美元至少 obsidian 只对同步和发布收费，其他全功能完全免费，对社区的全部插件也都是完全支持开放的态度。</description></item><item><title>📹视频笔记-youtube</title><link>https://clickear.github.io/%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0-youtube/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0-youtube/</guid><description>00:05
这里提到了如何让图，成为 obsidian 的第一公民
00:08</description></item><item><title>📺且试天下</title><link>https://clickear.github.io/%E4%B8%94%E8%AF%95%E5%A4%A9%E4%B8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E4%B8%94%E8%AF%95%E5%A4%A9%E4%B8%8B/</guid><description>看甜宠古装剧放松一下。
更何况 [[杨洋]]和[[赵露思]] 都是我欣赏的那种颜值。我并不需要看所有的东西，都要看演技，看个开心就够了。看完这个剧，我真的开心了，😁😃。</description></item><item><title>📺喜鹊谋杀案</title><link>https://clickear.github.io/%E5%96%9C%E9%B9%8A%E8%B0%8B%E6%9D%80%E6%A1%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%96%9C%E9%B9%8A%E8%B0%8B%E6%9D%80%E6%A1%88/</guid><description>看之前的吸引点 导演、编剧、演员、IP、口碑
主演 66 岁女性。 不多的敢和经典福尔摩斯系列侦探剧叫板的探案类的剧。 粗瞄一眼豆瓣，说是有戏中戏。 看之后的感受 演员演技、服装场景、剧情编排、IP 改编、特色
精彩之处：小说剧情和现实剧情，混合剪辑。让人想起了 [[罗辑]]幻想[[庄颜]] 前身的场景。相同之处，都是和小说中的人物进行深度交谈和对话。不同之处，前者是读小说，后者是创作小说。 丢失的最后一章结局章节，是全剧的线索，贯穿始终。 小说中的人物和现实中的人物，出场太快，混剪太多，没有聚精会神看，容易分辨不出来。 一段话感想 浓浓英伦风，剧中的取景其实比剧情还吸引我。有机会真想去英国生活一段时间。</description></item><item><title>📺天才基本法</title><link>https://clickear.github.io/%E5%A4%A9%E6%89%8D%E5%9F%BA%E6%9C%AC%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%A4%A9%E6%89%8D%E5%9F%BA%E6%9C%AC%E6%B3%95/</guid><description>看之前的吸引点 导演、编剧、演员、IP、口碑
穿越剧，平行时空设定，原著好评率很高。
看之后的感受 演员演技、服装场景、剧情编排、IP 改编、特色
平行时空用，芝士世界，草莓世界，这个说法很可爱。 去别人的平行时空后，平白多出那一段完整的时间经历，回来后保留记忆，一点代价都没付出，这不仅不科学，而且不公平。 老师一张张发卷子，念分数，像极了我的高中。 最后的芝士世界的裴之，想要和草莓世界的裴之交换人生，真的是意料中外，也是情理之中。意外在于，他居然能对只有一个月相处经历的林朝夕念念不忘。情理在于，带有成熟心智的人，套着小孩的皮囊，来到小孩的世界，会对同龄人产生致命吸引力。 让人想到了30岁成熟大叔对20岁小姑娘的全方位碾压，能把后者的情感和心理死死把控和玩转。 一段话感想 除了平行时空的设定，这个剧有意思的点是，没有任何一个反派角色，勉强有的也是平行时空的同DNA的裴之和裴之，林朝夕和林朝夕的对抗。2个平行时空的同一个DNA的人，因为成长轨迹的不同，而表现出极大个人差异性，进一步佐证了，环境和经历对人的决定性作用，而不是智商。算是点题了，过线的天赋+持续的努力=天才基本法。</description></item><item><title>📺异物志</title><link>https://clickear.github.io/%E5%BC%82%E7%89%A9%E5%BF%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E5%BC%82%E7%89%A9%E5%BF%97/</guid><description>看之前的吸引点 导演、编剧、演员、IP、口碑
[[优映文化]]，毛骗的原班人马，不得不看。 不知道原来什么尺度，还是团队实在太没有后台了，居然拖了 6 年才播出，拖了这些演员最好的年华，真 tm 可惜。 背景设定非常有意思，各种有超能力的特殊民国物件，组合使用奇妙无穷。 看之后的感受 演员演技、服装场景、剧情编排、IP 改编、特色
毛骗的小宝现在是纯搞笑担当。邵庄依旧是智力担当。志微这种超贱的感觉，怎么看怎么喜欢。 片尾直接把这个 36 集，变成了大型连续预告片，变成了挖坑天王。 片尾暗示了，除了物件异化，人也异化了。再加上异物的图展示的那么多器具。其实如果往大了写，都抵得上 [[漫威宇宙]] 了。而且他比后者更合理的点在于：不是纯靠战力值比拼。而是可以通过物件组合，用智谋打败对方。 一段话感想 成年版的哆唻 A 梦 + 智力版的漫威宇宙</description></item><item><title>📺重生之门</title><link>https://clickear.github.io/%E9%87%8D%E7%94%9F%E4%B9%8B%E9%97%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%87%8D%E7%94%9F%E4%B9%8B%E9%97%A8/</guid><description>看之前的吸引点 导演、编剧、演员、IP、口碑
张译主演。顺便看看王俊凯和 [[易烊千玺]] 的演技差距。 看之后的感受 演员演技、服装场景、剧情编排、IP 改编、特色
网友都说王俊凯演技不行，一直板着脸，我觉得是因为这个人物就是这样脸谱化的罢了，换谁来演，可能都是这样的感觉。 一段话感想</description></item><item><title>📺风起陇西</title><link>https://clickear.github.io/%E9%A3%8E%E8%B5%B7%E9%99%87%E8%A5%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/%E9%A3%8E%E8%B5%B7%E9%99%87%E8%A5%BF/</guid><description>看之前的吸引点 导演、编剧、演员、IP、口碑
[[🧑马伯庸]] 的 ip，必然逻辑和想象力并重，且看剧情改编如何。 好久没看陈坤出来演戏了。而且是双男主设定，但不知道为什么白宇为啥能主演，也许是 [[沉默的真相]] 让他着实火了。而且他的长相，完完全全一张好人脸。 讲得是三国时期的三十六计使用，讲得是卧底和谍战，也算是另类组合，新鲜题材了。 聂远和常远，俩个人演连襟，不知道剧组怎么称呼他俩，哈哈。 同属马伯庸作品。这部剧和 [[《长安十二时辰》]] 正好可以形成对仗式的对比。 看之后的感受 演员演技、服装场景、剧情编排、IP 改编、特色</description></item></channel></rss>