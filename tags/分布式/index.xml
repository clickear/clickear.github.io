<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>分布式 on</title><link>https://clickear.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/</link><description>Recent content in 分布式 on</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://clickear.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>分布2式算法种类</title><link>https://clickear.github.io/-%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://clickear.github.io/-%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/</guid><description>#分布式
link: 凤凰架构
待办列表 分布式算法-极客时间 常青笔记 分布式写一致性级别（All、[[Quorum机制]]、One、Any） [[多副本]]是分布式中的重要问题，本质上分布式就是解决[[多副本]]的同步问题、共识问题。 [[数据同步]]是直接同步原始数据，状态转移。以同步为代表的数据复制方法。需要每个节点都参与同步，导致可用性太差。 主流做法，是操作转移。类型react中的增量操作。分布式一致性的解决方案是[[状态机复制]]来达到的。 [[Quorum机制]] ([[多数派]])：分布式节点多余一半完成了状态转换，就认为存储成功。 分布2式算法种类 [[拜占庭问题]] 一般而言，在可信环境（比如企业内网）中，系统具有故障容错能力就可以了，常见的算法有二阶段提交协议（2PC）、TCC（Try-Confirm-Cancel）、Paxos 算法、ZAB 协议、Raft 算法、Gossip 协议、Quorum NWR 算法。而在不可信的环境（比如有人做恶）中，这时系统需要具备拜占庭容错能力，</description></item></channel></rss>